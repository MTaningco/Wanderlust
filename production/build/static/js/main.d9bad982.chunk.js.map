{"version":3,"sources":["Globe.jsx","LandmarkInfo.jsx","NewLandmarkTab.jsx","CoordinateFormItem.jsx","NewPathTab.jsx","EditLandmarksTab.jsx","EditPathsTab.jsx","OtherFeatureTab.jsx","Dashboard.jsx","landing.png","SignIn.jsx","LoggedOut.jsx","SignUp.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","justifyContent","alignItems","textAlign","position","zoomInButton","display","backgroundColor","color","boxShadow","left","bottom","zoomOutButton","renderText","Globe","size","paths","landmarks","landmarkHandler","newPath","newLandmark","currentLandmark","editLandmark","subSolarCoordinates","editPath","classes","useState","mouseCoordinates","setMouseCoordinates","oldCoordinates","setOldCoordinates","newCoordinates","setNewCoordinates","isMove","setIsMove","isDrag","setIsDrag","isLoading","setIsLoading","setRenderText","isInitialLoad","setIsInitialLoad","scale","setScale","svgRef","useRef","circle","d3","projection","fitSize","type","precision","pathGenerator","useIdleTimer","timeout","onIdle","event","console","log","setTimeout","drawGlobe","onActive","onAction","events","debounce","getRemainingTime","getLastActiveTime","resume","rotateParams","isCoarse","svg","current","rotate","getRealScale","isDaylight","selectAll","data","join","attr","feature","on","mouseEvent","item","isVisible","drawSphere","land","landCoarse","features","landFine","raise","drawLand","lakes","lakesCoarse","lakesFine","drawLakes","nightLongitude","nightLatitude","style","center","radius","drawCurrentShadow","drawLandOutline","drawLakesOutline","graticule","drawGraticule","landmark","landmark_uid","coordinates","drawCurrentLandmark","isDayTime","isAirPlane","drawArcs","drawTempPath","drawTempLandmark","drawEditPath","drawEditLandmark","id","drawLandmarks","lineGenerator","text","Math","ceil","drawScale","renderExternalUpdate","message","useEffect","className","width","height","ref","onMouseDown","screenX","screenY","onMouseMove","currentMouseCoordinates","scalingFactor","movedCoordinates","onMouseUp","onWheel","prev","newVal","deltaY","min","max","IconButton","variant","onClick","prevVal","Typography","LandmarkInfo","value","index","hidden","margin","descriptionArray","description","split","name","paragraph","map","element","getLandmarkInfoContent","cancelButton","marginLeft","finishEditButton","marginRight","addNode","marginBottom","formFields","NewLandmarkTab","invalidateAuth","createLandmark","updateNewLandmark","setDialogTimer","landmarkName","setLandmarkName","landmarkLatitude","setLandmarkLatitude","landmarkLongitude","setLandmarkLongitude","landmarkDescription","setLandmarkDescription","isProcessing","setIsProcessing","FormControl","fullWidth","InputLabel","htmlFor","Input","placeholder","onChange","target","abs","parseFloat","TextField","label","multiline","rows","Grid","container","justify","Button","body","latitude","longitude","fetch","method","headers","JSON","stringify","then","res","json","path_uid","catch","error","refreshTokenExpiry","CircularProgress","disableShrink","nodeElement","paddingTop","paddingBottom","paddingLeft","paddingRight","deleteButton","right","top","CoordinateFormItem","onLatitudeChange","onLongitudeChange","onDelete","latId","longitudeId","Paper","elevation","NewPathTab","updateNewPath","createPath","setCoordinates","isAirplane","setIsAirplane","setName","handleDeleteNode","newNodes","splice","updateTempPath","newElements","newIsAirplane","newTempPath","undefined","i","length","node","lat","long","push","onElementLatitudeChange","onElementLongitudeChange","square","padding","maxHeight","overflow","FormControlLabel","control","Switch","checked","checkedIcon","icon","prevArray","iconText","isNodesPopulated","path_name","marginTop","EditLandmarksTab","updateLandmark","deleteLandmark","toInformationTab","updateEditLandmark","isEdit","setIsEdit","editId","setEditId","editName","setEditName","editDescription","setEditDescription","editLongitude","setEditLongitude","editLatitude","setEditLatitude","editIndex","setEditIndex","handleLatitudeChange","handleLongitudeChange","handleNameChange","handleDescriptionChange","handleEditLandmark","alert","handleCancelEdit","handleEditLandmarkMode","window","confirm","handleDeleteLandmark","pathTypography","EditPathsTab","deletePath","updatePath","updateEditPath","setIsAirPlane","handleSwitchChange","handleEditPath","is_airplane","handleNewNode","path","handleEditPathMode","handleDeletePath","OtherFeatureTab","drawerValue","toolbar","fontWeight","toolbarMenu","drawerPaper","globeGrid","flexGrow","rightPanel","Dashboard","timerRef","autoLogoutRef","tabValue","setTabValue","isAuth","setIsAuth","isDialogOpen","setIsDialogOpen","isInactivityDialogOpen","setIsInactivityDialogOpen","setPaths","setLandmarks","setSubSolarCoordinates","isPathsLoaded","setIsPathsLoaded","isLandmarksLoaded","setIsLandmarksLoaded","isSubSolarLoaded","setIsSubsolarLoaded","windowSize","setWindowSize","setDrawerValue","setCurrentLandmark","setNewPath","setNewLandmark","setEditLandmark","setEditPath","handleTabChange","newValue","sortPaths","a","b","toLowerCase","getUserPaths","sort","sortLandmarks","getRefeshTokenExpiry","response","getUserLandmarks","refreshTokenResponse","clearDialogTimer","err","getSubsolarPoint","items","itemToUpdate","prevValCopy","pathsCopy","changeDrawerFeatureHandler","currentLandmarkHandler","prevValue","prevValueCopy","prevArrayCopy","pathCopy","handleDialogClose","handleInactivityDialogClose","time","currentDate","Date","refreshDate","clearTimeout","msToDialog","getTime","msToAutoLogout","getUserData","interval","setInterval","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","clearInterval","Drawer","anchor","open","paper","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","onAccountMenuClicked","spacing","align","Skeleton","xs","AppBar","Tabs","aria-label","Tab","minWidth","to","pathname","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","link","textDecoration","fontSize","banner","backgroundImage","Image","backgroundSize","SignIn","isTokenValid","setIsTokenValid","username","setUsername","password","setPassword","handleUsernameChange","handlePasswordChange","handleSignIn","component","required","autoComplete","autoFocus","timerIcon","LoggedOut","direction","flexDirection","maxWidth","form","checkIcon","clearIcon","hint","veryWeakStrength","weakStrength","fairStrength","goodStrength","strongStrength","dialog","SignUp","email","setEmail","isUsernameTaken","setIsUsernameTaken","dialogTitle","setDialogTitle","dialogContent","setDialogContent","strengthIndicator","count","strengths","RegExp","test","hasNumber","hasSpecial","hasMixed","getUsernameStatus","isexist","Container","textField","renderPasswordStrength","createMuiTheme","palette","App","document","title","ThemeProvider","CssBaseline","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d9bad982.chunk.js","sourcesContent":["//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport * as d3 from 'd3';\r\nimport * as topojson from \"topojson\";\r\nimport { useIdleTimer } from 'react-idle-timer';\r\n\r\n//Imports from self defined structures\r\n//https://github.com/martynafford/natural-earth-geojson\r\nimport landFine from \"./jsonData/ne_10m_land.json\";\r\nimport landCoarse from \"./jsonData/ne_110m_land.json\";\r\nimport lakesFine from \"./jsonData/ne_10m_lakes.json\";\r\nimport lakesCoarse from \"./jsonData/ne_110m_lakes.json\";\r\n//https://s3-us-west-2.amazonaws.com/s.cdpn.io/215059/cities-200000.json\r\n//https://public.opendatasoft.com/api/records/1.0/search/?dataset=geonames-all-cities-with-a-population-1000&q=&rows=10000&sort=population&pretty_print=true&format=json&fields=population,coordinates,name\r\nimport lightsFine from \"./jsonData/geonames-all-cities-with-a-population-1000.json\";\r\nimport lightsCoarse from \"./jsonData/cities-200000.json\";//TODO: use if performance is fixed\r\nimport { Button, CircularProgress, IconButton, LinearProgress, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    textAlign: \"center\",\r\n    position: 'relative'\r\n  },\r\n  zoomInButton: {\r\n    display: \"block\",\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    '&:hover': {\r\n      color: \"white\",\r\n      backgroundColor: 'gray',\r\n      boxShadow: 'none',\r\n    },\r\n    position: 'absolute',\r\n    left: \"83%\",\r\n    bottom: \"150px\",\r\n  },\r\n  zoomOutButton: {\r\n    display: \"block\",\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    '&:hover': {\r\n      color: \"white\",\r\n      backgroundColor: 'gray',\r\n      boxShadow: 'none',\r\n    },\r\n    position: 'absolute',\r\n    left: \"83%\",\r\n    bottom: \"90px\",\r\n  },\r\n  renderText: {\r\n    position: 'absolute',\r\n    left: \"15%\",\r\n    bottom: '30px',\r\n  }\r\n}));\r\n\r\nconst QUARTER_DIAMETER = 12742/4.0;\r\n\r\nfunction Globe({size, paths, landmarks, landmarkHandler, newPath, newLandmark, currentLandmark, editLandmark, subSolarCoordinates, editPath}) {\r\n    \r\n  const classes = useStyles();\r\n  \r\n  //States\r\n  const [mouseCoordinates, setMouseCoordinates] = useState(null);         //state for initially pressing down the mouse button's position\r\n  const [oldCoordinates, setOldCoordinates] = useState([180, -25]);   //state for the position of the globe during inactivity (units in -longitude, -latitude)\r\n  const [newCoordinates, setNewCoordinates] = useState(null);             //state for updating the old coordinates\r\n  const [isMove, setIsMove] = useState(false);\r\n  const [isDrag, setIsDrag] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [renderText, setRenderText] = useState(\"\");\r\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\r\n  const [scale, setScale] = useState(1);\r\n\r\n  //Constants\r\n  const svgRef = useRef();\r\n  const circle = d3.geoCircle();\r\n  const projection = d3.geoOrthographic()\r\n    .fitSize([size, size], {type: \"Sphere\"})\r\n    .precision(0.1);\r\n  const pathGenerator = d3.geoPath().projection(projection);\r\n\r\n  /**\r\n  * Handles the mouse down event in the Globe.\r\n  * @param {*} event - the mouse event\r\n  */\r\n  const onMouseDownHandler = (event) => {\r\n    setMouseCoordinates([event.screenX, event.screenY]);\r\n  };\r\n\r\n  /**\r\n   * Gets the Radius of the city.\r\n   * @param {number} population - the population of the city\r\n   */\r\n  const getCityRadius = (population) => {\r\n    if (population < 5000)\r\n      return 0.02\r\n    else if (population < 10000)\r\n      return 0.05\r\n    else if (population < 50000)\r\n      return 0.07\r\n    else if (population < 100000)\r\n      return 0.1\r\n    else\r\n      return 0.2\r\n  };\r\n\r\n  /**\r\n   * Handles when the user has become idle.\r\n   * @param {*} event - the event during idle.\r\n   */\r\n  const handleOnIdle = event => {\r\n    //TODO: fix fine rendering issue\r\n    // if(event !== null && event.type !== \"mousedown\"){\r\n      // console.log(\"event for idle\", event);\r\n      // console.log(\"redrawing globe\");\r\n      // console.log(\"isMove=\", isMove);\r\n      console.log(\"ismove\", isMove);\r\n      console.log(\"!isDrag\", !isDrag);\r\n    if(isMove && !isDrag){\r\n      // console.log(\"redrawing globe\");\r\n      // drawGlobe(oldCoordinates, scale, false);\r\n      setIsMove(false);\r\n      \r\n      setIsLoading(true);\r\n      setRenderText(\"Rendering full resolution...\");\r\n      // console.log(\"redrawing globe for idle, this is the current landmark\", currentLandmark);\r\n      setTimeout(() => {\r\n        // console.log(\"timeout done for redrawing globe for idle, this is the current landmark\", currentLandmark);\r\n        drawGlobe(oldCoordinates, false);\r\n        setIsLoading(false);\r\n      }, 400);\r\n    }\r\n    // }\r\n    // console.log(event);\r\n  }\r\n    \r\n  /**\r\n   * Handles when the user has become active.\r\n   * @param {*} event - the event during active\r\n   */\r\n  const handleOnActive = event => {\r\n    //TODO: fix fine rendering issue\r\n    setIsDrag(false);\r\n    console.log(\"mouse up done\");\r\n    // console.log(event.path[1].tagName === \"svg\");\r\n    // if(event.path[1].tagName === \"svg\"){\r\n    //     if(newCoordinates){\r\n    //         setMouseCoordinates(null);\r\n    //         setOldCoordinates(newCoordinates);\r\n    //         setNewCoordinates(null);\r\n    //     }\r\n    //     setMouseCoordinates(null);\r\n    // }\r\n  }\r\n    \r\n  /**\r\n   * Handles when the user has done an action.\r\n   * @param {*} event - the event during an action\r\n   */\r\n  const handleOnAction = (event) => {}\r\n     \r\n  //Idle timer and parameters\r\n  const { getRemainingTime, getLastActiveTime, resume } = useIdleTimer({\r\n    timeout: 1000 * 1.5,\r\n    onIdle: handleOnIdle,\r\n    onActive: handleOnActive,\r\n    onAction: handleOnAction,\r\n    events: ['mouseup', 'mousewheel', 'keydown'],\r\n    debounce: 500\r\n  })\r\n\r\n  /**\r\n   * Handler for when the mouse has been moved.\r\n   * @param {*} event - the event of when the mouse has been moved\r\n   */\r\n  const onMouseMoveHandler = (event) => {\r\n    //TODO: fix fine rendering issue\r\n    if(mouseCoordinates){\r\n      // console.log(\"mouse move\", e);\r\n      // console.log(\"drawing the globe coarse\");\r\n      var currentMouseCoordinates = [event.screenX, event.screenY];\r\n      var scalingFactor = 3.0 * getRealScale()/200.0;\r\n      var movedCoordinates = [oldCoordinates[0] + (currentMouseCoordinates[0] - mouseCoordinates[0])/scalingFactor, oldCoordinates[1] - (currentMouseCoordinates[1] - mouseCoordinates[1])/scalingFactor];\r\n      movedCoordinates[1] = movedCoordinates[1] < -90 ? -90 :\r\n        movedCoordinates[1] > 90 ?  90 : movedCoordinates[1];\r\n      // projection.rotate(movedCoordinates);\r\n      setNewCoordinates(movedCoordinates);\r\n      setIsMove(true);\r\n      setIsDrag(true);\r\n      drawGlobe(movedCoordinates, true);\r\n      // console.log(\"mouse moved while dragged\");\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handler when the mouse click is now up.\r\n   * @param {*} event - the event of when the mouse click is now up\r\n   */\r\n  const onMouseUpHandler = (event) => {\r\n    //TODO: fix fine rendering issue\r\n    // console.log(\"mouseuphandler activated\");\r\n    if(newCoordinates){\r\n      // setMouseCoordinates(null);\r\n      setOldCoordinates(newCoordinates);\r\n      setNewCoordinates(null);\r\n    }\r\n    setIsDrag(false);\r\n    setMouseCoordinates(null);\r\n    console.log(\"mouse up done\");\r\n  };\r\n\r\n  /**\r\n   * Draws a sphere.\r\n   * @param {*} svg - the svg used to draw the sphere.\r\n   * @param {boolean} isDaylight - the parameter for night time styles\r\n   */\r\n  const drawSphere = (svg, isDaylight) => {\r\n    svg\r\n    .selectAll(\".sphere\")\r\n    .data([{type: \"Sphere\"}])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"sphere\")\r\n    .attr(\"fill\", isDaylight ? \"#dde\" : \"#1c458c\")\r\n    .attr(\"d\", feature => pathGenerator(feature))\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Draws the grid.\r\n   * @param {*} svg - the svg used to draw the graticule.\r\n   * @param {boolean} isDaylight - the parameter for night time styles.\r\n   */\r\n  const drawGraticule = (svg, isDaylight) => {\r\n    const graticule = d3.geoGraticule10();\r\n    svg\r\n    .selectAll(\".mesh\")\r\n    .data([graticule])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"mesh\")\r\n    .attr(\"fill-opacity\",\"0\")\r\n    .attr(\"stroke\", isDaylight ? \"#ccf\" : \"gray\")\r\n    .attr(\"stroke-opacity\", \"0.5\")\r\n    .attr(\"stroke-width\", isDaylight ? 1 : 0.3)\r\n    .attr(\"d\", feature => pathGenerator(feature))\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    })\r\n    .raise();\r\n  };\r\n\r\n  /**\r\n   * Draws the land.\r\n   * @param {*} svg - the svg used to draw the land\r\n   * @param {boolean} isCoarse - the parameter for fine detail or coarse detail\r\n   * @param {boolean} isDaylight - the parameter for night time styles\r\n   */\r\n  const drawLand = (svg, isCoarse, isDaylight) => {\r\n    //Using local json data that is of type Topology\r\n    const land = isCoarse ? landCoarse.features : landFine.features;\r\n    svg\r\n    .selectAll(\".country\")\r\n    .data(land)\r\n    .join(\"path\")\r\n    .attr(\"class\", \"country\")\r\n    .attr(\"fill\", isDaylight ? \"#edd\" : \"#f5c684\")\r\n    .attr(\"stroke\", isDaylight ? \"#faa\" : \"#b89463\")\r\n    .attr(\"stroke-width\", 0.5)\r\n    .attr(\"d\", feature => pathGenerator(feature))\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    })\r\n    .raise();\r\n\r\n    //Using external json data that is of type Topology\r\n    // d3.json(\"https://cdn.jsdelivr.net/npm/world-atlas@2.0.2/land-10m.json\").then(res => {\r\n    //     const countries1 = topojson.feature(isCoarse ? landCoarse : res, isCoarse ? landCoarse.objects.land : res.objects.land).features;\r\n    //     console.log(countries1);\r\n    //     svg\r\n    //     .selectAll(\".country\")\r\n    //     .data(countries1)\r\n    //     .join(\"path\")\r\n    //     .attr(\"id\", feature => console.log(feature))\r\n    //     .attr(\"class\", \"country\")\r\n    //     .attr(\"fill\", feature => \"#edd\")//daytime\r\n    //     // .attr(\"fill\", feature => \"#114\")//nighttime\r\n    //     .attr(\"stroke\", feature => \"#faa\")//daytime\r\n    //     // .attr(\"stroke\", feature => \"#004\")//nighttime\r\n    //     .attr(\"d\", feature => pathGenerator(feature));\r\n    // });\r\n\r\n    //Using local json data that is of type FeatureCollection\r\n    // svg\r\n    //     .selectAll(\".country\")\r\n    //     .data(dataCoarse.features)\r\n    //     .join(\"path\")\r\n    //     .attr(\"class\", \"country\")\r\n    //     // .attr(\"fill\", feature => \"#edd\")//daytime\r\n    //     .attr(\"fill\", feature => \"#114\")//nighttime\r\n    //     // .attr(\"stroke\", feature => \"#faa\")//daytime\r\n    //     .attr(\"stroke\", feature => \"#004\")//nighttime\r\n    //     .attr(\"d\", feature => pathGenerator(feature));\r\n  };\r\n\r\n  /**\r\n   * Draws the land outline.\r\n   * @param {*} svg - the svg used to draw the land outline\r\n   * @param {boolean} isCoarse - the parameter for fine detail or coarse detail\r\n   * @param {boolean} isDaylight - the parameter for night time styles\r\n   */\r\n  const drawLandOutline = (svg, isCoarse, isDaylight) => {\r\n    //Using local json data that is of type Topology\r\n    const land = isCoarse ? landCoarse.features : landFine.features;\r\n    svg\r\n    .selectAll(\".countryOutline\")\r\n    .data(land)\r\n    .join(\"path\")\r\n    .attr(\"class\", \"countryOutline\")\r\n    .attr(\"fill-opacity\", \"0\")\r\n    .attr(\"stroke\", \"#b89463\")\r\n    .attr(\"stroke-width\", 0.3)\r\n    // .attr(\"stroke-opacity\", \"0.8\")\r\n    .attr(\"d\", feature => pathGenerator(feature))\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    })\r\n    .raise();\r\n  };\r\n\r\n  /**\r\n   * Draws the lakes.\r\n   * @param {*} svg - the svg used to draw the land\r\n   * @param {boolean} isCoarse - the parameter for fine detail or coarse detail\r\n   * @param {boolean} isDaylight - the parameter for night time styles\r\n   */\r\n  const drawLakes = (svg, isCoarse, isDaylight) => {\r\n    const lakes = isCoarse ? lakesCoarse.features :lakesFine.features;\r\n    svg\r\n    .selectAll(\".lakes\")\r\n    .data(lakes)\r\n    .join(\"path\")\r\n    .attr(\"class\", \"lakes\")\r\n    .attr(\"fill\", isDaylight ? \"#edd\" : \"#1c458c\")\r\n    .attr(\"stroke\", isDaylight ? \"#faa\" : \"#b89463\")\r\n    .attr(\"stroke-width\", 0.5)\r\n    .attr(\"d\", feature => pathGenerator(feature))\r\n    .raise()\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Draws the lake outline.\r\n   * @param {*} svg - the svg used to draw the lake outline\r\n   * @param {boolean} isCoarse - the parameter for fine detail or coarse detail\r\n   * @param {boolean} isDaylight - the parameter for night time styles\r\n   */\r\n  const drawLakesOutline = (svg, isCoarse, isDaylight) => {\r\n    const lakes = isCoarse ? lakesCoarse.features :lakesFine.features;\r\n    svg\r\n    .selectAll(\".lakesOutline\")\r\n    .data(lakes)\r\n    .join(\"path\")\r\n    .attr(\"class\", \"lakesOutline\")\r\n    .attr(\"fill-opacity\", \"0\")\r\n    .attr(\"stroke\", isDaylight ? \"#faa\" : \"#b89463\")\r\n    .attr(\"stroke-width\", 0.3)\r\n    .attr(\"d\", feature => pathGenerator(feature))\r\n    .raise()\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Draws city lights based on population sizes in cities.\r\n   * @param {*} svg - the svg used to draw city lights\r\n   * @param {boolean} isCoarse - the parameter for fine detail or coarse detail\r\n   */\r\n  const drawLights = (svg, isCoarse) => {\r\n    if(isCoarse){\r\n      svg\r\n      .selectAll(\".lights\")\r\n      .data(lightsCoarse)\r\n      .join(\"path\")\r\n      .attr(\"class\", \"lights\")\r\n      .style(\"fill\", \"#ff8\")\r\n      .attr(\"fill-opacity\",\"0.4\")\r\n      .attr(\"d\", cityElement => pathGenerator(circle.center([parseFloat(cityElement[3]), parseFloat(cityElement[2])]).radius(getCityRadius(cityElement[0]))()))\r\n      .raise();\r\n    }else{\r\n      svg\r\n        .selectAll(\".lights\")\r\n        .data(lightsFine)\r\n        .join(\"path\")\r\n        .attr(\"class\", \"lights\")\r\n        .style(\"fill\", \"#ff8\")\r\n        .attr(\"fill-opacity\",\"0.4\")\r\n        .attr(\"d\", cityElement => pathGenerator(circle.center(cityElement.geometry.coordinates).radius(getCityRadius(cityElement.fields.population))()))\r\n        .raise();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Draws the landmarks.\r\n   * @param {*} svg - the svg used to draw the landmarks\r\n   * @param {boolean} isDaylight - the parameter used for night time styles\r\n   */\r\n  const drawLandmarks = (svg, isDaylight) => {\r\n    // Format of one element of data\r\n    //   {\r\n    //     id: \"landmark_1\",\r\n    //     landmark_uid: 1,\r\n    //     name: \"Manila / Marikina\",\r\n    //     description: \"First Hometown. Revisited 2011, 2013, 2017, 2018, and 2019.\",\r\n    //     coordinates: [120.9842, 14.5995]\r\n    //   }\r\n    svg\r\n    .selectAll(\".landmarks\")\r\n    .data(landmarks)\r\n    .join(\"path\")\r\n    .attr(\"class\", \"landmarks\")\r\n    .attr(\"id\", landmark => `${landmark.id}`)\r\n    .style(\"fill\", \"black\")\r\n    .style(\"stroke\", \"white\")\r\n    .attr(\"stroke-width\", 0.2)\r\n    .attr(\"fill-opacity\",\"0.3\")\r\n    .on(\"mouseover\", (mouseEvent, item) => {\r\n      d3.select(`#${item.id}`)\r\n      .style(\"fill\", \"red\")\r\n      .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.3)()));\r\n    } )\r\n    .on(\"mouseout\", (mouseEvent, item) => {\r\n      d3.select(`#${item.id}`)\r\n      .style(\"fill\", isDaylight ? \"black\" : \"black\")\r\n      .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.1)()));\r\n    } )\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      landmarkHandler(true, item);\r\n    })\r\n    .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.1)()))\r\n    .raise();\r\n  };\r\n\r\n  /**\r\n   * Draws the current selected landmark.\r\n   * @param {*} svg - the svg used to draw the current selected landmark\r\n   * @param {boolean} isDaylight - the parameter used for night time styles\r\n   */\r\n  const drawCurrentLandmark = (svg, isDaylight) => {\r\n    // console.log(\"this is the current landmark from draw landmark\", currentLandmark);\r\n    //format of one element of data\r\n    // {\r\n    //     coordinates: [0, 0],\r\n    //     isVisible: false\r\n    // }\r\n    svg\r\n    .selectAll(\".currentLandmark\")\r\n    .data([currentLandmark])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"currentLandmark\")\r\n    .attr(\"id\", landmark => `current_${landmark.landmark_uid}`)\r\n    .style(\"fill\", \"red\")\r\n    .attr(\"fill-opacity\",\"0.3\")\r\n    .attr(\"visibility\", landmark => landmark.isVisible ? \"visible\" : \"hidden\")\r\n    .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.2)()))\r\n    .raise();\r\n  };\r\n\r\n  /**\r\n   * Draws the current world night time.\r\n   * @param {*} svg - the svg used to draw the world night time\r\n   * @param {boolean} isDaylight - the parameter used for night time styles\r\n   */\r\n  const drawCurrentShadow = (svg, isDaylight) => {\r\n    var nightLongitude = subSolarCoordinates[0] + 180;\r\n    var nightLatitude = -subSolarCoordinates[1];\r\n    var opacity = \"0.3\";\r\n    svg\r\n    .selectAll(\".shadow\")\r\n    .data([90, 90-6, 90-12, 90-18])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"shadow\")\r\n    .attr(\"id\", `shadow`)\r\n    .style(\"fill\", \"black\")\r\n    .attr(\"fill-opacity\",opacity)\r\n    .attr(\"d\", data => pathGenerator(circle.center([nightLongitude, nightLatitude]).radius(data)()))\r\n    .raise()\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Draws the current new landmark.\r\n   * @param {*} svg - the svg used to draw the current new landmark\r\n   * @param {boolean} isDaylight - the parameter used for night time styles\r\n   */\r\n  const drawTempLandmark = (svg, isDaylight) => {\r\n    //format of one element of data\r\n    // {\r\n    //     coordinates: [0, 0],\r\n    //     isVisible: false\r\n    //   }\r\n    svg\r\n    .selectAll(\".newLandmark\")\r\n    .data([newLandmark])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"newLandmark\")\r\n    .attr(\"id\", `newLandmark`)\r\n    .style(\"fill\", \"red\")\r\n    .attr(\"fill-opacity\",\"0.5\")\r\n    .attr(\"visibility\", landmark => landmark.isVisible ? \"visible\" : \"hidden\")\r\n    .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.1)()))\r\n    .raise();\r\n  };\r\n\r\n  /**\r\n   * Draws the current modified landmark.\r\n   * @param {*} svg - the svg used to draw the current modified landmark\r\n   * @param {boolean} isDaylight - the parameter used for night time styles\r\n   */\r\n  const drawEditLandmark = (svg, isDaylight) => {\r\n    //format of one element of data\r\n    // {\r\n    //     coordinates: [0, 0],\r\n    //     isVisible: false\r\n    //   }\r\n    svg\r\n    .selectAll(\".editLandmark\")\r\n    .data([editLandmark])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"editLandmark\")\r\n    .attr(\"id\", landmark => `edit`)\r\n    .style(\"fill\", \"#73ff00\")\r\n    .attr(\"fill-opacity\",\"0.5\")\r\n    .attr(\"stroke-width\", 1)\r\n    .attr(\"stroke\",\"black\")\r\n    .attr(\"visibility\", landmark => landmark.isVisible ? \"visible\" : \"hidden\")\r\n    .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.1)()))\r\n    .raise();\r\n  };\r\n\r\n  /**\r\n   * Draws the arcs.\r\n   * @param {*} svg - the svg used to draw the arcs\r\n   * @param {boolean} isDayTime - the parameter used for night time styles\r\n   */\r\n  const drawArcs = (svg, isDayTime) => {\r\n    //The format of one element of data is \r\n    // { \r\n    //   type: \"LineString\", \r\n    //   coordinates: [[0, 0], ...], \r\n    //   id:\"path_x\", \r\n    //   path_uid: x, \r\n    //   isAirPlane: true\r\n    // }\r\n    svg\r\n    .selectAll(\".arcOutline\")\r\n    .data(paths)\r\n    .join(\"path\")\r\n    .attr(\"class\", \"arcOutline\")\r\n    // .transition()\r\n    .attr(\"fill-opacity\", \"0\")\r\n    .attr(\"stroke-opacity\", feature => feature.isAirPlane ? 0.5 : 1)\r\n    .attr(\"stroke\", feature => isDayTime ? \"black\" : \"white\")\r\n    .attr(\"stroke-width\", feature => feature.isAirPlane ? 0.8 : 0.2)\r\n    .attr(\"d\", feature =>pathGenerator(feature))\r\n    .raise()\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    })\r\n    .raise();\r\n      \r\n    svg\r\n    .selectAll(\".arc\")\r\n    .data(paths)\r\n    .join(\"path\")\r\n    .attr(\"class\", \"arc\")\r\n    // .transition()\r\n    .attr(\"fill-opacity\", \"0\")\r\n    .attr(\"stroke-opacity\", feature => feature.isAirPlane ? 0.5 : 1)\r\n    .attr(\"stroke\", feature => isDayTime ? \"black\" : \"black\")\r\n    .attr(\"stroke-width\", feature => feature.isAirPlane ? 1 : 0.5)\r\n    .style(\"stroke-dasharray\", feature => feature.isAirPlane ? (\"15, 3\") : (\"3\", \"3\"))\r\n    .attr(\"d\", feature =>pathGenerator(feature))\r\n    .raise()\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    })\r\n    .raise();\r\n  };\r\n\r\n  /**\r\n   * Draws the current new path.\r\n   * @param {*} svg - the svg used to draw the current new path\r\n   * @param {boolean} isDayTime - the parameter used for night time styles\r\n   */\r\n  const drawTempPath = (svg, isDayTime) => {\r\n    //format of one element of data\r\n    // {\r\n    //     type: \"LineString\", \r\n    //     coordinates: [],\r\n    //     isAirPlane: true\r\n    //   }\r\n    // console.log(newPath);\r\n    // console.log(newPath)\r\n    svg\r\n    .selectAll(\".newPath\")\r\n    .data([newPath])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"newPath\")\r\n    // .transition()\r\n    .attr(\"fill-opacity\",\"0\")\r\n    .attr(\"stroke\", feature => feature.isAirPlane ? \"red\" : \"red\")\r\n    .style(\"stroke-dasharray\", feature => feature.isAirPlane ? (\"15, 3\") : (\"3\", \"3\"))\r\n    .attr(\"stroke-opacity\", feature => 1)\r\n    .attr(\"stroke-width\", feature => 1)\r\n    .attr(\"d\", feature =>pathGenerator(feature))\r\n    .raise();\r\n  };\r\n\r\n  /**\r\n   * Draws the current modified path.\r\n   * @param {*} svg - the svg used to draw the current modified path\r\n   * @param {boolean} isDaylight - the parameter used for night time styles\r\n   */\r\n  const drawEditPath = (svg, isDayTime) => {\r\n    //format of one element of data\r\n    // {\r\n    //     type: \"LineString\",\r\n    //     coordinates: [],\r\n    //     isAirPlane: true\r\n    // }\r\n    svg\r\n    .selectAll(\".editPath\")\r\n    .data([editPath])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"editPath\")\r\n    .attr(\"fill-opacity\",\"0\")\r\n    .attr(\"stroke\", feature => feature.isAirPlane ? \"#73ff00\" : \"#73ff00\")\r\n    .style(\"stroke-dasharray\", feature => feature.isAirPlane ? (\"15, 3\") : (\"3\", \"3\"))\r\n    .attr(\"stroke-opacity\", feature => 1)\r\n    .attr(\"stroke-width\", feature => 1)\r\n    .attr(\"d\", feature =>pathGenerator(feature))\r\n    .raise();\r\n  };\r\n\r\n  /**\r\n   * Draws the scale.\r\n   * @param {*} svg - the svg used to draw the scale\r\n   */\r\n  const drawScale = (svg) => {\r\n\r\n    var lineGenerator = d3.line();\r\n    svg\r\n    .selectAll(\".scale\")\r\n    .data([1])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"scale\")\r\n    // .append('path')\r\n    .style(\"stroke\", \"white\")\r\n    .style(\"stroke-width\", 1)\r\n    .style(\"fill-opacity\", 0)\r\n    .style(\"stroke-opacity\", 1)\r\n    .attr(\"d\", lineGenerator([[size * 0.73, size * 0.98], [size * 0.73, size * 0.98 + 10], [size * 0.73 + size/4.0, size * 0.98 + 10], [size * 0.73 + size/4.0, size * 0.98]]))\r\n    .raise();\r\n    \r\n    svg\r\n    .selectAll(\".textScale\")\r\n    .data([1])\r\n    .join(\"text\")\r\n    .attr(\"class\", \"textScale\")\r\n    .attr(\"dx\", size * 0.73 + size/8.0)\r\n    .attr(\"dy\", size * 0.98)\r\n    .style(\"text-anchor\", \"middle\")\r\n    .style(\"fill\", \"white\")\r\n    .text(`${Math.ceil(QUARTER_DIAMETER/scale * 100)/100} km`)\r\n    .raise();\r\n  }\r\n\r\n  /**\r\n   * Draws the globe.\r\n   * @param {Array<number>} rotateParams - the rotation parameters to position the globe\r\n   * @param {number} scaleParams - the scale parameter to scale the globe\r\n   * @param {boolean} isCoarse - the parameter for fine detail or coarse detail\r\n   */\r\n  const drawGlobe = (rotateParams, isCoarse) => {\r\n    const svg = d3.select(svgRef.current);\r\n    projection.rotate(rotateParams).scale(getRealScale());\r\n\r\n    var isDaylight = false;\r\n    \r\n    drawSphere(svg, isDaylight);\r\n    drawLand(svg, isCoarse, isDaylight);\r\n    drawLakes(svg, isCoarse, isDaylight);\r\n    drawCurrentShadow(svg, isDaylight);\r\n\r\n    drawLandOutline(svg, isCoarse, isDaylight);\r\n    drawLakesOutline(svg, isCoarse, isDaylight);\r\n\r\n    if(!isDaylight){\r\n      // drawLights(svg, false);\r\n    }\r\n    \r\n    drawGraticule(svg, isDaylight);    \r\n\r\n    drawCurrentLandmark(svg, isDaylight);\r\n    drawArcs(svg, isDaylight);\r\n    drawTempPath(svg, isDaylight);\r\n    drawTempLandmark(svg, isDaylight);\r\n    drawEditPath(svg, isDaylight);\r\n    drawEditLandmark(svg, isDaylight);\r\n    drawLandmarks(svg, isDaylight);\r\n\r\n    drawScale(svg);\r\n  };\r\n\r\n  const getRealScale = () => {\r\n    return scale * size/2.0;\r\n  }\r\n\r\n  /**\r\n   * Handles the mouse wheel event.\r\n   * @param {*} event - the event triggered\r\n   */\r\n  const mouseWheelHandler = (event) => {\r\n    setScale(prev => {\r\n      let newVal = prev - event.deltaY/110;\r\n      return Math.min(Math.max(newVal, 1), 25.484);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handles the zoom in event.\r\n   */\r\n  const zoomInHandler = () => {\r\n    setScale(prevVal => Math.min(prevVal + 1, 25.484));\r\n  }\r\n\r\n  /**\r\n   * Handles the zoom out event.\r\n   */\r\n  const zoomOutHandler = () => {\r\n    setScale(prevVal => Math.max(prevVal - 1, 1));\r\n  }\r\n\r\n  /**\r\n   * Renders the external message while rendering the globe.\r\n   * @param {string} message \r\n   * @param {boolean} isCoarse \r\n   */\r\n  const renderExternalUpdate = (message, isCoarse) => {\r\n    setIsLoading(true);\r\n    setRenderText(message);\r\n    setTimeout(() => {\r\n      drawGlobe(oldCoordinates, isCoarse);\r\n      setIsLoading(false);\r\n      if(isCoarse){\r\n        setIsMove(true);\r\n      }\r\n    }, isCoarse ? 100 : 800);\r\n  }\r\n\r\n  //Use effect hook.\r\n  useEffect(() => {\r\n    drawGlobe(oldCoordinates, true);\r\n    setIsMove(true);\r\n  }, [scale])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      // console.log(\"subsolar\");\r\n      renderExternalUpdate(\"Updating earth shadow...\", isDrag);\r\n    }\r\n  }, [subSolarCoordinates])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      // console.log(\"current landmark updated\", currentLandmark);\r\n      renderExternalUpdate(\"Rendering clicked landmark...\", true);\r\n    }\r\n  }, [currentLandmark.isVisible, currentLandmark.coordinates])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      // console.log(\"else\");\r\n      renderExternalUpdate(\"Rendering for resized window...\", false);\r\n    }\r\n  }, [size])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      // console.log(\"newLandmark\", newLandmark);\r\n      renderExternalUpdate(\"Rendering new landmark...\", true);\r\n    }\r\n  }, [newLandmark])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      // console.log(\"edit landmark\");\r\n      renderExternalUpdate(\"Rendering edited landmark...\", true);\r\n    }\r\n  }, [editLandmark])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      // console.log(\"edit path\");\r\n      renderExternalUpdate(\"Rendering edited path...\", true);\r\n    }\r\n  }, [editPath.coordinates, editPath.isAirPlane])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      // console.log(\"new path\");\r\n      renderExternalUpdate(\"Rendering new path...\", true);\r\n    }\r\n  }, [newPath])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      // console.log(\"paths\");\r\n      renderExternalUpdate(\"Updating paths...\", false);\r\n    }\r\n  }, [paths])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      // console.log(\"else\");\r\n      renderExternalUpdate(\"Updating landmarks...\", false);\r\n    }\r\n  }, [landmarks])\r\n\r\n  useEffect(() => {\r\n    console.log(\"paths\");\r\n    setIsLoading(true);\r\n    setRenderText(\"Rendering globe...\");\r\n    setTimeout(() => {\r\n      drawGlobe(oldCoordinates, scale, false);\r\n      setIsLoading(false);\r\n      setIsInitialLoad(false);\r\n    }, 800);\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <svg width={size} height={size} ref={svgRef}\r\n        onMouseDown={onMouseDownHandler} \r\n        onMouseMove={onMouseMoveHandler} \r\n        onMouseUp={onMouseUpHandler}\r\n        onWheel={mouseWheelHandler}>\r\n      </svg>\r\n      <IconButton  size=\"medium\" variant=\"contained\" className={classes.zoomInButton} onClick={zoomInHandler}>\r\n        <AddIcon/>\r\n      </IconButton>\r\n      <IconButton  size=\"medium\" variant=\"contained\" className={classes.zoomOutButton} onClick={zoomOutHandler}>\r\n        <RemoveIcon/>\r\n      </IconButton>\r\n      {isLoading && <Typography className={classes.renderText}>{renderText}</Typography>}\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Globe;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction LandmarkInfo({ currentLandmark, value, index}) {\r\n  /**\r\n   * Gets the landmark information.\r\n   */\r\n  const getLandmarkInfoContent = () => {\r\n    if (currentLandmark.isVisible) {\r\n      var description = currentLandmark.description;\r\n      var descriptionArray = description.split(\"\\n\");\r\n      return (\r\n        <div>\r\n          <Typography variant=\"h4\">\r\n            {currentLandmark.name}\r\n          </Typography>\r\n          <Typography variant=\"h6\" paragraph>\r\n            Latitude: {currentLandmark.coordinates[1]}, Longitude: {currentLandmark.coordinates[0]}\r\n          </Typography>\r\n          {\r\n            descriptionArray.map(element => {\r\n              return (\r\n                <Typography variant=\"h6\" paragraph>\r\n                  {element}\r\n                </Typography>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div>\r\n          <Typography variant=\"h4\">\r\n            Click on a Landmark\r\n          </Typography>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div hidden={value !== index} style={{margin: \"20px\"}}>\r\n      <Typography variant=\"h5\">\r\n        Landmark Information\r\n      </Typography>\r\n      <br/>\r\n      {getLandmarkInfoContent()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandmarkInfo;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport { Input, Typography, CircularProgress, Grid } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  cancelButton: {\r\n    marginLeft: \"10px\", \r\n  },\r\n  finishEditButton: {\r\n    marginRight: \"10px\", \r\n  },\r\n  addNode: {\r\n    marginBottom: \"40px\"\r\n  },\r\n  formFields: {\r\n    marginBottom: \"20px\"\r\n  }\r\n}));\r\n\r\nfunction NewLandmarkTab({value, index, invalidateAuth, createLandmark, updateNewLandmark, setDialogTimer}) {\r\n    \r\n  const classes = useStyles();\r\n\r\n  //States\r\n  const [landmarkName, setLandmarkName] = useState(\"\");\r\n  const [landmarkLatitude, setLandmarkLatitude] = useState(\"\");\r\n  const [landmarkLongitude, setLandmarkLongitude] = useState(\"\");\r\n  const [landmarkDescription, setLandmarkDescription] = useState(\"\");\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  /**\r\n   * Handles the description change\r\n   * @param {*} event - the text event \r\n   */\r\n  const handleDescriptionChange = (event) => {\r\n    setLandmarkDescription(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles the name change.\r\n   * @param {*} event - the text event\r\n   */\r\n  const handleNameChange = (event) => {\r\n    setLandmarkName(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Handles the latitude change.\r\n   * @param {*} event - the text event\r\n   */\r\n  const handleLatitudeChange = (event) => {\r\n    if(event.target.value === \"\"){\r\n      updateNewLandmark(false, null);\r\n    }\r\n    if(Math.abs(event.target.value) <= 90){\r\n      setLandmarkLatitude(parseFloat(event.target.value));\r\n\r\n      if(landmarkLongitude !== \"\" && event.target.value !== \"\"){\r\n        updateNewLandmark(true, [landmarkLongitude, parseFloat(event.target.value)]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles the longitude change.\r\n   * @param {*} event - the text event\r\n   */\r\n  const handleLongitudeChange = (event) => {\r\n    if(event.target.value === \"\"){\r\n      updateNewLandmark(false, null);\r\n    }\r\n    if(Math.abs(event.target.value) <= 180){\r\n      setLandmarkLongitude(parseFloat(event.target.value));\r\n\r\n      if(event.target.value !== \"\" && landmarkLatitude !== \"\"){\r\n        updateNewLandmark(true, [parseFloat(event.target.value), landmarkLatitude]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles the add landmark event.\r\n   */\r\n  const handleAddLandmark = () => {\r\n    if(!(landmarkName === \"\" || landmarkLatitude === \"\" || landmarkLongitude === \"\")){\r\n      setIsProcessing(true);\r\n      const body = {\r\n        landmarkName: landmarkName,\r\n        landmarkDescription: landmarkDescription,\r\n        latitude: parseFloat(landmarkLatitude),\r\n        longitude: parseFloat(landmarkLongitude)\r\n      }\r\n  \r\n      fetch(`/landmarks`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setLandmarkName(\"\");\r\n        setLandmarkLatitude(\"\");\r\n        setLandmarkLongitude(\"\");\r\n        setLandmarkDescription(\"\");\r\n        setTimeout(() => {\r\n          setIsProcessing(false);\r\n          createLandmark({\r\n            id: `landmark_${res.landmark_uid}`,\r\n            path_uid: res.landmark_uid,\r\n            name: landmarkName,\r\n            description: landmarkDescription,\r\n            coordinates: [parseFloat(landmarkLongitude), parseFloat(landmarkLatitude)]\r\n          });\r\n        }, 500);\r\n      })\r\n      .catch((error) => {\r\n        fetch(`/users/refreshToken`, {\r\n          method: \"POST\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          setDialogTimer(res.refreshTokenExpiry);\r\n          fetch(`/landmarks`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n          })\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            setLandmarkName(\"\");\r\n            setLandmarkLatitude(\"\");\r\n            setLandmarkLongitude(\"\");\r\n            setLandmarkDescription(\"\");\r\n            setTimeout(() => {\r\n              setIsProcessing(false);\r\n              createLandmark({\r\n                id: `landmark_${res.landmark_uid}`,\r\n                path_uid: res.landmark_uid,\r\n                name: landmarkName,\r\n                description: landmarkDescription,\r\n                coordinates: [parseFloat(landmarkLongitude), parseFloat(landmarkLatitude)]\r\n              });\r\n            }, 500);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            invalidateAuth();\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          invalidateAuth();\r\n        });\r\n      });//TODO: check if processing needs to be set to false here\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setLandmarkName(\"\");\r\n    setLandmarkDescription(\"\");\r\n    setLandmarkLongitude(\"\");\r\n    setLandmarkLatitude(\"\")\r\n  };\r\n\r\n  return (\r\n    <form hidden={value !== index} style={{margin: \"20px\"}}>\r\n      <Typography variant=\"h5\">\r\n        Create a New Landmark\r\n      </Typography>\r\n      <FormControl fullWidth>\r\n        <InputLabel htmlFor=\"landmarkLatitude\">Latitude</InputLabel>\r\n        <Input \r\n          type=\"number\" \r\n          id=\"landmarkLatitude\" \r\n          placeholder=\"Enter value between -90 to 90\" \r\n          name=\"Latitude\"\r\n          value={landmarkLatitude}\r\n          onChange={handleLatitudeChange}/>\r\n      </FormControl>\r\n      <FormControl fullWidth\r\n        className={classes.formFields}>\r\n        <InputLabel htmlFor=\"landmarkLongitude\">Longitude</InputLabel>\r\n        <Input \r\n          type=\"number\" \r\n          id=\"landmarkLongitude\" \r\n          placeholder=\"Enter value between -180 to 180\" \r\n          name=\"Longitude\"\r\n          value={landmarkLongitude}\r\n          onChange={handleLongitudeChange}/>\r\n      </FormControl>\r\n      <TextField \r\n        id=\"landmarkName\" \r\n        label=\"Landmark Name\" \r\n        placeholder=\"e.g. Vancouver, BC, Canada\" \r\n        value={landmarkName}\r\n        onChange={handleNameChange} \r\n        fullWidth\r\n        className={classes.formFields}/>\r\n      <TextField\r\n        id=\"standard-multiline-static\"\r\n        label=\"Description\"\r\n        placeholder=\"Enter a description about the landmark\" \r\n        multiline\r\n        rows={12}\r\n        value={landmarkDescription}\r\n        onChange={handleDescriptionChange} \r\n        fullWidth\r\n        className={classes.formFields}/>\r\n      <Grid container justify=\"center\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleAddLandmark} className={classes.finishEditButton}>\r\n          {isProcessing && <CircularProgress size={24} color='secondary' disableShrink />}\r\n          {!isProcessing && 'Create Landmark'}\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={handleReset} className={classes.cancelButton}>\r\n          {isProcessing && <CircularProgress size={24} color='primary' disableShrink />}\r\n          {!isProcessing && 'Reset Values'}\r\n        </Button>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n \r\nexport default NewLandmarkTab;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport { Input, Typography, Paper, FormControl, InputLabel } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  nodeElement: {\r\n    position: 'relative',\r\n    marginBottom: \"10px\", \r\n    paddingTop: \"20px\",\r\n    paddingBottom: \"20px\",\r\n    paddingLeft: \"10px\",\r\n    paddingRight:\"10px\",\r\n    backgroundColor: \"#525252\"\r\n  },\r\n  deleteButton: {\r\n    position: 'absolute',\r\n    right: '10px',\r\n    top: '10px',\r\n    color: \"white\",\r\n    '&:hover': {\r\n      color: \"white\",\r\n      backgroundColor: 'gray',\r\n      boxShadow: 'none',\r\n    }\r\n  }\r\n}));\r\n\r\nfunction CoordinateFormItem({latitude, longitude, onLatitudeChange, onLongitudeChange, onDelete, index}) {\r\n  const classes = useStyles();\r\n\r\n  var latId = `nodeLatitude1_${index}`;\r\n  var longitudeId = `nodeLongitude_${index}`;\r\n\r\n  return (\r\n    <Paper className={classes.nodeElement} elevation={2} key={index}>\r\n      <Typography>Node {index + 1}</Typography>\r\n      <FormControl fullWidth>\r\n        <InputLabel htmlFor={latId}>Latitude</InputLabel>\r\n        <Input \r\n          type=\"number\" \r\n          id={latId}\r\n          placeholder=\"Enter value between -90 to 90\" \r\n          name=\"Latitude\"\r\n          value={latitude}\r\n          onChange={(event) => onLatitudeChange(event, index)} />\r\n      </FormControl>\r\n      <FormControl fullWidth>\r\n        <InputLabel htmlFor={longitudeId}>Longitude</InputLabel>\r\n        <Input \r\n          type=\"number\" \r\n          id={longitudeId}\r\n          placeholder=\"Enter value between -180 to 180\" \r\n          name=\"Longitude\"\r\n          value={longitude}\r\n          onChange={(event) => onLongitudeChange(event, index)} />\r\n      </FormControl>\r\n      <IconButton color=\"secondary\" className={classes.deleteButton} onClick={() => onDelete(index)}>\r\n        <CloseIcon/>\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default CoordinateFormItem;","//Imports from libraries\r\nimport React, { useState } from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Input, CircularProgress, Paper, TextField, Grid } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport AirplanemodeActiveIcon from '@material-ui/icons/AirplanemodeActive';\r\nimport CommuteIcon from '@material-ui/icons/Commute';\r\nimport CoordinateFormItem from \"./CoordinateFormItem\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  cancelButton: {\r\n    marginLeft: \"10px\", \r\n    marginBottom: \"50vh\",\r\n  },\r\n  finishEditButton: {\r\n    marginRight: \"10px\", \r\n    marginBottom: \"50vh\"\r\n  },\r\n  addNode: {\r\n    marginBottom: \"40px\"\r\n  },\r\n}));\r\n\r\nfunction NewPathTab({value, index, invalidateAuth, updateNewPath, createPath, setDialogTimer}) {\r\n    \r\n  const classes = useStyles();\r\n\r\n  //NewPathTab states\r\n  const [coordinates, setCoordinates] = useState([]);\r\n  const [isAirplane, setIsAirplane] = useState(true);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n\r\n  /**\r\n   * Handles the name change of the edited landmark.\r\n   * @param {*} event - the event for the name change\r\n   */\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Handles creating a new node.\r\n   */\r\n  const handleNewNode = () => {\r\n    setCoordinates(prevArray => [...prevArray, [\"\", \"\"]]);\r\n  }\r\n\r\n  /**\r\n   * Handles creating a new path.\r\n   */\r\n  const handleNewPath = () => {\r\n    var isNodesPopulated = true;\r\n\r\n    for(var i = 0; i < coordinates.length; i++){\r\n      if(coordinates[i][0] === \"\" || coordinates[i][1] === \"\"){\r\n        isNodesPopulated = false;\r\n      }\r\n    }\r\n    \r\n    if(isNodesPopulated && coordinates.length >= 2){\r\n      setIsProcessing(true);\r\n      const body = {\r\n        coordinates: [...coordinates], \r\n        isAirPlane: isAirplane,\r\n        path_name: name\r\n      }\r\n  \r\n      fetch(`/paths`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setCoordinates([]);\r\n        setName(\"\");\r\n        setTimeout(() => {\r\n          setIsProcessing(false);\r\n          createPath({\r\n            type: \"LineString\", \r\n            coordinates: [...coordinates], \r\n            id:`path_${res.path_uid}`,\r\n            path_uid: res.path_uid,\r\n            isAirPlane: isAirplane,\r\n            path_name: name\r\n          });\r\n        }, 500);\r\n      })\r\n      .catch((error) => {\r\n        fetch(`/users/refreshToken`, {\r\n          method: \"POST\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          setDialogTimer(res.refreshTokenExpiry);\r\n          fetch(`/paths`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n          })\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            setCoordinates([]);\r\n            setName(\"\");\r\n            setTimeout(() => {\r\n              setIsProcessing(false);\r\n              createPath({\r\n                type: \"LineString\", \r\n                coordinates: [...coordinates], \r\n                id:`path_${res.path_uid}`,\r\n                path_uid: res.path_uid,\r\n                isAirPlane: isAirplane,\r\n                path_name: name\r\n              });\r\n            }, 500);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            invalidateAuth();\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          invalidateAuth();\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles deleting a node.\r\n   * @param {*} index - the index of the node to delete\r\n   */\r\n  const handleDeleteNode = (index) => {\r\n    var newNodes = [...coordinates];\r\n    newNodes.splice(index, 1);\r\n\r\n    setCoordinates(newNodes);\r\n    updateTempPath(newNodes);\r\n  };\r\n\r\n  /**\r\n   * Updates the temporary path.\r\n   * @param {*} newElements - the coordinates used to show the temporary path\r\n   * @param {*} newIsAirplane - (optional) the boolean airplane state\r\n   */\r\n  const updateTempPath = (newElements, newIsAirplane) => {\r\n    var isAirplaneVal = newIsAirplane !== undefined ? newIsAirplane : isAirplane;\r\n\r\n    var newTempPath = {\r\n      type: \"LineString\", \r\n      coordinates: [],\r\n      isAirPlane: isAirplaneVal\r\n    };\r\n\r\n    for(var i = 0; i < newElements.length; i++){\r\n      var node = newElements[i];\r\n      var lat = node[1];\r\n      var long = node[0];\r\n\r\n      newTempPath.coordinates.push([long !== \"\" ? long : 0, lat !== \"\" ? lat : 0])\r\n    }\r\n    updateNewPath(newTempPath);\r\n  };\r\n\r\n  /**\r\n   * Handles a latitude field being changed.\r\n   * @param {*} event - the text event \r\n   * @param {number} index - the index of the latitude to change\r\n   */\r\n  const onElementLatitudeChange = (event, index) => {\r\n    var newElements = [...coordinates];\r\n    let item = {...newElements[index]};\r\n\r\n    if(Math.abs(parseFloat(event.target.value)) <= 90){\r\n      item[1] = parseFloat(event.target.value);\r\n    }\r\n    else if(event.target.value === \"\"){\r\n      item[1] = event.target.value;\r\n    }\r\n    \r\n    newElements[index] = item;\r\n\r\n    setCoordinates(newElements);\r\n    updateTempPath(newElements);\r\n  };\r\n\r\n  /**\r\n   * Handles a longitude field being changed.\r\n   * @param {*} event - the text event\r\n   * @param {number} index - the index of the node\r\n   */\r\n  const onElementLongitudeChange = (event, index) => {\r\n    var newElements = [...coordinates];\r\n    let item = {...newElements[index]};\r\n\r\n    if(Math.abs(parseFloat(event.target.value)) <= 180){\r\n      item[0] = parseFloat(event.target.value);\r\n    }\r\n    else if(event.target.value === \"\"){\r\n      item[0] = event.target.value;\r\n    }\r\n\r\n    newElements[index] = item;\r\n    \r\n    setCoordinates(newElements);\r\n    updateTempPath(newElements);\r\n  };\r\n\r\n  /**\r\n   * Handles the switch state being changed.\r\n   * @param {*} event - the switch event\r\n   */\r\n  const handleSwitchChange = (event) => {\r\n    setIsAirplane(event.target.checked);\r\n    updateTempPath(coordinates, event.target.checked);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setName(\"\");\r\n    setCoordinates([]);\r\n    updateTempPath([]);\r\n  };\r\n\r\n  return (\r\n    <Paper hidden={value !== index} square style={{padding: \"20px\", maxHeight: \"calc(100vh - 50px)\", overflow: 'auto'}} elevation={0}>\r\n      <Typography variant=\"h5\">\r\n        Create a New Path\r\n      </Typography>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch \r\n            checked={isAirplane} \r\n            onChange={handleSwitchChange} \r\n            name=\"checkedA\" \r\n            checkedIcon={<AirplanemodeActiveIcon/>}\r\n            icon={<CommuteIcon/>}/>\r\n        }\r\n        label=\"Travel Type\"/>\r\n      <TextField \r\n        id=\"pathName\" \r\n        label=\"Path Name\" \r\n        placeholder=\"e.g. LAX - HKG or California Trip 1\" \r\n        value={name}\r\n        onChange={handleNameChange}\r\n        fullWidth\r\n        style={{marginBottom: \"10px\"}}/>\r\n        {\r\n          coordinates.map((element, index) => {\r\n            return (\r\n              <CoordinateFormItem\r\n                latitude={element[1]}\r\n                longitude={element[0]}\r\n                onLatitudeChange={onElementLatitudeChange}\r\n                onLongitudeChange={onElementLongitudeChange}\r\n                onDelete={handleDeleteNode}\r\n                index={index}/>\r\n            );\r\n          })\r\n        }\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleNewNode} fullWidth className={classes.addNode}> \r\n          <AddIcon className={classes.iconText}/> Add Node\r\n        </Button>\r\n      \r\n        <Grid container justify=\"center\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleNewPath} className={classes.finishEditButton}>\r\n            {isProcessing && <CircularProgress size={24} color='secondary' disableShrink />}\r\n            {!isProcessing && 'Create Path'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={handleReset} className={classes.cancelButton}>\r\n            {isProcessing && <CircularProgress size={24} color='primary' disableShrink />}\r\n            {!isProcessing && 'Reset Values'}\r\n          </Button>\r\n        </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n \r\nexport default NewPathTab;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport { Input, Typography, CircularProgress, Paper, FormControl, InputLabel, TextField, Grid } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  nodeElement: {\r\n    position: 'relative',\r\n    marginTop: \"10px\", \r\n    marginBottom: \"10px\", \r\n    paddingTop: \"20px\",\r\n    paddingBottom: \"20px\",\r\n    paddingLeft: \"10px\",\r\n    paddingRight:\"10px\",\r\n    backgroundColor: \"#525252\"\r\n  },\r\n  iconText: {\r\n    marginRight: \"10px\",\r\n    marginLeft: \"10px\"\r\n  },\r\n  cancelButton: {\r\n    marginLeft: \"10px\", \r\n  },\r\n  finishEditButton: {\r\n    marginRight: \"10px\", \r\n  },\r\n  formFields: {\r\n    marginBottom: \"20px\"\r\n  }\r\n}));\r\n\r\nfunction EditLandmarksTab({value, index, invalidateAuth, updateLandmark, deleteLandmark, landmarks, toInformationTab, updateEditLandmark, setDialogTimer}) {\r\n    \r\n  const classes = useStyles();\r\n\r\n  //States\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editId, setEditId] = useState(-1);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [editName, setEditName] = useState(\"\");\r\n  const [editDescription, setEditDescription] = useState(\"\");\r\n  const [editLongitude, setEditLongitude] = useState(\"\");\r\n  const [editLatitude, setEditLatitude] = useState(\"\");\r\n  const [editIndex, setEditIndex] = useState(-1);\r\n\r\n  /**\r\n   * Handles the latitude change of the edited landmark.\r\n   * @param {*} event - the event for the latitude change\r\n   */\r\n  const handleLatitudeChange = (event) => {\r\n    if(event.target.value === \"\"){\r\n      updateEditLandmark(false, null);\r\n    }\r\n\r\n    if(Math.abs(event.target.value) <= 90){\r\n      setEditLatitude(event.target.value);\r\n      if(editLongitude !== \"\" && event.target.value !== \"\"){\r\n        updateEditLandmark(true, [editLongitude, parseFloat(event.target.value)]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles the longitude change of the edited landmark.\r\n   * @param {*} event - the event for the longitude change\r\n   */\r\n  const handleLongitudeChange = (event) => {\r\n    if(event.target.value === \"\"){\r\n      updateEditLandmark(false, null);\r\n    }\r\n\r\n    if(Math.abs(event.target.value) <= 180){\r\n      setEditLongitude(event.target.value);\r\n      if(editLatitude !== \"\" && event.target.value !== \"\"){\r\n        updateEditLandmark(true, [parseFloat(event.target.value), editLatitude]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles the name change of the edited landmark.\r\n   * @param {*} event - the event for the name change\r\n   */\r\n  const handleNameChange = (event) => {\r\n    setEditName(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Handles the description change of the edited landmark.\r\n   * @param {*} event - the event for the desription change\r\n   */\r\n  const handleDescriptionChange = (event) => {\r\n    setEditDescription(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Handles editing the landmark.\r\n   */\r\n  const handleEditLandmark = () => {\r\n    if(editId !== -1 && editName !== \"\" && editLongitude !== \"\" && editLatitude !== \"\"){\r\n      setIsProcessing(true);\r\n      const body = {\r\n        landmark_uid: editId,\r\n        name: editName,\r\n        description: editDescription,\r\n        coordinates: [editLongitude, editLatitude]\r\n      };\r\n\r\n      fetch(`/landmarks`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setIsEdit(false);\r\n        setIsProcessing(false);\r\n        setTimeout(() => {\r\n          updateLandmark({\r\n            landmark_uid: editId,\r\n            name: editName,\r\n            description: editDescription,\r\n            coordinates: [editLongitude, editLatitude]\r\n          }, editIndex);\r\n          setEditIndex(-1);\r\n        }, 500);\r\n      })\r\n      .catch((error) => {\r\n        fetch(`/users/refreshToken`, {\r\n          method: \"POST\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          setDialogTimer(res.refreshTokenExpiry);\r\n          fetch(`/landmarks`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n          })\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            setIsEdit(false);\r\n            setIsProcessing(false);\r\n            setTimeout(() => {\r\n              updateLandmark({\r\n                landmark_uid: editId,\r\n                name: editName,\r\n                description: editDescription,\r\n                coordinates: [editLongitude, editLatitude]\r\n              }, editIndex);\r\n              setEditIndex(-1);\r\n            }, 500);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            invalidateAuth();\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          invalidateAuth();\r\n        });\r\n      });\r\n    }\r\n    else{\r\n      alert('A field is missing! Cannot update landmark.')\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles canceling out of the edit mode.\r\n   */\r\n  const handleCancelEdit = () => {\r\n    updateEditLandmark(false, null);\r\n    setIsEdit(false);\r\n    setEditIndex(-1);\r\n  };\r\n\r\n  /**\r\n   * Handles changing to the edit landmark mode.\r\n   * @param {*} landmark - the landmark to edit\r\n   * @param {number} index - the index of the landmark \r\n   */\r\n  const handleEditLandmarkMode = (landmark, index) => {\r\n    setIsEdit(true);\r\n    setEditId(landmark.landmark_uid);\r\n    setEditName(landmark.name);\r\n    setEditDescription(landmark.description);\r\n    setEditLongitude(landmark.coordinates[0]);\r\n    setEditLatitude(landmark.coordinates[1]);\r\n    setEditIndex(index);\r\n    updateEditLandmark(true, [landmark.coordinates[0], landmark.coordinates[1]]);\r\n  };\r\n\r\n  /**\r\n   * Handles deleting the landmark.\r\n   * @param {*} landmark - the landmark to delete\r\n   * @param {number} index - the index of the landmark\r\n   */\r\n  const handleDeleteLandmark = (landmark, index) => {\r\n    let isConfirmed = window.confirm(`Are you sure you want to delete this landmark?\\n\\n${landmark.name}\\nlongitude:${landmark.coordinates[0]}\\nlatitude:${landmark.coordinates[1]}\\n\\n${landmark.description}`);\r\n    if(isConfirmed){\r\n      setIsProcessing(true);\r\n      const body = {\r\n        landmark_uid: landmark.landmark_uid\r\n      };\r\n      fetch(`/landmarks`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setIsProcessing(false);\r\n        setIsEdit(false);\r\n        setTimeout(() => {\r\n          deleteLandmark(landmark.landmark_uid, index);\r\n        }, 500);\r\n      })\r\n      .catch((error) => {\r\n        //access token is invalid, try to refresh the access token and try again\r\n        fetch(`/users/refreshToken`, {\r\n          method: \"POST\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          setDialogTimer(res.refreshTokenExpiry);\r\n          fetch(`/landmarks`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n          })\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            setIsProcessing(false);\r\n            setIsEdit(false);\r\n            setTimeout(() => {\r\n              deleteLandmark(landmark.landmark_uid, index);\r\n            }, 500);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            invalidateAuth();\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          invalidateAuth();\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the landmark content.\r\n   */\r\n  const getEditLandmarkContent = () => {\r\n    return (\r\n      <form>\r\n        <FormControl fullWidth>\r\n        <InputLabel htmlFor=\"landmarkLatitude\">Latitude</InputLabel>\r\n        <Input \r\n          type=\"number\" \r\n          id=\"landmarkLatitude\" \r\n          placeholder=\"Enter value between -90 to 90\" \r\n          name=\"Latitude\"\r\n          value={editLatitude}\r\n          onChange={handleLatitudeChange}/>\r\n        </FormControl>\r\n        <FormControl fullWidth\r\n          className={classes.formFields}>\r\n          <InputLabel htmlFor=\"landmarkLongitude\">Longitude</InputLabel>\r\n          <Input \r\n          type=\"number\" \r\n          id=\"landmarkLongitude\" \r\n          placeholder=\"Enter value between -180 to 180\" \r\n          name=\"Longitude\"\r\n          value={editLongitude}\r\n          onChange={handleLongitudeChange}/>\r\n        </FormControl>\r\n        <TextField \r\n          id=\"landmarkName\" \r\n          label=\"Landmark Name\" \r\n          placeholder=\"e.g. Vancouver, BC, Canada\" \r\n          value={editName}\r\n          onChange={handleNameChange}\r\n          fullWidth\r\n          className={classes.formFields}/>\r\n        <TextField\r\n          id=\"standard-multiline-static\"\r\n          label=\"Description\"\r\n          placeholder=\"Enter a description about the landmark\" \r\n          multiline\r\n          rows={12}\r\n          maxHeight=\"500px\"\r\n          value={editDescription}\r\n          onChange={handleDescriptionChange}\r\n          fullWidth\r\n          className={classes.formFields}/>\r\n        <Grid container justify=\"center\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleEditLandmark} className={classes.finishEditButton}>\r\n            {isProcessing && <CircularProgress size={24} color='secondary' disableShrink />}\r\n            {!isProcessing && 'Finish Edit'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={handleCancelEdit} className={classes.cancelButton}>\r\n            {isProcessing && <CircularProgress size={24} color='primary' disableShrink />}\r\n            {!isProcessing && 'Cancel Edit'}\r\n          </Button>\r\n        </Grid>\r\n    </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper hidden={value !== index} square style={{padding: \"20px\", maxHeight: \"calc(100vh - 50px)\", overflow: 'auto'}} elevation={0}>\r\n      <Typography variant=\"h5\">\r\n        {isEdit ? \"Edit Landmark\" : \"Landmark List\"}\r\n      </Typography>\r\n      {\r\n        !isEdit && landmarks.map((element, index) => {\r\n          return(\r\n            <Paper className={classes.nodeElement} elevation={2} key={element.id}>\r\n              <IconButton>\r\n                <MyLocationIcon/>\r\n              </IconButton>\r\n              <IconButton onClick={() => toInformationTab(element)}>\r\n                <InfoIcon/>\r\n              </IconButton>\r\n              <IconButton color=\"primary\" onClick={() => handleEditLandmarkMode(element, index)}>\r\n                <EditIcon/>\r\n              </IconButton>\r\n              <IconButton color=\"secondary\" onClick={() => handleDeleteLandmark(element, index)}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.iconText}>\r\n                {element.name}\r\n              </Typography>\r\n            </Paper>\r\n          );\r\n        })\r\n      }\r\n      {\r\n        isEdit && getEditLandmarkContent()\r\n      }\r\n    </Paper>\r\n  );\r\n}\r\n \r\nexport default EditLandmarksTab;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport { Input, Typography, CircularProgress, Paper, FormControl, InputLabel, TextField, Grid } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport AirplanemodeActiveIcon from '@material-ui/icons/AirplanemodeActive';\r\nimport CommuteIcon from '@material-ui/icons/Commute';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CoordinateFormItem from \"./CoordinateFormItem\";\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"20px\", \r\n    maxHeight: \"calc(100vh - 50px)\", \r\n    overflow: 'auto'\r\n  },\r\n  nodeElement: {\r\n    position: 'relative',\r\n    marginTop: \"10px\", \r\n    marginBottom: \"10px\", \r\n    paddingTop: \"20px\",\r\n    paddingBottom: \"20px\",\r\n    paddingLeft: \"10px\",\r\n    paddingRight:\"10px\",\r\n    backgroundColor: \"#525252\"\r\n  },\r\n  deleteButton: {\r\n    position: 'absolute',\r\n    right: '10px',\r\n    top: '10px',\r\n    color: \"white\",\r\n    '&:hover': {\r\n      color: \"white\",\r\n      backgroundColor: 'gray',\r\n      boxShadow: 'none',\r\n    }\r\n  },\r\n  iconText: {\r\n    marginRight: \"10px\",\r\n    marginLeft: \"10px\"\r\n  },\r\n  addNode: {\r\n    marginBottom: \"40px\"\r\n  },\r\n  cancelButton: {\r\n    marginLeft: \"10px\", \r\n    marginBottom: \"50vh\",\r\n  },\r\n  finishEditButton: {\r\n    marginRight: \"10px\", \r\n    marginBottom: \"50vh\"\r\n  },\r\n  pathTypography : {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  '@global': {\r\n    '*::-webkit-scrollbar': {\r\n    width: '10px'\r\n    },\r\n    '*::-webkit-scrollbar-track': {\r\n      '-webkit-box-shadow': 'inset 0 0 6px rgba(35, 39, 42, .7)',\r\n      '-webkit-border-radius': '10px'\r\n    },\r\n    '*::-webkit-scrollbar-thumb': {\r\n      '-webkit-border-radius': '10px',\r\n      'border-radius': '10px',\r\n      'background': '#858585' \r\n    }\r\n  }\r\n}));\r\n\r\nfunction EditPathsTab({value, index, invalidateAuth, paths, deletePath, updatePath, updateEditPath, setDialogTimer}) {\r\n    \r\n  const classes = useStyles();\r\n\r\n  //States\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [editName, setEditName] = useState(\"\");\r\n  const [editId, setEditId] = useState(-1);\r\n  const [editIndex, setEditIndex] = useState(-1);\r\n  const [coordinates, setCoordinates] = useState([]);\r\n  const [isAirPlane, setIsAirPlane] = useState(false);\r\n\r\n  /**\r\n   * Handles a latitude field being changed.\r\n   * @param {*} event - the text event \r\n   * @param {number} index - the index of the node\r\n   */\r\n  const onElementLatitudeChange = (event, index) => {\r\n    var newElements = [...coordinates];\r\n    let item = {...newElements[index]};\r\n\r\n    if(Math.abs(parseFloat(event.target.value)) <= 90){\r\n      item[1] = parseFloat(event.target.value);\r\n    }\r\n    else if(event.target.value === \"\"){\r\n      item[1] = event.target.value;\r\n    }\r\n    \r\n    newElements[index] = item;\r\n\r\n    setCoordinates(newElements);\r\n    updateEditPath(newElements, isAirPlane);\r\n  };\r\n\r\n  /**\r\n   * Handles a longitude field being changed.\r\n   * @param {*} event - the text event\r\n   * @param {number} index - the index of the node\r\n   */\r\n  const onElementLongitudeChange = (event, index) => {\r\n    var newElements = [...coordinates];\r\n    let item = {...newElements[index]};\r\n\r\n    if(Math.abs(parseFloat(event.target.value)) <= 180){\r\n      item[0] = parseFloat(event.target.value);\r\n    }\r\n    else if(event.target.value === \"\"){\r\n      item[0] = event.target.value;\r\n    }\r\n\r\n    newElements[index] = item;\r\n    \r\n    setCoordinates(newElements);\r\n    updateEditPath(newElements, isAirPlane);\r\n  };\r\n\r\n  /**\r\n   * Handles deleting a node.\r\n   * @param {*} index - the index of the node\r\n   */\r\n  const handleDeleteNode = (index) => {\r\n    var newNodes = [...coordinates];\r\n    newNodes.splice(index, 1);\r\n    setCoordinates(newNodes);\r\n    updateEditPath(newNodes, isAirPlane);\r\n  };\r\n\r\n  /**\r\n   * Handles the name change of the edited landmark.\r\n   * @param {*} event - the event for the name change\r\n   */\r\n  const handleNameChange = (event) => {\r\n    setEditName(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Handles the switch state being changed.\r\n   * @param {*} event - the switch event\r\n   */\r\n  const handleSwitchChange = (event) => {\r\n    setIsAirPlane(event.target.checked);\r\n    updateEditPath(coordinates, event.target.checked);\r\n  };\r\n\r\n  /**\r\n   * Handles editing the landmark.\r\n   */\r\n  const handleEditPath = () => {\r\n    var isNodesPopulated = true;\r\n    for(var i = 0; i < coordinates.length; i++){\r\n      if(coordinates[i][0] === \"\" || coordinates[i][1] === \"\"){\r\n        isNodesPopulated = false;\r\n        break;\r\n      }\r\n    }\r\n    if(isNodesPopulated && coordinates.length >= 2){\r\n      setIsProcessing(true);\r\n      const body = {\r\n        path_uid: editId,\r\n        path_name: editName,\r\n        coordinates: coordinates,\r\n        is_airplane: isAirPlane\r\n      };\r\n      \r\n      fetch(`/paths`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setIsEdit(false);\r\n        setIsProcessing(false);\r\n        setTimeout(() => {\r\n          setEditName(\"\");\r\n          setEditId(-1);\r\n          setEditIndex(-1);\r\n          updatePath({\r\n            coordinates: coordinates,\r\n            isAirPlane: isAirPlane,\r\n            path_name: editName\r\n          }, editIndex);\r\n        }, 500);\r\n      })\r\n      .catch((error) => {\r\n        fetch(`/users/refreshToken`, {\r\n          method: \"POST\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          setDialogTimer(res.refreshTokenExpiry);\r\n          fetch(`/paths`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n          })\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            setIsEdit(false);\r\n            setIsProcessing(false);\r\n            setTimeout(() => {\r\n              setEditName(\"\");\r\n              setEditId(-1);\r\n              setEditIndex(-1);\r\n              updatePath({\r\n                coordinates: coordinates,\r\n                isAirPlane: isAirPlane,\r\n                path_name: editName\r\n              }, editIndex);\r\n            }, 500);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            invalidateAuth();\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          invalidateAuth();\r\n        });\r\n      });\r\n    }\r\n    else{\r\n      alert('A field is missing! Cannot update landmark.')\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles canceling out of the edit mode.\r\n   */\r\n  const handleCancelEdit = () => {\r\n    setIsEdit(false);\r\n    setEditId(-1);\r\n    setEditIndex(-1);\r\n    updateEditPath([], isAirPlane);\r\n  };\r\n\r\n  /**\r\n   * Handles creating a new node.\r\n   */\r\n  const handleNewNode = () => {\r\n    setCoordinates(prevVal => [...prevVal, [\"\", \"\"]]);\r\n  }\r\n\r\n  /**\r\n   * Handles changing the mode to edit.\r\n   * @param {*} path - the path to edit\r\n   * @param {number} index - the index of the path\r\n   */\r\n  const handleEditPathMode = (path, index) => {\r\n    if(isProcessing){\r\n      return;\r\n    }\r\n    setIsEdit(true);\r\n    setEditName(path.path_name);\r\n    setEditId(path.path_uid);\r\n    setEditIndex(index);\r\n    setCoordinates(path.coordinates);\r\n    setIsAirPlane(path.isAirPlane);\r\n    updateEditPath(path.coordinates, path.isAirPlane);\r\n  };\r\n\r\n  /**\r\n   * Handles deleting the landmark.\r\n   * @param {*} path - the path to delete\r\n   * @param {number} index - the index of the path\r\n   */\r\n  const handleDeletePath = (path, index) => {\r\n    if(isProcessing){\r\n      return;\r\n    }\r\n\r\n    let isConfirmed = window.confirm(`Are you sure you want to delete this path?\\n\\nname:\\n${path.path_name === null ? \"None\" : path.path_name}\\ncoordinates:\\n${path.coordinates.map((element, index) => {\r\n      return `${index + 1}. (${element[0]}, ${element[1]})\\n`;\r\n    }).join(\"\")}`);\r\n    if(isConfirmed){\r\n      setIsProcessing(true);\r\n      \r\n      const body = {\r\n        path_uid: path.path_uid\r\n      };\r\n      fetch(`/paths`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        console.log(res);\r\n        setIsProcessing(false);\r\n        setIsEdit(false);\r\n        setTimeout(() => {\r\n          deletePath(index);\r\n        }, 500);\r\n      })\r\n      .catch((error) => {\r\n        fetch(`/users/refreshToken`, {\r\n          method: \"POST\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          setDialogTimer(res.refreshTokenExpiry);\r\n          fetch(`/paths`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n          })\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            console.log(res);\r\n            setIsProcessing(false);\r\n            setIsEdit(false);\r\n            setTimeout(() => {\r\n              deletePath(index);\r\n            }, 500);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            invalidateAuth();\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          invalidateAuth();\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the edit path content.\r\n   */\r\n  const getEditPathContent = () => {\r\n    // console.log(paths);\r\n    return (\r\n      <form>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch \r\n              checked={isAirPlane} \r\n              onChange={handleSwitchChange} \r\n              name=\"checkedA\" \r\n              checkedIcon={<AirplanemodeActiveIcon/>}\r\n              icon={<CommuteIcon/>}\r\n            />\r\n          }\r\n          label=\"Travel Type\"/>\r\n        <TextField \r\n          id=\"pathName\" \r\n          label=\"Path Name\" \r\n          placeholder=\"e.g. LAX - HKG or California Trip 1\" \r\n          value={editName}\r\n          onChange={handleNameChange}\r\n          fullWidth\r\n          style={{marginBottom: \"10px\"}}/>\r\n        {\r\n          coordinates.map((element, index) => {\r\n            return (\r\n              <CoordinateFormItem\r\n                latitude={element[1]}\r\n                longitude={element[0]}\r\n                onLatitudeChange={onElementLatitudeChange}\r\n                onLongitudeChange={onElementLongitudeChange}\r\n                onDelete={handleDeleteNode}\r\n                index={index}/>\r\n            );\r\n          })\r\n        }\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleNewNode} fullWidth className={classes.addNode}> \r\n          <AddIcon className={classes.iconText}/> Add Node\r\n        </Button>\r\n\r\n        <Grid container justify=\"center\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleEditPath} className={classes.finishEditButton}>\r\n            {isProcessing && <CircularProgress size={24} color='secondary' disableShrink />}\r\n            {!isProcessing && 'Finish Edit'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={handleCancelEdit} className={classes.cancelButton}>\r\n            {isProcessing && <CircularProgress size={24} color='primary' disableShrink />}\r\n            {!isProcessing && 'Cancel Edit'}\r\n          </Button>\r\n        </Grid>\r\n    </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper hidden={value !== index} square className={classes.root} elevation={0}>\r\n      <Typography variant=\"h5\">\r\n        {isEdit ? \"Edit Path\" : \"Path List\"}\r\n      </Typography>\r\n      {\r\n        !isEdit && paths.map((element, index) => {\r\n          return(\r\n            <Paper className={classes.nodeElement} elevation={2} key={element.id}>\r\n              <IconButton>\r\n                {isProcessing ? <CircularProgress style={{color: \"white\"}} size={24} color='secondary' disableShrink /> : <MyLocationIcon />}\r\n              </IconButton>\r\n              <IconButton color=\"primary\" onClick={() => handleEditPathMode(element, index)}>\r\n                {isProcessing ? <CircularProgress size={24} color='primary' disableShrink /> : <EditIcon />}\r\n              </IconButton>\r\n              <IconButton color=\"secondary\" onClick={() => handleDeletePath(element, index)}>\r\n                {isProcessing ? <CircularProgress size={24} color='secondary' disableShrink /> : <DeleteIcon />}\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.pathTypography}>\r\n                {element.isAirPlane ? <AirplanemodeActiveIcon className={classes.iconText}/> : <CommuteIcon className={classes.iconText}/>} \r\n                {element.path_name === null ? \"Unnamed path\" : element.path_name}\r\n              </Typography>\r\n            </Paper>\r\n          );\r\n        })\r\n      }\r\n      {\r\n        isEdit && getEditPathContent()\r\n      }\r\n    </Paper>\r\n  );\r\n}\r\n \r\nexport default EditPathsTab;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport NewLandmarkTab from './NewLandmarkTab';\r\nimport NewPathTab from './NewPathTab';\r\nimport EditLandmarksTab from './EditLandmarksTab';\r\nimport EditPathsTab from './EditPathsTab';\r\n\r\nfunction OtherFeatureTab({value, index, drawerValue, invalidateAuth, updateLandmark, deleteLandmark, landmarks, toInformationTab, paths, deletePath, createLandmark, updateNewLandmark, updateEditLandmark, updateNewPath, createPath, updatePath, updateEditPath, setDialogTimer}) {\r\n  return (\r\n    <div hidden={value !== index}>\r\n      <NewLandmarkTab \r\n        value={drawerValue} \r\n        index={0}  \r\n        invalidateAuth={invalidateAuth}\r\n        createLandmark={createLandmark}\r\n        updateNewLandmark={updateNewLandmark}\r\n        setDialogTimer={setDialogTimer}/>\r\n      <EditLandmarksTab \r\n        value={drawerValue} \r\n        index={1} \r\n        invalidateAuth={invalidateAuth} \r\n        toInformationTab={toInformationTab}\r\n        landmarks={landmarks}\r\n        updateLandmark={updateLandmark} \r\n        updateEditLandmark={updateEditLandmark}\r\n        deleteLandmark={deleteLandmark}\r\n        setDialogTimer={setDialogTimer}/>\r\n      <NewPathTab\r\n        value={drawerValue} \r\n        index={2}\r\n        invalidateAuth={invalidateAuth}\r\n        updateNewPath={updateNewPath}\r\n        createPath={createPath}\r\n        setDialogTimer={setDialogTimer}/>\r\n      <EditPathsTab\r\n        value={drawerValue} \r\n        index={3} \r\n        invalidateAuth={invalidateAuth} \r\n        paths={paths}\r\n        deletePath={deletePath}\r\n        updatePath={updatePath}\r\n        updateEditPath={updateEditPath}\r\n        setDialogTimer={setDialogTimer}/>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default OtherFeatureTab;","import './App.css';\r\nimport Globe from './Globe';\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport { Box, Button, Divider, Drawer, Grid, IconButton, List, ListItem, ListItemText, Menu, MenuItem, Paper, Toolbar, Typography, Dialog, DialogContent, DialogTitle, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport LandmarkInfo from './LandmarkInfo';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport OtherFeatureTab from './OtherFeatureTab';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport {  Redirect } from \"react-router-dom\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PaletteIcon from '@material-ui/icons/Palette';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport ListIcon from '@material-ui/icons/List';\r\nconst drawerWidth = 240;\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: {\r\n    padding: 20,\r\n    fontWeight: \"bold\"\r\n  },\r\n  toolbarMenu: {\r\n    paddingTop: 20,\r\n    paddingLeft: 20,\r\n    fontWeight: \"bold\"\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"#11255c\"\r\n  },\r\n  globeGrid: {\r\n    flexGrow: 1,\r\n  },\r\n  rightPanel: {\r\n    // padding: 60, \r\n    height:\"100vh\",\r\n    // borderLeft: 1\r\n  },\r\n}));\r\n\r\nfunction Dashboard() {\r\n  const classes = useStyles();\r\n  const timerRef = useRef(null);\r\n  const autoLogoutRef = useRef(null);\r\n  //States\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  const [isAuth, setIsAuth] = useState(true);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isInactivityDialogOpen, setIsInactivityDialogOpen] = useState(false);\r\n  // const [dialogTitle, setDialogTitle] = useState(\"\");\r\n  // const [dialogContent, setDialogContent] = useState(\"\");\r\n  const [paths, setPaths] = useState([]);\r\n  const [landmarks, setLandmarks] = useState([]);\r\n  const [subSolarCoordinates, setSubSolarCoordinates] = useState([0, 0]);\r\n  // const [anchorEl, setAnchorEl] = React.useState(null);\r\n  // const open = Boolean(anchorEl);\r\n  const [isPathsLoaded, setIsPathsLoaded] = useState(false);\r\n  const [isLandmarksLoaded, setIsLandmarksLoaded] = useState(false);\r\n  const [isSubSolarLoaded, setIsSubsolarLoaded] = useState(false);\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n  const [drawerValue, setDrawerValue] = useState(0);\r\n\r\n  const [currentLandmark, setCurrentLandmark] = useState({\r\n    landmark_uid: -1,\r\n    name: \"\",\r\n    description: \"\",\r\n    coordinates: [0, 0],\r\n    isVisible: false\r\n  });\r\n  const [newPath, setNewPath] = useState({\r\n    type: \"LineString\", \r\n    coordinates: [],\r\n    isAirPlane: true\r\n  });\r\n  const [newLandmark, setNewLandmark] = useState({\r\n    coordinates: [0, 0],\r\n    isVisible: false\r\n  });\r\n  const [editLandmark, setEditLandmark] = useState({\r\n    coordinates: [0, 0],\r\n    isVisible: false\r\n  });\r\n  const [editPath, setEditPath] = useState({\r\n    type: \"LineString\",\r\n    coordinates: [],\r\n    isAirPlane: true\r\n  });\r\n\r\n  /**\r\n   * Gets the minimum dimension of the browser window.\r\n   */\r\n  const getMinDimension = () => {\r\n    return Math.min(windowSize.height, windowSize.width);\r\n  };\r\n\r\n  /**\r\n   * Handles the tab change.\r\n   * @param {*} event - the event of the tab change\r\n   * @param {number} newValue - the value used to change the tab\r\n   */\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  /**\r\n   * Handles switching to the information tab.\r\n   * @param {*} landmark  - the current landmark\r\n   */\r\n  const toInformationTab = (landmark) => {\r\n    setTabValue(0);\r\n    setCurrentLandmark({...landmark, isVisible: true});\r\n  };\r\n\r\n  /**\r\n   * Returns the order that the paths should be in.\r\n   * @param {*} a - the first path argument\r\n   * @param {*} b - the second path argument\r\n   */\r\n  const sortPaths = (a, b) => { \r\n    if(a[\"path_name\"] === null && b[\"path_name\"] === null){\r\n      return 0;\r\n    }\r\n    else if(a[\"path_name\"] === null){\r\n      return 1;\r\n    }\r\n    else if(b[\"path_name\"] === null){\r\n      return -1;\r\n    }\r\n    else if(a[\"path_name\"].toLowerCase() > b[\"path_name\"].toLowerCase()){\r\n      return 1;\r\n    }\r\n    else if(a[\"path_name\"].toLowerCase() < b[\"path_name\"].toLowerCase()){\r\n      return -1;\r\n    }\r\n    return 0;  \r\n  }\r\n\r\n  /**\r\n   * Gets the user's paths from the database.\r\n   */\r\n  async function getUserPaths(){\r\n    try{\r\n      var pathsResponse = await fetch(`/paths`)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        res.sort(sortPaths);\r\n        setPaths(res);\r\n        setIsPathsLoaded(true);\r\n      });\r\n    }\r\n    catch(e){\r\n      console.log(e);\r\n      invalidateAuth();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns the order that the landmarks should be in.\r\n   * @param {*} a - the first landmark argument\r\n   * @param {*} b - the second landmark argument\r\n   */\r\n  const sortLandmarks = (a, b) => {  \r\n    if (a[\"name\"].toLowerCase() > b[\"name\"].toLowerCase()) {    \r\n        return 1;    \r\n    } else if (a[\"name\"].toLowerCase() < b[\"name\"].toLowerCase()) {    \r\n        return -1;    \r\n    }    \r\n    return 0;  \r\n  }\r\n\r\n  /**\r\n   * Gets the expiry of a refresh token and sets a timer.\r\n   */\r\n  async function getRefeshTokenExpiry(){\r\n    try{\r\n      var response = await fetch(\"/users/refreshTokenExpiry\").then(res => res.json());\r\n      setDialogTimer(response.refreshTokenExpiry);\r\n    }\r\n    catch(e){\r\n      console.log(e)\r\n      invalidateAuth();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the user's landmarks from the database.\r\n   */\r\n  async function getUserLandmarks(){\r\n    try{\r\n      var landmarksResponse = await fetch('/landmarks')\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        res.sort(sortLandmarks);\r\n        setLandmarks(res);\r\n        setIsLandmarksLoaded(true);\r\n      });\r\n    }\r\n    catch(e){\r\n      try{\r\n        var refreshTokenResponse = await fetch(`/users/refreshToken`, {\r\n          method: \"POST\"\r\n        })\r\n        .then(res => res.json());\r\n\r\n        setDialogTimer(refreshTokenResponse.refreshTokenExpiry);\r\n        try{\r\n          var landmarksResponse2 = await fetch('/landmarks')\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            res.sort(sortLandmarks);\r\n            setLandmarks(res);\r\n            setIsLandmarksLoaded(true);\r\n          });\r\n        }\r\n        catch(e){\r\n          invalidateAuth();\r\n        }\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n        invalidateAuth();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Invalidates the authorization of the user.\r\n   */\r\n  const invalidateAuth = () => {\r\n    fetch(`/users/logout`, {\r\n      method: \"POST\"\r\n    })\r\n    .then(() => {\r\n      setIsAuth(false);\r\n      clearDialogTimer();\r\n    })\r\n    .catch(err => console.log(err))\r\n  };\r\n\r\n  /**\r\n   * Gets the subsolar point from the backend.\r\n   */\r\n  const getSubsolarPoint = () => {\r\n    fetch(`/sun`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      setSubSolarCoordinates([res.longitude, res.latitude]);\r\n      setIsSubsolarLoaded(true);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Updates the front end landmark.\r\n   * @param {*} landmark - the landmark to be updated\r\n   */\r\n  const updateLandmark = (landmark, index) => {\r\n    let items = [...landmarks];\r\n    \r\n    let itemToUpdate = {...items[index]};\r\n\r\n    itemToUpdate.name = landmark.name;\r\n    itemToUpdate.description = landmark.description;\r\n    itemToUpdate.coordinates = landmark.coordinates;\r\n\r\n    items[index] = itemToUpdate;\r\n\r\n    if(landmark.landmark_uid == currentLandmark.landmark_uid){\r\n      setCurrentLandmark({...landmark, isVisible: true});\r\n    }\r\n    setEditLandmark(prevVal => {\r\n      const prevValCopy = {...prevVal};\r\n      prevValCopy.isVisible = false;\r\n      return prevValCopy;\r\n    });\r\n    setLandmarks(items.sort(sortLandmarks));\r\n  };\r\n\r\n  /**\r\n   * Deletes the frontend landmark.\r\n   * @param {number} landmark_uid - the landmark UID to be deleted.\r\n   */\r\n  const deleteLandmark = (landmark_uid, index) => {\r\n    let items = [...landmarks];\r\n    items.splice(index, 1);\r\n    if(currentLandmark.landmark_uid == landmark_uid){\r\n      setCurrentLandmark(prevVal => {\r\n        const prevValCopy = {...prevVal};\r\n        prevValCopy.isVisible = false;\r\n        return prevValCopy;\r\n      });\r\n    }\r\n    setLandmarks(items);\r\n  };\r\n\r\n  /**\r\n   * Handles deleting the path\r\n   * @param {*} index - the index of the path\r\n   */\r\n  const deletePath = (index) => {\r\n    let pathsCopy = [...paths];\r\n    pathsCopy.splice(index, 1);\r\n    setEditPath(prevVal => {\r\n      const prevValCopy = {...prevVal};\r\n      prevValCopy.coordinates = [];\r\n      return prevValCopy;\r\n    });\r\n    setPaths(pathsCopy);\r\n  };\r\n\r\n  /**\r\n   * Handles clicking the account items.\r\n   * @param {*} index - the index that was selected\r\n   */\r\n  const onAccountMenuClicked = (index) => {\r\n    if(index === 1){\r\n      // console.log(\"user logged out themselves\");\r\n      setIsDialogOpen(true);\r\n      // invalidateAuth();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles changing the tab to the other feature tab.\r\n   * @param {*} value \r\n   */\r\n  const changeDrawerFeatureHandler = (value) => {\r\n    setDrawerValue(value);\r\n    setTabValue(1);\r\n  }\r\n\r\n  /**\r\n   * Handles changing the currentLandmark object.\r\n   * @param {boolean} isVisible - the boolean to check if the currentLandmark is visible\r\n   * @param {*} landmark - the landmark properties\r\n   */\r\n  const currentLandmarkHandler = (isVisible, landmark) => {\r\n    if(isVisible){\r\n      setTabValue(0);\r\n    }\r\n    setCurrentLandmark(prevVal => {\r\n      const prevValCopy = isVisible ? {...landmark} : {...prevVal};\r\n      prevValCopy.isVisible = isVisible;\r\n      return prevValCopy;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a new landmark into the landmarks object.\r\n   * @param {*} landmark - the landmark information\r\n   */\r\n  const createLandmark = (landmark) => {\r\n    setNewLandmark(prevVal => {\r\n      const prevValCopy = {...prevVal}\r\n      prevValCopy.isVisible = false;\r\n      return prevValCopy\r\n    });\r\n    setLandmarks(prevArray => {\r\n      var newArray = [...prevArray, landmark];\r\n      return newArray.sort(sortLandmarks);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates the new landmark object.\r\n   * @param {*} isVisible - the boolean to check if the new landmark is visible\r\n   * @param {*} coordinates - the coordinates of the new landmark\r\n   */\r\n  const updateNewLandmark = (isVisible, coordinates) => {\r\n    if(!isVisible){\r\n      setNewLandmark(prevVal => {\r\n        const prevValCopy = {...prevVal}\r\n        prevValCopy.isVisible = false;\r\n        return prevValCopy;\r\n      });\r\n    }\r\n    else{\r\n      setNewLandmark({coordinates: coordinates, isVisible: true});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the edit landmark object.\r\n   * @param {*} isVisible - the boolean to check if the edit landmark is visible\r\n   * @param {*} coordinates - the coordinates of the edit landmark\r\n   */\r\n  const updateEditLandmark = (isVisible, coordinates) => {\r\n    if(!isVisible){\r\n      setEditLandmark(prevVal => {\r\n        const prevValCopy = {...prevVal};\r\n        prevValCopy.isVisible = false;\r\n        return prevValCopy;\r\n      });\r\n    }\r\n    else{\r\n      setEditLandmark({coordinates: coordinates, isVisible: true});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a new path into the paths object.\r\n   * @param {*} path - the path properties\r\n   */\r\n  const createPath = (path) => {\r\n    setNewPath(prevVal => {\r\n      const prevValCopy = {...prevVal};\r\n      prevValCopy.coordinates = []\r\n      return prevValCopy;\r\n    });\r\n    setPaths(prevArray => {\r\n      var newArray = [...prevArray, path];\r\n      return newArray.sort(sortPaths);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates the new path object.\r\n   * @param {*} path - the path properties\r\n   */\r\n  const updateNewPath = (path) => {\r\n    setNewPath(path);\r\n  }\r\n\r\n  /**\r\n   * Updates a path in the paths object.\r\n   * @param {*} path - the path properties\r\n   * @param {*} index - the index of the path object\r\n   */\r\n  const updatePath = (path, index) => {\r\n    setEditPath(prevValue => {\r\n      var prevValueCopy = {...prevValue};\r\n      prevValueCopy.coordinates = [];\r\n      return prevValueCopy;\r\n    });\r\n    setPaths(prevArray => {\r\n      var prevArrayCopy = [...prevArray];\r\n      var pathCopy = {...prevArrayCopy[index]};\r\n      pathCopy.isAirPlane = path.isAirPlane;\r\n      pathCopy.path_name = path.path_name;\r\n      pathCopy.coordinates = path.coordinates;\r\n      prevArrayCopy[index] = pathCopy;\r\n      prevArrayCopy.sort(sortPaths);\r\n      return prevArrayCopy;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Updates the editPath object.\r\n   * @param {*} coordinates - the coordinates of the editPath\r\n   * @param {*} isAirPlane - the boolean to check if the path is an airplane type\r\n   */\r\n  const updateEditPath = (coordinates, isAirPlane) => {\r\n    setEditPath(prevVal => {\r\n      const prevValCopy = {...prevVal};\r\n      prevValCopy.coordinates = coordinates;\r\n      prevValCopy.isAirPlane = isAirPlane;\r\n      return prevValCopy;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handles closing the dialog.\r\n   */\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  /**\r\n   * Handles closing the inactivity dialog.\r\n   */\r\n  const handleInactivityDialogClose = () => {\r\n    setIsInactivityDialogOpen(false);\r\n    fetch(`/users/refreshToken`, {\r\n      method: \"POST\"\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      setDialogTimer(res.refreshTokenExpiry);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      invalidateAuth();\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Sets the timer for the inactivity dialog.\r\n   * @param {*} time \r\n   */\r\n  const setDialogTimer = (time) => {\r\n    var currentDate = new Date();\r\n    var refreshDate = new Date(time);\r\n    \r\n    if(timerRef.current) {\r\n      clearTimeout(timerRef.current);\r\n      clearTimeout(autoLogoutRef.current);\r\n    }\r\n\r\n    var msToDialog = refreshDate.getTime() - 1000*60*30 - currentDate.getTime();\r\n    var msToAutoLogout = refreshDate.getTime() - currentDate.getTime()\r\n\r\n    timerRef.current = setTimeout(() => {\r\n      setIsInactivityDialogOpen(true);\r\n    }, msToDialog);\r\n\r\n    autoLogoutRef.current = setTimeout(() => {\r\n      invalidateAuth();\r\n    }, msToAutoLogout);\r\n  }\r\n\r\n  /**\r\n   * Clears the timers for the inactivity dialog and the auto logout function.\r\n   */\r\n  const clearDialogTimer = () => {\r\n    if(timerRef.current) {\r\n      clearTimeout(timerRef.current);\r\n      clearTimeout(autoLogoutRef.current);\r\n    }\r\n  }\r\n\r\n // Use effect hook.\r\n  useEffect(() => {\r\n    async function getUserData() {\r\n      await getRefeshTokenExpiry();\r\n      await getUserLandmarks();\r\n      await getUserPaths();\r\n    }\r\n    getUserData();\r\n    getSubsolarPoint();\r\n    const interval = setInterval(() => {\r\n      getSubsolarPoint();\r\n    }, 2 * 60000);\r\n\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    \r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n    \r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize();\r\n    \r\n    // Remove event listener on cleanup\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n      clearInterval(interval);\r\n      clearDialogTimer();\r\n    };\r\n    // return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  /**\r\n   * Gets the dashboard content.\r\n   */\r\n  const getDashboardContent = () => {\r\n    if(isAuth){\r\n      return (\r\n        <Grid container spacing={0} style={{width: `calc(100% - ${drawerWidth}px)`, marginLeft: drawerWidth}}>\r\n          <Grid item align='center' style={{ padding: \"1vh\", height:\"100vh\", flexGrow: 1}}>\r\n            {isLandmarksLoaded && isPathsLoaded && isSubSolarLoaded ? \r\n              <Globe\r\n              paths={paths} \r\n              landmarks={landmarks} \r\n              landmarkHandler={currentLandmarkHandler} \r\n              size={getMinDimension()*0.98} \r\n              newPath={newPath}\r\n              newLandmark={newLandmark}\r\n              currentLandmark={currentLandmark}\r\n              editLandmark={editLandmark}\r\n              subSolarCoordinates={subSolarCoordinates}\r\n              editPath={editPath}/> : \r\n              <Skeleton variant=\"circle\" width={\"98vh\"} height={\"98vh\"}/>\r\n            }\r\n          </Grid>\r\n          <Grid item xs={4} align=\"left\">\r\n            <Paper elevation={0} square className={classes.rightPanel}>\r\n              <AppBar position=\"static\">\r\n                <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"simple tabs example\" variant=\"fullWidth\">\r\n                  <Tab style={{ minWidth: 25 }} icon={<InfoIcon/>}/>\r\n                  <Tab style={{ minWidth: 25 }} icon={<MoreHorizIcon/>}/>\r\n                </Tabs>\r\n              </AppBar>\r\n              <LandmarkInfo currentLandmark={currentLandmark} \r\n                value={tabValue} \r\n                index={0}/>\r\n              <OtherFeatureTab value={tabValue} \r\n                index={1} \r\n                drawerValue={drawerValue}\r\n                invalidateAuth={invalidateAuth}\r\n                toInformationTab={toInformationTab}\r\n                landmarks={landmarks}\r\n                paths={paths}\r\n                deletePath={deletePath}\r\n                createLandmark={createLandmark}\r\n                updateNewLandmark={updateNewLandmark}\r\n                updateLandmark={updateLandmark}  \r\n                deleteLandmark={deleteLandmark} \r\n                updateEditLandmark={updateEditLandmark}\r\n                updateNewPath={updateNewPath}\r\n                createPath={createPath}\r\n                updatePath={updatePath}\r\n                updateEditPath={updateEditPath}\r\n                setDialogTimer={setDialogTimer}/>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    }\r\n    else{\r\n      return (<Redirect to={{pathname:'/loggedOut'}}/>);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\" className={classes.root}>\r\n      <Drawer \r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={true} \r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}>\r\n        <Typography className={classes.toolbar}>\r\n          Wanderlust\r\n        </Typography>\r\n        <Divider/>\r\n        <Typography className={classes.toolbarMenu}>\r\n          Landmark\r\n        </Typography>\r\n        <List>\r\n          {['New Landmark', 'Landmark List'].map((text, index) => (\r\n            <ListItem button key={text} onClick={() => changeDrawerFeatureHandler(index)}>\r\n              <ListItemIcon>{index === 1 ? <ListIcon/> : <AddIcon/>}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider/>\r\n        <Typography className={classes.toolbarMenu}>\r\n          Path\r\n        </Typography>\r\n        <List>\r\n          {['New Path', 'Path List'].map((text, index) => (\r\n            <ListItem button key={text} onClick={() => changeDrawerFeatureHandler(index + 2)}>\r\n              <ListItemIcon>{index === 1 ? <ListIcon/> : <AddIcon/>}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider/>\r\n        <Typography className={classes.toolbarMenu}>\r\n          Account\r\n        </Typography>\r\n        <List>\r\n          {['Preferences', 'Log Out'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index === 1 ? <ExitToAppIcon/> : <PaletteIcon/>}</ListItemIcon>\r\n              <ListItemText primary={text} onClick={() => onAccountMenuClicked(index)}/>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      {getDashboardContent()}\r\n      <Dialog\r\n        open={isDialogOpen}\r\n        onClose={handleDialogClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        fullWidth>\r\n          <DialogTitle id=\"alert-dialog-title\">Log Out</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Are you sure you want to log out of Wanderlust?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={invalidateAuth}>\r\n              YES \r\n            </Button>\r\n            <Button onClick={handleDialogClose}>\r\n              NO\r\n            </Button>\r\n          </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={isInactivityDialogOpen}\r\n        onClose={handleInactivityDialogClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        fullWidth>\r\n          <DialogTitle id=\"alert-dialog-title\">Long Period of Inactivity</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Are you still here?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleInactivityDialogClose}>\r\n              YES \r\n            </Button>\r\n            <Button onClick={invalidateAuth}>\r\n              NO\r\n            </Button>\r\n          </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","export default __webpack_public_path__ + \"static/media/landing.5efdef8c.png\";","//Imports from libraries\r\nimport { Button, TextField, Typography, Toolbar, Grid, CircularProgress, Dialog, DialogContent, DialogTitle, DialogContentText, DialogActions } from \"@material-ui/core\";\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport {  Redirect, Link } from \"react-router-dom\";\r\nimport Image from './landing.png'; // Import using relative path\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    color: \"#7096ff\", \r\n    textDecoration: \"none\", \r\n    fontSize: \"17px\", \r\n    fontWeight: \"bold\"\r\n  },\r\n  banner: {\r\n    padding: 60, \r\n    backgroundImage: `url(${Image})`, \r\n    backgroundSize: 'cover', \r\n    height: '100vh'\r\n  }\r\n}));\r\n\r\nfunction SignIn() {\r\n  const classes = useStyles();\r\n  //States\r\n  const [isTokenValid, setIsTokenValid] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n\r\n  /**\r\n   * Handles the change in username.\r\n   * @param {*} event - the event for the username change\r\n   */\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles the change in password.\r\n   * @param {*} event - the event for the password change\r\n   */\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles the signing in.\r\n   */\r\n  const handleSignIn = () => {\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    setIsProcessing(true);\r\n\r\n    const body = {\r\n      \"username\": username,\r\n      \"password\": password\r\n    }\r\n    \r\n    fetch(`/users/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      setIsTokenValid(true);\r\n      setIsProcessing(false);\r\n    })\r\n    .catch((error) => {\r\n      setIsDialogOpen(true);\r\n      setIsProcessing(false);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handles closing the dialog.\r\n   */\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  //Use effect hook.\r\n  useEffect(() => {\r\n    fetch(`/users/checkToken`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      setIsTokenValid(true);\r\n    })\r\n    .catch(error => {\r\n      fetch(`/users/logout`, {\r\n        method: \"POST\"\r\n      })\r\n      .then(console.log(\"tokens expired\"))\r\n      .catch(err => console.log(err))\r\n    });\r\n  }, []);\r\n\r\n  /**\r\n   * Gets the SignIn page content.\r\n   */\r\n  const getSignInContent = () => {\r\n    if(isTokenValid){\r\n      return (<Redirect to={{pathname:'/dashboard'}}/>);\r\n    }\r\n    else{\r\n      return (\r\n        <div>\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={8} className={classes.banner}>\r\n              <Typography component=\"h1\" variant=\"h3\">\r\n                Record Your Travels. Personalize Your Globe.\r\n              </Typography>\r\n              <Typography component=\"h1\" variant=\"h6\">\r\n                Wanderlust allows you to revisit places you have been to and even the journey you took to get there. With a clean design, you can see the globe in real time and take things into perspective.\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={4} style={{ padding: 60 }}>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign In\r\n              </Typography>\r\n              <form>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                  autoFocus\r\n                  value={username}\r\n                  onChange={handleUsernameChange}/>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  value={password}\r\n                  onChange={handlePasswordChange} />\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSignIn}>\r\n                  {isProcessing && <CircularProgress size={24} color='secondary' disableShrink />}\r\n                  {!isProcessing && 'Sign In'}\r\n                </Button>\r\n              </form>\r\n              <br/>\r\n              <Link to=\"/signUp\" className={classes.link}>Don't have an account? Sign up</Link>\r\n            </Grid>\r\n          </Grid>\r\n          <Dialog\r\n            open={isDialogOpen}\r\n            onClose={handleDialogClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\">\r\n              <DialogTitle id=\"alert-dialog-title\">{\"Invalid Credentials\"}</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Verify your username and password and try again.\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleDialogClose}>\r\n                  OK\r\n                </Button>\r\n              </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {getSignInContent()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport { Typography, Toolbar, Grid } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    padding: 60,\r\n    color: \"#7096ff\",\r\n    textDecoration: \"none\",\r\n    fontSize: \"17px\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  timerIcon: {\r\n    width: \"30%\",\r\n    height: \"30%\"\r\n  },\r\n}));\r\n\r\nfunction LoggedOut() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container\r\n        spacing={0}\r\n        align=\"center\"\r\n        justify=\"center\"\r\n        direction=\"column\" style={{ height: \"100vh\", flexGrow: 1 }}>\r\n        <Grid item>\r\n          <ScheduleIcon className={classes.timerIcon} />\r\n          <Typography variant=\"h4\" style={{ padding: 60 }}>\r\n            Session has expired. Please sign back in.\r\n          </Typography>\r\n          <Link to=\"/\" className={classes.link}>Back to Sign In</Link>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoggedOut;","//Imports from libraries\r\nimport { Button, Container, Grid, TextField, Typography, Dialog, DialogContent, DialogTitle, DialogContentText, DialogActions } from \"@material-ui/core\";\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport {  Redirect, Link } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport SignalCellular0BarIcon from '@material-ui/icons/SignalCellular0Bar';\r\nimport SignalCellular1BarIcon from '@material-ui/icons/SignalCellular1Bar';\r\nimport SignalCellular2BarIcon from '@material-ui/icons/SignalCellular2Bar';\r\nimport SignalCellular3BarIcon from '@material-ui/icons/SignalCellular3Bar';\r\nimport SignalCellular4BarIcon from '@material-ui/icons/SignalCellular4Bar';\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: \"column\",\r\n    alignItems: 'center',\r\n    maxWidth: '700px',\r\n    marginTop: '30%'\r\n  },\r\n  form: {\r\n    width: '100%'\r\n  },\r\n  link: {\r\n    color: \"#7096ff\", \r\n    textDecoration: \"none\", \r\n    fontSize: \"17px\", \r\n    fontWeight: \"bold\"\r\n  },\r\n  checkIcon: {\r\n    color: \"green\"\r\n  },\r\n  clearIcon: {\r\n    color: \"red\"\r\n  },\r\n  hint: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    fontSize: \"15px\"\r\n  },\r\n  veryWeakStrength: {\r\n    color: \"red\"\r\n  },\r\n  weakStrength: {\r\n    color: \"orange\"\r\n  },\r\n  fairStrength: {\r\n    color: \"yellow\"\r\n  },\r\n  goodStrength: {\r\n    color: \"lime\"\r\n  },\r\n  strongStrength: {\r\n    color: \"green\"\r\n  },\r\n  dialog: {\r\n    minWidth: '700px'\r\n  }\r\n}));\r\n\r\nfunction SignUp() {\r\n  const classes = useStyles();\r\n  //States\r\n  // const [isTokenValid, setIsTokenValid] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isUsernameTaken, setIsUsernameTaken] = useState(false);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [dialogTitle, setDialogTitle] = useState(\"\");\r\n  const [dialogContent, setDialogContent] = useState(\"\");\r\n\r\n  /**\r\n   * Checks if a string has a number.\r\n   * @param {String} value - the string used to check if it has a number\r\n   */\r\n  const hasNumber = value => {\r\n    return new RegExp(/[0-9]/).test(value);\r\n  }\r\n\r\n  /**\r\n   * Checks if a string has mixed caps.\r\n   * @param {String} value - the string used to check if it has mixed caps\r\n   */\r\n  const hasMixed = value => {\r\n    return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\r\n  }\r\n\r\n  /**\r\n   * Checks if a string has special characters\r\n   * @param {*} value - the string used to check if it has special characters\r\n   */\r\n  const hasSpecial = value => {\r\n    return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\r\n  }\r\n\r\n  /**\r\n   * Gets the human readable value of a password strength.\r\n   * @param {number} count - the password strength\r\n   */\r\n  const strengthMagnitude = count => {\r\n    if (count < 2)\r\n      return 'Very Weak';\r\n    if (count < 3)\r\n      return 'Weak';\r\n    if (count < 4)\r\n      return 'Fair';\r\n    if (count < 5)\r\n      return 'Good';\r\n    if (count < 6)\r\n      return 'Strong';\r\n  }\r\n\r\n  /**\r\n   * Gets the strength of a password.\r\n   * @param {String} value - the string used to check the strenght of a password\r\n   */\r\n  const strengthIndicator = value => {\r\n    let strengths = 0;\r\n    if (value.length > 5)\r\n      strengths++;\r\n    if (value.length > 7)\r\n      strengths++;\r\n    if (hasNumber(value))\r\n      strengths++;\r\n    if (hasSpecial(value))\r\n      strengths++;\r\n    if (hasMixed(value))\r\n      strengths++;\r\n    return strengthMagnitude(strengths);\r\n  }\r\n\r\n  /**\r\n   * Renders the content for the password strength.\r\n   * @param {number} value - the numerical strength indicator of a password\r\n   */\r\n  const renderPasswordStrength = value => {\r\n    switch(value){\r\n      case 'Very Weak':\r\n        return (<SignalCellular0BarIcon className={classes.veryWeakStrength}/>);\r\n      case 'Weak':\r\n        return (<SignalCellular1BarIcon className={classes.weakStrength}/>);\r\n      case 'Fair':\r\n        return (<SignalCellular2BarIcon className={classes.fairStrength}/>);\r\n      case 'Good':\r\n        return (<SignalCellular3BarIcon className={classes.goodStrength}/>);\r\n      default:\r\n        return (<SignalCellular4BarIcon className={classes.strongStrength}/>);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles the username change.\r\n   * @param {*} event - the event for the username change\r\n   */\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n    getUsernameStatus(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles the password change.\r\n   * @param {*} event - the event for the password change\r\n   */\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles the email change.\r\n   * @param {*} event - the event for the email change\r\n   */\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Gets the availability of the username\r\n   * @param {String} value - the string used to check the availability of a username\r\n   */\r\n  const getUsernameStatus = (value) => {\r\n    fetch(`/users/exists?username=${value}`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      setIsUsernameTaken(res.isexist === \"true\" ? true : false);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Handles the user signing up.\r\n   */\r\n  const handleSignUp = () => {\r\n    if(email === \"\" || password === \"\" || username === \"\"){\r\n      // alert(\"At least one field is empty!\");\r\n      setDialogTitle(\"Sign Up Incomplete\");\r\n      setDialogContent(\"At least one field is empty!\");\r\n      setIsDialogOpen(true);\r\n    }\r\n    else{\r\n      const body = {\r\n        \"email\": email,\r\n        \"password\" : password,\r\n        \"username\" : username\r\n      }\r\n  \r\n      fetch(`/users/create`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n        setEmail(\"\");\r\n        alert(\"A new user has been made!\");\r\n      })\r\n      .catch((error) => {\r\n        setDialogTitle(\"Username Taken\");\r\n        setDialogContent(\"The username already exists! Please create an unowned username.\");\r\n        setIsDialogOpen(true);\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles closing the dialog.\r\n   */\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if(localStorage.getItem('token') !== null){\r\n  //     fetch(`/users/checkToken`, {\r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //         'authorization' : `Bearer ${localStorage.getItem('token')}`\r\n  //       },\r\n  //     })\r\n  //     .then(res => res.json())\r\n  //     .then(res => {\r\n  //       if(res.isTokenValid){\r\n  //         setIsTokenValid(true);\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <div className={classes.root}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign Up\r\n        </Typography>\r\n        <form className={classes.form}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={handleEmailChange}\r\n            className={classes.textField}/>\r\n          <br/>\r\n          <br/>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            autoComplete=\"username\"\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n            className={classes.textField}/>\r\n          <br/>\r\n          <Typography className={classes.hint}>\r\n            Username Status: {isUsernameTaken ? \"Taken\" : \"Available\"}\r\n            {isUsernameTaken ? <ClearIcon className={classes.clearIcon}/> : <CheckIcon className={classes.checkIcon}/>}\r\n          </Typography>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n            className={classes.textField}/>\r\n          <br/>\r\n          <Typography className={classes.hint}>\r\n            Password Strength: {strengthIndicator(password)}\r\n            {renderPasswordStrength(strengthIndicator(password))}\r\n          </Typography>\r\n          <br/>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSignUp}\r\n            className={classes.textField}>\r\n            Sign Up\r\n          </Button>\r\n        </form>\r\n        <br/>\r\n        <Grid container justify=\"flex-start\">\r\n          <Grid item>\r\n            <Link className={classes.link} to=\"/\">Back to sign in screen</Link>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Dialog\r\n        open={isDialogOpen}\r\n        onClose={handleDialogClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        className={classes.dialog}\r\n        fullWidth>\r\n          <DialogTitle id=\"alert-dialog-title\">{dialogTitle}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {dialogContent}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDialogClose}>\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUp;","import './App.css';\nimport React, { Component, useState, useRef, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Dashboard from './Dashboard';\nimport SignIn from './SignIn';\nimport LoggedOut from './LoggedOut';\nimport SignUp from './SignUp';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  }\n});\n\nfunction App() {\n  \n  useEffect(() => {\n    document.title = 'Wanderlust';\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline/>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path='/' component={SignIn}/>\n          <Route exact path='/dashboard' component={Dashboard}/>\n          <Route exact path='/loggedOut' component={LoggedOut}/>\n          <Route exact path='/signUp' component={SignUp}/>\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}