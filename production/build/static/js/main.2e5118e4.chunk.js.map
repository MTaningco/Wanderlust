{"version":3,"sources":["Globe.jsx","LandmarkInfo.jsx","NewLandmarkTab.jsx","CoordinateFormItem.jsx","NewPathTab.jsx","EditLandmarksTab.jsx","EditPathsTab.jsx","OtherFeatureTab.jsx","Dashboard.jsx","landing.png","SignIn.jsx","LoggedOut.jsx","SignUp.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","justifyContent","alignItems","textAlign","position","width","height","zoomInButton","display","backgroundColor","color","boxShadow","right","bottom","zoomOutButton","renderText","left","svgStyle","Globe","size","paths","landmarks","landmarkHandler","newPath","newLandmark","currentLandmark","editLandmark","subSolarCoordinates","editPath","locateLandmarkCoordinates","setLocateLandmarkCoordinates","classes","useState","mouseCoordinates","setMouseCoordinates","oldCoordinates","setOldCoordinates","newCoordinates","setNewCoordinates","isMove","setIsMove","isDrag","setIsDrag","isLoading","setIsLoading","setRenderText","isInitialLoad","setIsInitialLoad","scale","setScale","setWidth","setHeight","isRefReady","setIsRefReady","svgRef","useRef","circle","d3","projection","fitSize","type","clipAngle","precision","pathGenerator","getCityRadius","population","useIdleTimer","timeout","onIdle","event","setTimeout","drawGlobe","reset","console","log","onActive","onAction","events","debounce","getRemainingTime","getLastActiveTime","resume","pause","isCoarseLightsInView","landmark","nightCoordinates","rotateParams","parseFloat","isFineLightsInView","geometry","coordinates","isInTwilight","isCoarse","svg","current","rotate","getRealScale","isDaylight","selectAll","data","join","attr","feature","on","mouseEvent","item","isVisible","drawSphere","land","landCoarse","features","landFine","raise","drawLand","lakes","lakesCoarse","lakesFine","drawLakes","nightLongitude","nightLatitude","style","center","radius","drawCurrentShadow","drawLandOutline","drawLakesOutline","lightsCoarse","filter","d","cityElement","lightsFine1","records","fields","drawLights","graticule","drawGraticule","landmark_uid","drawCurrentLandmark","isDayTime","isAirPlane","drawArcs","drawTempPath","drawTempLandmark","drawEditPath","drawEditLandmark","id","drawLandmarks","lineGenerator","minDimension","Math","min","text","ceil","drawScale","renderExternalUpdate","message","modulo","a","n","useEffect","clientWidth","clientHeight","duration","tween","longArray","amount","Number","MAX_VALUE","isPositive","i","length","abs","r","t","coordinatesToUse","useLayoutEffect","className","ref","onMouseDown","screenX","screenY","onMouseMove","currentMouseCoordinates","scalingFactor","movedCoordinates","onMouseUp","onWheel","prev","newVal","deltaY","max","IconButton","variant","onClick","prevVal","Typography","LandmarkInfo","value","index","hidden","margin","descriptionArray","description","split","name","paragraph","map","element","getLandmarkInfoContent","cancelButton","marginLeft","finishEditButton","marginRight","addNode","marginBottom","formFields","NewLandmarkTab","invalidateAuth","createLandmark","updateNewLandmark","setDialogTimer","landmarkName","setLandmarkName","landmarkLatitude","setLandmarkLatitude","landmarkLongitude","setLandmarkLongitude","landmarkDescription","setLandmarkDescription","isProcessing","setIsProcessing","isDialogOpen","setIsDialogOpen","dialogTitle","setDialogTitle","dialogContent","setDialogContent","recursiveFetch","body","iteration","fetch","method","headers","JSON","stringify","then","res","json","onLandmarkSuccessful","catch","error","refreshTokenExpiry","handleDialogClose","FormControl","fullWidth","InputLabel","htmlFor","Input","placeholder","onChange","target","TextField","label","inputProps","maxLength","multiline","rows","Grid","container","justify","Button","latitude","longitude","CircularProgress","disableShrink","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","nodeElement","paddingTop","paddingBottom","paddingLeft","paddingRight","deleteButton","top","CoordinateFormItem","onLatitudeChange","onLongitudeChange","onDelete","latId","longitudeId","Paper","elevation","NewPathTab","updateNewPath","createPath","setCoordinates","isAirplane","setIsAirplane","setName","onPathSuccessful","path_uid","path_name","handleDeleteNode","newNodes","splice","updateTempPath","newElements","newIsAirplane","newTempPath","undefined","node","lat","long","push","onElementLatitudeChange","onElementLongitudeChange","square","padding","maxHeight","overflow","FormControlLabel","control","Switch","checked","checkedIcon","icon","prevArray","iconText","isNodesPopulated","marginTop","EditLandmarksTab","updateLandmark","deleteLandmark","toInformationTab","updateEditLandmark","isEdit","setIsEdit","editId","setEditId","editName","setEditName","editDescription","setEditDescription","editLongitude","setEditLongitude","editLatitude","setEditLatitude","editIndex","setEditIndex","isDialogDeleteOpen","setIsDialogDeleteOpen","dialogDeleteContent","setDialogDeleteContent","landmarkUIDToDelete","setLandmarkUIDToDelete","indexToDelete","setIndexToDelete","handleLatitudeChange","handleLongitudeChange","handleNameChange","handleDescriptionChange","onEditLandmarkSuccessful","handleEditLandmark","handleCancelEdit","onDeleteLandmarkSuccessful","onMethodSuccess","handleDialogDeleteClose","handleEditLandmarkMode","handleDeleteButtonPressed","pathTypography","EditPathsTab","deletePath","updatePath","updateEditPath","setIsAirPlane","handleSwitchChange","handleEditPath","is_airplane","onEditPathSuccessful","handleNewNode","onDeletePathSuccessful","path","handleEditPathMode","window","confirm","handleDeletePath","OtherFeatureTab","drawerValue","toolbar","fontWeight","toolbarMenu","drawerPaper","globeGrid","flexGrow","rightPanel","Dashboard","timerRef","autoLogoutRef","tabValue","setTabValue","isAuth","setIsAuth","isInactivityDialogOpen","setIsInactivityDialogOpen","setPaths","setLandmarks","setSubSolarCoordinates","isPathsLoaded","setIsPathsLoaded","isLandmarksLoaded","setIsLandmarksLoaded","isSubSolarLoaded","setIsSubsolarLoaded","windowSize","setWindowSize","setDrawerValue","setCurrentLandmark","setNewPath","setNewLandmark","setEditLandmark","setEditPath","handleTabChange","newValue","sortPaths","b","toLowerCase","getUserPaths","sort","sortLandmarks","getRefeshTokenExpiry","response","getUserLandmarks","refreshTokenResponse","clearDialogTimer","err","getSubsolarPoint","items","itemToUpdate","prevValCopy","pathsCopy","changeDrawerFeatureHandler","currentLandmarkHandler","prevValue","prevValueCopy","prevArrayCopy","pathCopy","handleInactivityDialogClose","time","currentDate","Date","refreshDate","clearTimeout","msToDialog","getTime","msToAutoLogout","getUserData","interval","setInterval","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","clearInterval","Drawer","anchor","paper","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","onAccountMenuClicked","spacing","align","Skeleton","xs","AppBar","Tabs","aria-label","Tab","minWidth","to","pathname","link","textDecoration","fontSize","banner","backgroundImage","Image","backgroundSize","SignIn","isTokenValid","setIsTokenValid","username","setUsername","password","setPassword","handleUsernameChange","handlePasswordChange","handleSignIn","component","required","autoComplete","autoFocus","timerIcon","LoggedOut","direction","flexDirection","maxWidth","form","checkIcon","clearIcon","hint","veryWeakStrength","weakStrength","fairStrength","goodStrength","strongStrength","dialog","SignUp","email","setEmail","isUsernameTaken","setIsUsernameTaken","strengthIndicator","count","strengths","RegExp","test","hasNumber","hasSpecial","hasMixed","getUsernameStatus","isexist","Container","textField","renderPasswordStrength","alert","createMuiTheme","palette","App","document","title","ThemeProvider","CssBaseline","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e5118e4.chunk.js","sourcesContent":["//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect, useLayoutEffect } from \"react\";\r\nimport * as d3 from 'd3';\r\nimport * as topojson from \"topojson\";\r\nimport { useIdleTimer } from 'react-idle-timer';\r\n\r\n//Imports from self defined structures\r\n//https://github.com/martynafford/natural-earth-geojson\r\nimport landFine from \"./jsonData/ne_10m_land.json\";\r\nimport landCoarse from \"./jsonData/ne_110m_land.json\";\r\nimport lakesFine from \"./jsonData/ne_10m_lakes.json\";\r\nimport lakesCoarse from \"./jsonData/ne_110m_lakes.json\";\r\n//https://s3-us-west-2.amazonaws.com/s.cdpn.io/215059/cities-200000.json\r\n//https://public.opendatasoft.com/api/records/1.0/search/?dataset=geonames-all-cities-with-a-population-1000&q=&rows=10000&sort=population&pretty_print=true&format=json&fields=population,coordinates,name\r\nimport lightsFine from \"./jsonData/geonames-all-cities-with-a-population-1000.json\";\r\nimport lightsFine1 from \"./jsonData/geonames-all-cities-with-a-population-1000-5000-records.json\";\r\nimport lightsCoarse from \"./jsonData/cities-200000.json\";//TODO: use if performance is fixed\r\nimport { Button, CircularProgress, FormHelperText, IconButton, LinearProgress, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    textAlign: \"center\",\r\n    position: 'relative',\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n  },\r\n  zoomInButton: {\r\n    display: \"block\",\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    '&:hover': {\r\n      color: \"white\",\r\n      backgroundColor: 'gray',\r\n      boxShadow: 'none',\r\n    },\r\n    position: 'absolute',\r\n    right: \"90px\",\r\n    bottom: \"150px\",\r\n  },\r\n  zoomOutButton: {\r\n    display: \"block\",\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    '&:hover': {\r\n      color: \"white\",\r\n      backgroundColor: 'gray',\r\n      boxShadow: 'none',\r\n    },\r\n    position: 'absolute',\r\n    right: \"90px\",\r\n    bottom: \"90px\",\r\n  },\r\n  renderText: {\r\n    position: 'absolute',\r\n    left: \"30px\",\r\n    bottom: '30px',\r\n  },\r\n  svgStyle: {\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n  }\r\n}));\r\n\r\nconst QUARTER_DIAMETER = 12742/4.0;\r\n\r\nfunction Globe({size, paths, landmarks, landmarkHandler, newPath, newLandmark, currentLandmark, editLandmark, subSolarCoordinates, editPath, locateLandmarkCoordinates, setLocateLandmarkCoordinates}) {\r\n    \r\n  const classes = useStyles();\r\n  \r\n  //States\r\n  const [mouseCoordinates, setMouseCoordinates] = useState(null);         //state for initially pressing down the mouse button's position\r\n  const [oldCoordinates, setOldCoordinates] = useState([180, -25]);   //state for the position of the globe during inactivity (units in -longitude, -latitude)\r\n  const [newCoordinates, setNewCoordinates] = useState(null);             //state for updating the old coordinates\r\n  const [isMove, setIsMove] = useState(false);                        //state for when a user has queued up the fact that the globe has been changed somehow that lowered the resolution and will be rendered back to full resolution\r\n  const [isDrag, setIsDrag] = useState(false);                        //state for whether or not the user is dragging the globe (moving the mouse while mouse is down)\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [renderText, setRenderText] = useState(\"\");\r\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\r\n  const [scale, setScale] = useState(1);\r\n\r\n  const [width, setWidth] = useState(100);\r\n  const [height, setHeight] = useState(100);\r\n  const [isRefReady, setIsRefReady] = useState(false);\r\n\r\n  //Constants\r\n  const svgRef = useRef();\r\n  const circle = d3.geoCircle();\r\n  const twilightRadians = 1.396;\r\n  const halfGlobeRadians = 1.57;\r\n  const projection = d3.geoOrthographic()\r\n    .fitSize([width, height], {type: \"Sphere\"})\r\n    .clipAngle(90)\r\n    .precision(0.1);\r\n  const pathGenerator = d3.geoPath().projection(projection);\r\n\r\n  /**\r\n  * Handles the mouse down event in the Globe.\r\n  * @param {*} event - the mouse event\r\n  */\r\n  const onMouseDownHandler = (event) => {\r\n    setMouseCoordinates([event.screenX, event.screenY]);\r\n  };\r\n\r\n  /**\r\n   * Gets the Radius of the city.\r\n   * @param {number} population - the population of the city\r\n   */\r\n  const getCityRadius = (population) => {\r\n    if (population < 100000)\r\n      return 0.08\r\n    else if (population < 200000)\r\n      return 0.1\r\n    else if (population < 300000)\r\n      return 0.12\r\n    else if (population < 500000)\r\n      return 0.14\r\n    else\r\n      return 0.2\r\n  };\r\n\r\n  /**\r\n   * Handles when the user has become idle.\r\n   * @param {*} event - the event during idle.\r\n   */\r\n  const handleOnIdle = event => {\r\n    if(isMove && !isDrag) {\r\n      //the globe is not being dragged which means that the globe should be rendered fully\r\n      setIsMove(false);\r\n      setIsLoading(true);\r\n      setRenderText(`Rendering full resolution...`);\r\n      setTimeout(() => {\r\n        drawGlobe(oldCoordinates, false);\r\n        setIsLoading(false);\r\n      }, 400);\r\n    } else if (isMove && isDrag) {\r\n      //the globe is still being dragged\r\n      reset();\r\n    } else {\r\n      console.log(\"do nothing when idle because the globe wasn't moved in the first place\");\r\n    }\r\n  }\r\n    \r\n  /**\r\n   * Handles when the user has become active.\r\n   * @param {*} event - the event during active\r\n   */\r\n  const handleOnActive = event => {\r\n\r\n  }\r\n    \r\n  /**\r\n   * Handles when the user has done an action.\r\n   * @param {*} event - the event during an action\r\n   */\r\n  const handleOnAction = (event) => {}\r\n     \r\n  //Idle timer and parameters\r\n  const { getRemainingTime, getLastActiveTime, resume, pause, reset } = useIdleTimer({\r\n    timeout: 1000 * 2,\r\n    onIdle: handleOnIdle,\r\n    onActive: handleOnActive,\r\n    onAction: handleOnAction,\r\n    events: ['mouseup', 'mousewheel', 'keydown'],\r\n    debounce: 500\r\n  })\r\n\r\n  /**\r\n   * Handler for when the mouse has been moved.\r\n   * @param {*} event - the event of when the mouse has been moved\r\n   */\r\n  const onMouseMoveHandler = (event) => {\r\n    //TODO: fix fine rendering issue\r\n    if(mouseCoordinates){\r\n      var currentMouseCoordinates = [event.screenX, event.screenY];\r\n      var scalingFactor = 3.0 * getRealScale()/200.0;\r\n      var movedCoordinates = [oldCoordinates[0] + (currentMouseCoordinates[0] - mouseCoordinates[0])/scalingFactor, oldCoordinates[1] - (currentMouseCoordinates[1] - mouseCoordinates[1])/scalingFactor];\r\n      movedCoordinates[1] = movedCoordinates[1] < -90 ? -90 :\r\n        movedCoordinates[1] > 90 ?  90 : movedCoordinates[1];\r\n      setNewCoordinates(movedCoordinates);\r\n      setIsMove(true);\r\n      setIsDrag(true);\r\n      drawGlobe(movedCoordinates, true);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handler when the mouse click is now up.\r\n   * @param {*} event - the event of when the mouse click is now up\r\n   */\r\n  const onMouseUpHandler = (event) => {\r\n    if(newCoordinates){\r\n      setOldCoordinates([modulo(newCoordinates[0] - 180, 360) - 180, newCoordinates[1]]);\r\n      setNewCoordinates(null);\r\n    }\r\n    setIsDrag(false);\r\n    setMouseCoordinates(null);\r\n  };\r\n\r\n  /**\r\n   * Draws a sphere.\r\n   * @param {*} svg - the svg used to draw the sphere.\r\n   * @param {boolean} isDaylight - the parameter for night time styles\r\n   */\r\n  const drawSphere = (svg, isDaylight) => {\r\n    svg\r\n    .selectAll(\".sphere\")\r\n    .data([{type: \"Sphere\"}])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"sphere\")\r\n    .attr(\"fill\", isDaylight ? \"#dde\" : \"#1c458c\")\r\n    .attr(\"d\", feature => pathGenerator(feature))\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Draws the grid.\r\n   * @param {*} svg - the svg used to draw the graticule.\r\n   * @param {boolean} isDaylight - the parameter for night time styles.\r\n   */\r\n  const drawGraticule = (svg, isDaylight) => {\r\n    const graticule = d3.geoGraticule10();\r\n    svg\r\n    .selectAll(\".mesh\")\r\n    .data([graticule])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"mesh\")\r\n    .attr(\"fill-opacity\",\"0\")\r\n    .attr(\"stroke\", isDaylight ? \"#ccf\" : \"gray\")\r\n    .attr(\"stroke-opacity\", \"0.5\")\r\n    .attr(\"stroke-width\", isDaylight ? 1 : 0.3)\r\n    .attr(\"d\", feature => pathGenerator(feature))\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    })\r\n    .raise();\r\n  };\r\n\r\n  /**\r\n   * Draws the land.\r\n   * @param {*} svg - the svg used to draw the land\r\n   * @param {boolean} isCoarse - the parameter for fine detail or coarse detail\r\n   * @param {boolean} isDaylight - the parameter for night time styles\r\n   */\r\n  const drawLand = (svg, isCoarse, isDaylight) => {\r\n    //Using local json data that is of type Topology\r\n    const land = isCoarse ? landCoarse.features : landFine.features;\r\n    svg\r\n    .selectAll(\".country\")\r\n    .data(land)\r\n    .join(\"path\")\r\n    .attr(\"class\", \"country\")\r\n    .attr(\"fill\", isDaylight ? \"#edd\" : \"#f5c684\")\r\n    .attr(\"stroke\", isDaylight ? \"#faa\" : \"#b89463\")\r\n    .attr(\"stroke-width\", 0.5)\r\n    .attr(\"d\", feature => pathGenerator(feature))\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    })\r\n    .raise();\r\n\r\n    //Using external json data that is of type Topology\r\n    // d3.json(\"https://cdn.jsdelivr.net/npm/world-atlas@2.0.2/land-10m.json\").then(res => {\r\n    //     const countries1 = topojson.feature(isCoarse ? landCoarse : res, isCoarse ? landCoarse.objects.land : res.objects.land).features;\r\n    //     console.log(countries1);\r\n    //     svg\r\n    //     .selectAll(\".country\")\r\n    //     .data(countries1)\r\n    //     .join(\"path\")\r\n    //     .attr(\"id\", feature => console.log(feature))\r\n    //     .attr(\"class\", \"country\")\r\n    //     .attr(\"fill\", feature => \"#edd\")//daytime\r\n    //     // .attr(\"fill\", feature => \"#114\")//nighttime\r\n    //     .attr(\"stroke\", feature => \"#faa\")//daytime\r\n    //     // .attr(\"stroke\", feature => \"#004\")//nighttime\r\n    //     .attr(\"d\", feature => pathGenerator(feature));\r\n    // });\r\n\r\n    //Using local json data that is of type FeatureCollection\r\n    // svg\r\n    //     .selectAll(\".country\")\r\n    //     .data(dataCoarse.features)\r\n    //     .join(\"path\")\r\n    //     .attr(\"class\", \"country\")\r\n    //     // .attr(\"fill\", feature => \"#edd\")//daytime\r\n    //     .attr(\"fill\", feature => \"#114\")//nighttime\r\n    //     // .attr(\"stroke\", feature => \"#faa\")//daytime\r\n    //     .attr(\"stroke\", feature => \"#004\")//nighttime\r\n    //     .attr(\"d\", feature => pathGenerator(feature));\r\n  };\r\n\r\n  /**\r\n   * Draws the land outline.\r\n   * @param {*} svg - the svg used to draw the land outline\r\n   * @param {boolean} isCoarse - the parameter for fine detail or coarse detail\r\n   * @param {boolean} isDaylight - the parameter for night time styles\r\n   */\r\n  const drawLandOutline = (svg, isCoarse, isDaylight) => {\r\n    //Using local json data that is of type Topology\r\n    const land = isCoarse ? landCoarse.features : landFine.features;\r\n    svg\r\n    .selectAll(\".countryOutline\")\r\n    .data(land)\r\n    .join(\"path\")\r\n    .attr(\"class\", \"countryOutline\")\r\n    .attr(\"fill-opacity\", \"0\")\r\n    .attr(\"stroke\", \"#b89463\")\r\n    .attr(\"stroke-width\", 0.3)\r\n    // .attr(\"stroke-opacity\", \"0.8\")\r\n    .attr(\"d\", feature => pathGenerator(feature))\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    })\r\n    .raise();\r\n  };\r\n\r\n  /**\r\n   * Draws the lakes.\r\n   * @param {*} svg - the svg used to draw the land\r\n   * @param {boolean} isCoarse - the parameter for fine detail or coarse detail\r\n   * @param {boolean} isDaylight - the parameter for night time styles\r\n   */\r\n  const drawLakes = (svg, isCoarse, isDaylight) => {\r\n    const lakes = isCoarse ? lakesCoarse.features :lakesFine.features;\r\n    svg\r\n    .selectAll(\".lakes\")\r\n    .data(lakes)\r\n    .join(\"path\")\r\n    .attr(\"class\", \"lakes\")\r\n    .attr(\"fill\", isDaylight ? \"#edd\" : \"#1c458c\")\r\n    .attr(\"stroke\", isDaylight ? \"#faa\" : \"#b89463\")\r\n    .attr(\"stroke-width\", 0.5)\r\n    .attr(\"d\", feature => pathGenerator(feature))\r\n    .raise()\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Draws the lake outline.\r\n   * @param {*} svg - the svg used to draw the lake outline\r\n   * @param {boolean} isCoarse - the parameter for fine detail or coarse detail\r\n   * @param {boolean} isDaylight - the parameter for night time styles\r\n   */\r\n  const drawLakesOutline = (svg, isCoarse, isDaylight) => {\r\n    const lakes = isCoarse ? lakesCoarse.features :lakesFine.features;\r\n    svg\r\n    .selectAll(\".lakesOutline\")\r\n    .data(lakes)\r\n    .join(\"path\")\r\n    .attr(\"class\", \"lakesOutline\")\r\n    .attr(\"fill-opacity\", \"0\")\r\n    .attr(\"stroke\", isDaylight ? \"#faa\" : \"#b89463\")\r\n    .attr(\"stroke-width\", 0.3)\r\n    .attr(\"d\", feature => pathGenerator(feature))\r\n    .raise()\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Draws city lights based on population sizes in cities.\r\n   * @param {*} svg - the svg used to draw city lights\r\n   * @param {boolean} isCoarse - the parameter for fine detail or coarse detail\r\n   */\r\n  const drawLights = (svg, isCoarse, rotateParams) => {\r\n    var nightLongitude = subSolarCoordinates[0] + 180;\r\n    var nightLatitude = -subSolarCoordinates[1];\r\n    if(isCoarse){\r\n      svg\r\n      .selectAll(\".lights\")\r\n      .data(lightsCoarse.filter((d) => isCoarseLightsInView(d, [nightLongitude, nightLatitude], rotateParams)))\r\n      .join(\"path\")\r\n      .attr(\"class\", \"lights\")\r\n      .style(\"fill\", \"#ff8\")\r\n      .attr(\"fill-opacity\",\"0.4\")\r\n      .attr(\"d\", cityElement => pathGenerator(circle.center([parseFloat(cityElement[3]), parseFloat(cityElement[2])]).radius(getCityRadius(cityElement[0]))()))\r\n      .raise();\r\n    }else{\r\n      svg\r\n        .selectAll(\".lights\")\r\n        .data(lightsFine1.records.filter((d) => isFineLightsInView(d, [nightLongitude, nightLatitude], rotateParams)))\r\n        .join(\"path\")\r\n        .attr(\"class\", \"lights\")\r\n        .style(\"fill\", \"#ff8\")\r\n        .attr(\"fill-opacity\",\"0.4\")\r\n        .attr(\"d\", cityElement => pathGenerator(circle.center(cityElement.geometry.coordinates).radius(getCityRadius(cityElement.fields.population))()))\r\n        .raise();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Checks if the landmark for coarse city lights is in view for the user\r\n   * @param {*} landmark - the landmark object\r\n   * @param {*} nightCoordinates - the night coordinates in [long, lat]\r\n   * @param {*} rotateParams - the rotate parameters in [long, lat]\r\n   * @returns - a boolean\r\n   */\r\n  const isCoarseLightsInView = (landmark, nightCoordinates, rotateParams) => {\r\n    const gdistance = d3.geoDistance([parseFloat(landmark[3]), parseFloat(landmark[2])], nightCoordinates);\r\n    return gdistance < twilightRadians;\r\n  }\r\n\r\n  /**\r\n   * Checks if the landmark for fine city lights is in view for the user\r\n   * @param {*} landmark - the landmark object\r\n   * @param {*} nightCoordinates - the night coordinates in [long, lat]\r\n   * @param {*} rotateParams - the rotate parameters in [long, lat]\r\n   * @returns - a boolean \r\n   */\r\n  const isFineLightsInView = (landmark, nightCoordinates, rotateParams) => {\r\n    const gdistance = d3.geoDistance(landmark.geometry.coordinates, nightCoordinates);\r\n    return gdistance < twilightRadians;\r\n  }\r\n\r\n  /**\r\n   * Draws the landmarks.\r\n   * @param {*} svg - the svg used to draw the landmarks\r\n   * @param {boolean} isDaylight - the parameter used for night time styles\r\n   */\r\n  const drawLandmarks = (svg, isDaylight, rotateParams) => {\r\n    // Format of one element of data\r\n    //   {\r\n    //     id: \"landmark_1\",\r\n    //     landmark_uid: 1,\r\n    //     name: \"Manila / Marikina\",\r\n    //     description: \"First Hometown. Revisited 2011, 2013, 2017, 2018, and 2019.\",\r\n    //     coordinates: [120.9842, 14.5995]\r\n    //   }\r\n    // console.log(landmarks);\r\n\r\n    var nightLongitude = subSolarCoordinates[0] + 180;\r\n    var nightLatitude = -subSolarCoordinates[1];\r\n    svg\r\n    .selectAll(\".landmarks\")\r\n    .data(landmarks)\r\n    .join(\"path\")\r\n    .attr(\"class\", \"landmarks\")\r\n    .attr(\"id\", landmark => `${landmark.id}`)\r\n    .style(\"fill\", landmark => isInTwilight(landmark, [nightLongitude, nightLatitude]) ? \"white\" : \"black\")\r\n    .style(\"stroke\", landmark => isInTwilight(landmark, [nightLongitude, nightLatitude]) ? \"white\" : \"black\")\r\n    .attr(\"stroke-width\", 0.2)\r\n    .attr(\"fill-opacity\",\"0.3\")\r\n    .on(\"mouseover\", (mouseEvent, item) => {\r\n      d3.select(`#${item.id}`)\r\n      .style(\"fill\", \"red\")\r\n      .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.3)()));\r\n    } )\r\n    .on(\"mouseout\", (mouseEvent, item) => {\r\n      d3.select(`#${item.id}`)\r\n      .style(\"fill\", landmark => isInTwilight(landmark, [nightLongitude, nightLatitude]) ? \"white\" : \"black\")\r\n      .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.1)()));\r\n    } )\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      landmarkHandler(true, item);\r\n    })\r\n    .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.1)()))\r\n    .raise();\r\n  };\r\n\r\n  const isInTwilight = (landmark, nightCoordinates) => {\r\n    const gdistance = d3.geoDistance(landmark.coordinates, nightCoordinates);\r\n    return gdistance < halfGlobeRadians;\r\n  }\r\n\r\n  /**\r\n   * Draws the current selected landmark.\r\n   * @param {*} svg - the svg used to draw the current selected landmark\r\n   * @param {boolean} isDaylight - the parameter used for night time styles\r\n   */\r\n  const drawCurrentLandmark = (svg, isDaylight) => {\r\n    // console.log(\"this is the current landmark from draw landmark\", currentLandmark);\r\n    //format of one element of data\r\n    // {\r\n    //     coordinates: [0, 0],\r\n    //     isVisible: false\r\n    // }\r\n    svg\r\n    .selectAll(\".currentLandmark\")\r\n    .data([currentLandmark])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"currentLandmark\")\r\n    .attr(\"id\", landmark => `current_${landmark.landmark_uid}`)\r\n    .style(\"fill\", \"red\")\r\n    .attr(\"fill-opacity\",\"0.3\")\r\n    .attr(\"visibility\", landmark => landmark.isVisible ? \"visible\" : \"hidden\")\r\n    .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.2)()))\r\n    .raise();\r\n  };\r\n\r\n  /**\r\n   * Draws the current world night time.\r\n   * @param {*} svg - the svg used to draw the world night time\r\n   * @param {boolean} isDaylight - the parameter used for night time styles\r\n   */\r\n  const drawCurrentShadow = (svg, isDaylight) => {\r\n    var nightLongitude = subSolarCoordinates[0] + 180;\r\n    var nightLatitude = -subSolarCoordinates[1];\r\n    var opacity = \"0.3\";\r\n    svg\r\n    .selectAll(\".shadow\")\r\n    .data([90, 90-6, 90-12, 90-18])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"shadow\")\r\n    .attr(\"id\", `shadow`)\r\n    .style(\"fill\", \"black\")\r\n    .attr(\"fill-opacity\",opacity)\r\n    .attr(\"d\", data => pathGenerator(circle.center([nightLongitude, nightLatitude]).radius(data)()))\r\n    .raise()\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Draws the current new landmark.\r\n   * @param {*} svg - the svg used to draw the current new landmark\r\n   * @param {boolean} isDaylight - the parameter used for night time styles\r\n   */\r\n  const drawTempLandmark = (svg, isDaylight) => {\r\n    //format of one element of data\r\n    // {\r\n    //     coordinates: [0, 0],\r\n    //     isVisible: false\r\n    //   }\r\n    svg\r\n    .selectAll(\".newLandmark\")\r\n    .data([newLandmark])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"newLandmark\")\r\n    .attr(\"id\", `newLandmark`)\r\n    .style(\"fill\", \"red\")\r\n    .attr(\"fill-opacity\",\"0.5\")\r\n    .attr(\"visibility\", landmark => landmark.isVisible ? \"visible\" : \"hidden\")\r\n    .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.1)()))\r\n    .raise();\r\n  };\r\n\r\n  /**\r\n   * Draws the current modified landmark.\r\n   * @param {*} svg - the svg used to draw the current modified landmark\r\n   * @param {boolean} isDaylight - the parameter used for night time styles\r\n   */\r\n  const drawEditLandmark = (svg, isDaylight) => {\r\n    //format of one element of data\r\n    // {\r\n    //     coordinates: [0, 0],\r\n    //     isVisible: false\r\n    //   }\r\n    svg\r\n    .selectAll(\".editLandmark\")\r\n    .data([editLandmark])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"editLandmark\")\r\n    .attr(\"id\", landmark => `edit`)\r\n    .style(\"fill\", \"#73ff00\")\r\n    .attr(\"fill-opacity\",\"0.5\")\r\n    .attr(\"stroke-width\", 1)\r\n    .attr(\"stroke\",\"black\")\r\n    .attr(\"visibility\", landmark => landmark.isVisible ? \"visible\" : \"hidden\")\r\n    .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.1)()))\r\n    .raise();\r\n  };\r\n\r\n  /**\r\n   * Draws the arcs.\r\n   * @param {*} svg - the svg used to draw the arcs\r\n   * @param {boolean} isDayTime - the parameter used for night time styles\r\n   */\r\n  const drawArcs = (svg, isDayTime) => {\r\n    //The format of one element of data is \r\n    // { \r\n    //   type: \"LineString\", \r\n    //   coordinates: [[0, 0], ...], \r\n    //   id:\"path_x\", \r\n    //   path_uid: x, \r\n    //   isAirPlane: true\r\n    // }\r\n    svg\r\n    .selectAll(\".arcOutline\")\r\n    .data(paths)\r\n    .join(\"path\")\r\n    .attr(\"class\", \"arcOutline\")\r\n    // .transition()\r\n    .attr(\"fill-opacity\", \"0\")\r\n    .attr(\"stroke-opacity\", feature => feature.isAirPlane ? 0.5 : 1)\r\n    .attr(\"stroke\", feature => isDayTime ? \"black\" : \"white\")\r\n    .attr(\"stroke-width\", feature => feature.isAirPlane ? 0.8 : 0.2)\r\n    .attr(\"d\", feature =>pathGenerator(feature))\r\n    .raise()\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    })\r\n    .raise();\r\n      \r\n    svg\r\n    .selectAll(\".arc\")\r\n    .data(paths)\r\n    .join(\"path\")\r\n    .attr(\"class\", \"arc\")\r\n    // .transition()\r\n    .attr(\"fill-opacity\", \"0\")\r\n    .attr(\"stroke-opacity\", feature => feature.isAirPlane ? 0.5 : 1)\r\n    .attr(\"stroke\", feature => isDayTime ? \"black\" : \"black\")\r\n    .attr(\"stroke-width\", feature => feature.isAirPlane ? 1 : 0.5)\r\n    .style(\"stroke-dasharray\", feature => feature.isAirPlane ? (\"15, 3\") : (\"3\", \"3\"))\r\n    .attr(\"d\", feature =>pathGenerator(feature))\r\n    .raise()\r\n    .on(\"click\", (mouseEvent, item) => {\r\n      if(currentLandmark.isVisible){\r\n        landmarkHandler(false, null);\r\n      }\r\n    })\r\n    .raise();\r\n  };\r\n\r\n  /**\r\n   * Draws the current new path.\r\n   * @param {*} svg - the svg used to draw the current new path\r\n   * @param {boolean} isDayTime - the parameter used for night time styles\r\n   */\r\n  const drawTempPath = (svg, isDayTime) => {\r\n    //format of one element of data\r\n    // {\r\n    //     type: \"LineString\", \r\n    //     coordinates: [],\r\n    //     isAirPlane: true\r\n    //   }\r\n    // console.log(newPath);\r\n    // console.log(newPath)\r\n    svg\r\n    .selectAll(\".newPath\")\r\n    .data([newPath])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"newPath\")\r\n    // .transition()\r\n    .attr(\"fill-opacity\",\"0\")\r\n    .attr(\"stroke\", feature => feature.isAirPlane ? \"red\" : \"red\")\r\n    .style(\"stroke-dasharray\", feature => feature.isAirPlane ? (\"15, 3\") : (\"3\", \"3\"))\r\n    .attr(\"stroke-opacity\", feature => 1)\r\n    .attr(\"stroke-width\", feature => 1)\r\n    .attr(\"d\", feature =>pathGenerator(feature))\r\n    .raise();\r\n  };\r\n\r\n  /**\r\n   * Draws the current modified path.\r\n   * @param {*} svg - the svg used to draw the current modified path\r\n   * @param {boolean} isDaylight - the parameter used for night time styles\r\n   */\r\n  const drawEditPath = (svg, isDayTime) => {\r\n    //format of one element of data\r\n    // {\r\n    //     type: \"LineString\",\r\n    //     coordinates: [],\r\n    //     isAirPlane: true\r\n    // }\r\n    svg\r\n    .selectAll(\".editPath\")\r\n    .data([editPath])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"editPath\")\r\n    .attr(\"fill-opacity\",\"0\")\r\n    .attr(\"stroke\", feature => feature.isAirPlane ? \"#73ff00\" : \"#73ff00\")\r\n    .style(\"stroke-dasharray\", feature => feature.isAirPlane ? (\"15, 3\") : (\"3\", \"3\"))\r\n    .attr(\"stroke-opacity\", feature => 1)\r\n    .attr(\"stroke-width\", feature => 1)\r\n    .attr(\"d\", feature =>pathGenerator(feature))\r\n    .raise();\r\n  };\r\n\r\n  /**\r\n   * Draws the scale.\r\n   * @param {*} svg - the svg used to draw the scale\r\n   */\r\n  const drawScale = (svg) => {\r\n\r\n    var lineGenerator = d3.line();\r\n    var minDimension = Math.min(width, height);\r\n    svg\r\n    .selectAll(\".scale\")\r\n    .data([1])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"scale\")\r\n    // .append('path')\r\n    .style(\"stroke\", \"white\")\r\n    .style(\"stroke-width\", 1)\r\n    .style(\"fill-opacity\", 0)\r\n    .style(\"stroke-opacity\", 1)\r\n    .attr(\"d\", lineGenerator([\r\n      [width * 0.73, height - 30], \r\n      [width * 0.73, height - 30 + 10], \r\n      [width * 0.73 + minDimension/4.0, height - 30 + 10], \r\n      [width * 0.73 + minDimension/4.0, height - 30]\r\n    ]))\r\n    .raise();\r\n    \r\n    svg\r\n    .selectAll(\".textScale\")\r\n    .data([1])\r\n    .join(\"text\")\r\n    .attr(\"class\", \"textScale\")\r\n    .attr(\"dx\", width * 0.73 + minDimension/8.0)\r\n    .attr(\"dy\", height - 30)\r\n    .style(\"text-anchor\", \"middle\")\r\n    .style(\"fill\", \"white\")\r\n    .text(`${Math.ceil(QUARTER_DIAMETER/scale * 100)/100} km`)\r\n    .raise();\r\n  }\r\n\r\n  /**\r\n   * Draws the globe.\r\n   * @param {Array<number>} rotateParams - the rotation parameters to position the globe\r\n   * @param {number} scaleParams - the scale parameter to scale the globe\r\n   * @param {boolean} isCoarse - the parameter for fine detail or coarse detail\r\n   */\r\n  const drawGlobe = (rotateParams, isCoarse) => {\r\n    const svg = d3.select(svgRef.current);\r\n    projection.rotate(rotateParams).scale(getRealScale());\r\n\r\n    var isDaylight = false;\r\n    \r\n    drawSphere(svg, isDaylight);\r\n    drawLand(svg, isCoarse, isDaylight);\r\n    drawLakes(svg, isCoarse, isDaylight);\r\n    drawCurrentShadow(svg, isDaylight);\r\n\r\n    drawLandOutline(svg, isCoarse, isDaylight);\r\n    drawLakesOutline(svg, isCoarse, isDaylight);\r\n\r\n    if(!isDaylight){\r\n      drawLights(svg, isCoarse, rotateParams);\r\n    }\r\n    \r\n    drawGraticule(svg, isDaylight);    \r\n\r\n    drawCurrentLandmark(svg, isDaylight);\r\n    drawArcs(svg, isDaylight);\r\n    drawTempPath(svg, isDaylight);\r\n    drawTempLandmark(svg, isDaylight);\r\n    drawEditPath(svg, isDaylight);\r\n    drawEditLandmark(svg, isDaylight);\r\n    drawLandmarks(svg, isDaylight, rotateParams);\r\n\r\n    drawScale(svg);\r\n  };\r\n\r\n  const getRealScale = () => {\r\n    return scale * Math.min(width, height)/2.0;\r\n  }\r\n\r\n  /**\r\n   * Handles the mouse wheel event.\r\n   * @param {*} event - the event triggered\r\n   */\r\n  const mouseWheelHandler = (event) => {\r\n    setScale(prev => {\r\n      let newVal = prev - event.deltaY/110;\r\n      return Math.min(Math.max(newVal, 1), 25.484);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handles the zoom in event.\r\n   */\r\n  const zoomInHandler = () => {\r\n    setScale(prevVal => Math.min(prevVal + 1, 25.484));\r\n  }\r\n\r\n  /**\r\n   * Handles the zoom out event.\r\n   */\r\n  const zoomOutHandler = () => {\r\n    setScale(prevVal => Math.max(prevVal - 1, 1));\r\n  }\r\n\r\n  /**\r\n   * Renders the external message while rendering the globe.\r\n   * @param {string} message \r\n   * @param {boolean} isCoarse \r\n   */\r\n  const renderExternalUpdate = (message, isCoarse) => {\r\n    setIsLoading(true);\r\n    setRenderText(message);\r\n    setTimeout(() => {\r\n      drawGlobe(oldCoordinates, isCoarse);\r\n      setIsLoading(false);\r\n      if(isCoarse){\r\n        setIsMove(true);\r\n      }\r\n    }, isCoarse ? 100 : 800);\r\n  }\r\n\r\n  const modulo = (a, n) => {\r\n    return ((a % n ) + n ) % n;\r\n  };\r\n\r\n  //Use effect hook.\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      drawGlobe(oldCoordinates, true);\r\n      setIsMove(true);\r\n    }\r\n  }, [scale])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad && !isDrag && !isMove){\r\n      // console.log(\"subsolar\");\r\n      renderExternalUpdate(\"Updating earth shadow...\", isDrag);\r\n    }\r\n  }, [subSolarCoordinates])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      // console.log(\"current landmark updated\", currentLandmark);\r\n      renderExternalUpdate(\"Rendering clicked landmark...\", true);\r\n    }\r\n  }, [currentLandmark.isVisible, currentLandmark.coordinates])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      setWidth(svgRef.current.clientWidth);\r\n      setHeight(svgRef.current.clientHeight);\r\n      renderExternalUpdate(\"Rendering for resized window...\", false);\r\n    }\r\n  }, [size])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      // console.log(\"newLandmark\", newLandmark);\r\n      renderExternalUpdate(\"Rendering new landmark...\", true);\r\n    }\r\n  }, [newLandmark])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      // console.log(\"edit landmark\");\r\n      renderExternalUpdate(\"Rendering edited landmark...\", true);\r\n    }\r\n  }, [editLandmark])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      // console.log(\"edit path\");\r\n      renderExternalUpdate(\"Rendering edited path...\", true);\r\n    }\r\n  }, [editPath.coordinates, editPath.isAirPlane])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      // console.log(\"new path\");\r\n      renderExternalUpdate(\"Rendering new path...\", true);\r\n    }\r\n  }, [newPath])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      // console.log(\"paths\");\r\n      renderExternalUpdate(\"Updating paths...\", false);\r\n    }\r\n  }, [paths])\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoad){\r\n      // console.log(\"else\");\r\n      renderExternalUpdate(\"Updating landmarks...\", false);\r\n    }\r\n  }, [landmarks])\r\n\r\n  useEffect(() => {\r\n    if(locateLandmarkCoordinates) {\r\n        setIsLoading(true);\r\n        setRenderText(`Locating landmark...`);\r\n        d3.transition()\r\n        .duration(3000)\r\n        .tween(\"rotate\", function() {\r\n          const longArray = [\r\n            -locateLandmarkCoordinates[0] + 360 - oldCoordinates[0], \r\n            -locateLandmarkCoordinates[0] - oldCoordinates[0], \r\n            -locateLandmarkCoordinates[0] - 360 - oldCoordinates[0]];\r\n          let amount = Number.MAX_VALUE;\r\n          let isPositive = true;\r\n          for(let i = 0; i < longArray.length; i++){\r\n            if(amount > Math.abs(longArray[i])){\r\n              amount = Math.abs(longArray[i]);\r\n              isPositive = longArray[i] > 0;\r\n            }\r\n          }\r\n          const r = d3.interpolate(oldCoordinates, [oldCoordinates[0] + (isPositive ? 1 : -1) * amount, -locateLandmarkCoordinates[1]]);\r\n          return function(t) {\r\n            if(t === 1){\r\n              setRenderText(`Rendering full resolution...`);\r\n              setLocateLandmarkCoordinates(null);\r\n              setTimeout(() => {\r\n                drawGlobe(r(t), false);\r\n                setIsLoading(false);\r\n              }, 100);\r\n            }\r\n            else{\r\n              drawGlobe(r(t), true);\r\n            }\r\n            \r\n            const coordinatesToUse = [modulo(r(t)[0] - 180, 360) - 180, r(t)[1]];\r\n            setOldCoordinates(coordinatesToUse);\r\n          }\r\n        })\r\n    }\r\n    \r\n  }, [locateLandmarkCoordinates])\r\n\r\n  useLayoutEffect(() => {\r\n    setWidth(svgRef.current.clientWidth);\r\n    setHeight(svgRef.current.clientHeight);\r\n    setIsRefReady(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(isRefReady) {\r\n      setIsLoading(true);\r\n      setRenderText(\"Rendering globe...\");\r\n      setTimeout(() => {\r\n        drawGlobe(oldCoordinates, false);\r\n        setIsLoading(false);\r\n        setIsInitialLoad(false);\r\n      }, 800);\r\n    }\r\n  }, [width, height, isRefReady])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <svg className={classes.svgStyle} ref={svgRef}\r\n        onMouseDown={onMouseDownHandler} \r\n        onMouseMove={onMouseMoveHandler} \r\n        onMouseUp={onMouseUpHandler}\r\n        onWheel={mouseWheelHandler}>\r\n      </svg>\r\n      <IconButton  size=\"medium\" variant=\"contained\" className={classes.zoomInButton} onClick={zoomInHandler}>\r\n        <AddIcon/>\r\n      </IconButton>\r\n      <IconButton  size=\"medium\" variant=\"contained\" className={classes.zoomOutButton} onClick={zoomOutHandler}>\r\n        <RemoveIcon/>\r\n      </IconButton>\r\n      {isLoading && <Typography className={classes.renderText}>{renderText}</Typography>}\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Globe;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction LandmarkInfo({ currentLandmark, value, index}) {\r\n  /**\r\n   * Gets the landmark information.\r\n   */\r\n  const getLandmarkInfoContent = () => {\r\n    if (currentLandmark.isVisible) {\r\n      var description = currentLandmark.description;\r\n      var descriptionArray = description.split(\"\\n\");\r\n      return (\r\n        <div>\r\n          <Typography variant=\"h4\">\r\n            {currentLandmark.name}\r\n          </Typography>\r\n          <Typography variant=\"h6\" paragraph>\r\n            Latitude: {currentLandmark.coordinates[1]}, Longitude: {currentLandmark.coordinates[0]}\r\n          </Typography>\r\n          {\r\n            descriptionArray.map(element => {\r\n              return (\r\n                <Typography variant=\"h6\" paragraph>\r\n                  {element}\r\n                </Typography>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div>\r\n          <Typography variant=\"h4\">\r\n            Click on a Landmark\r\n          </Typography>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div hidden={value !== index} style={{margin: \"20px\"}}>\r\n      <Typography variant=\"h5\">\r\n        Landmark Information\r\n      </Typography>\r\n      <br/>\r\n      {getLandmarkInfoContent()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandmarkInfo;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport { Input, Typography, CircularProgress, Grid, Dialog, DialogContent, DialogTitle, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  cancelButton: {\r\n    marginLeft: \"10px\", \r\n  },\r\n  finishEditButton: {\r\n    marginRight: \"10px\", \r\n  },\r\n  addNode: {\r\n    marginBottom: \"40px\"\r\n  },\r\n  formFields: {\r\n    marginBottom: \"20px\"\r\n  }\r\n}));\r\n\r\nfunction NewLandmarkTab({value, index, invalidateAuth, createLandmark, updateNewLandmark, setDialogTimer}) {\r\n    \r\n  const classes = useStyles();\r\n\r\n  //States\r\n  const [landmarkName, setLandmarkName] = useState(\"\");\r\n  const [landmarkLatitude, setLandmarkLatitude] = useState(\"\");\r\n  const [landmarkLongitude, setLandmarkLongitude] = useState(\"\");\r\n  const [landmarkDescription, setLandmarkDescription] = useState(\"\");\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [dialogTitle, setDialogTitle] = useState(\"\");\r\n  const [dialogContent, setDialogContent] = useState(\"\");\r\n\r\n  /**\r\n   * Handles the description change\r\n   * @param {*} event - the text event \r\n   */\r\n  const handleDescriptionChange = (event) => {\r\n    setLandmarkDescription(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles the name change.\r\n   * @param {*} event - the text event\r\n   */\r\n  const handleNameChange = (event) => {\r\n    setLandmarkName(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Handles the latitude change.\r\n   * @param {*} event - the text event\r\n   */\r\n  const handleLatitudeChange = (event) => {\r\n    if(event.target.value === \"\"){\r\n      updateNewLandmark(false, null);\r\n    }\r\n    if(Math.abs(event.target.value) <= 90){\r\n      setLandmarkLatitude(parseFloat(event.target.value));\r\n\r\n      if(landmarkLongitude !== \"\" && event.target.value !== \"\"){\r\n        updateNewLandmark(true, [landmarkLongitude, parseFloat(event.target.value)]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles the longitude change.\r\n   * @param {*} event - the text event\r\n   */\r\n  const handleLongitudeChange = (event) => {\r\n    if(event.target.value === \"\"){\r\n      updateNewLandmark(false, null);\r\n    }\r\n    if(Math.abs(event.target.value) <= 180){\r\n      setLandmarkLongitude(parseFloat(event.target.value));\r\n\r\n      if(event.target.value !== \"\" && landmarkLatitude !== \"\"){\r\n        updateNewLandmark(true, [parseFloat(event.target.value), landmarkLatitude]);\r\n      }\r\n    }\r\n  }\r\n\r\n  const onLandmarkSuccessful = (res) => {\r\n    setLandmarkName(\"\");\r\n    setLandmarkLatitude(\"\");\r\n    setLandmarkLongitude(\"\");\r\n    setLandmarkDescription(\"\");\r\n        \r\n    setDialogTitle(\"New Landmark Added\");\r\n    setDialogContent(\"Your landmark has been added successfully.\");\r\n    setIsDialogOpen(true);\r\n\r\n    setTimeout(() => {\r\n      setIsProcessing(false);\r\n      createLandmark({\r\n        id: `landmark_${res.landmark_uid}`,\r\n        landmark_uid: res.landmark_uid,\r\n        name: landmarkName,\r\n        description: landmarkDescription,\r\n        coordinates: [parseFloat(landmarkLongitude), parseFloat(landmarkLatitude)]\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  const recursiveFetch = (body, iteration) => {\r\n    fetch(`/landmarks`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      onLandmarkSuccessful(res);\r\n    })\r\n    .catch((error) => {\r\n      if(iteration === 0){\r\n        console.log(error);\r\n        invalidateAuth();\r\n      }\r\n      else{\r\n        fetch(`/users/refreshToken`, {\r\n          method: \"POST\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          setDialogTimer(res.refreshTokenExpiry);\r\n          recursiveFetch(body, iteration - 1);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          invalidateAuth();\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handles the add landmark event.\r\n   */\r\n  const handleAddLandmark = () => {\r\n    if(!(landmarkName === \"\" || landmarkLatitude === \"\" || landmarkLongitude === \"\")){\r\n      setIsProcessing(true);\r\n      const body = {\r\n        landmarkName: landmarkName,\r\n        landmarkDescription: landmarkDescription,\r\n        latitude: parseFloat(landmarkLatitude),\r\n        longitude: parseFloat(landmarkLongitude)\r\n      }\r\n\r\n      recursiveFetch(body, 1);\r\n    }\r\n    else{\r\n      setDialogTitle(\"Unable to Add Landmark\");\r\n      setDialogContent(\"Ensure that the landmark name, longitude, and latitude are populated and valid.\");\r\n      setIsDialogOpen(true);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles closing the dialog.\r\n   */\r\n   const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setLandmarkName(\"\");\r\n    setLandmarkDescription(\"\");\r\n    setLandmarkLongitude(\"\");\r\n    setLandmarkLatitude(\"\")\r\n  };\r\n\r\n  return (\r\n    <form hidden={value !== index} style={{margin: \"20px\"}}>\r\n      <Typography variant=\"h5\">\r\n        Create a New Landmark\r\n      </Typography>\r\n      <FormControl fullWidth>\r\n        <InputLabel htmlFor=\"landmarkLatitude\">Latitude</InputLabel>\r\n        <Input \r\n          type=\"number\" \r\n          id=\"landmarkLatitude\" \r\n          placeholder=\"Enter value between -90 to 90\" \r\n          name=\"Latitude\"\r\n          value={landmarkLatitude}\r\n          onChange={handleLatitudeChange}/>\r\n      </FormControl>\r\n      <FormControl fullWidth\r\n        className={classes.formFields}>\r\n        <InputLabel htmlFor=\"landmarkLongitude\">Longitude</InputLabel>\r\n        <Input \r\n          type=\"number\" \r\n          id=\"landmarkLongitude\" \r\n          placeholder=\"Enter value between -180 to 180\" \r\n          name=\"Longitude\"\r\n          value={landmarkLongitude}\r\n          onChange={handleLongitudeChange}/>\r\n      </FormControl>\r\n      <TextField \r\n        id=\"landmarkName\" \r\n        label=\"Landmark Name\" \r\n        placeholder=\"e.g. Vancouver, BC, Canada\" \r\n        value={landmarkName}\r\n        onChange={handleNameChange} \r\n        fullWidth\r\n        className={classes.formFields}\r\n        inputProps={{maxLength: 255}}/>\r\n      <TextField\r\n        id=\"standard-multiline-static\"\r\n        label=\"Description\"\r\n        placeholder=\"Enter a description about the landmark\" \r\n        multiline\r\n        rows={12}\r\n        value={landmarkDescription}\r\n        onChange={handleDescriptionChange} \r\n        fullWidth\r\n        className={classes.formFields}\r\n        inputProps={{maxLength: 500}}/>\r\n      <Grid container justify=\"center\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleAddLandmark} className={classes.finishEditButton}>\r\n          {isProcessing && <CircularProgress size={24} color='secondary' disableShrink />}\r\n          {!isProcessing && 'Create Landmark'}\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={handleReset} className={classes.cancelButton}>\r\n          {isProcessing && <CircularProgress size={24} color='primary' disableShrink />}\r\n          {!isProcessing && 'Reset Values'}\r\n        </Button>\r\n      </Grid>\r\n      <Dialog\r\n        open={isDialogOpen}\r\n        onClose={handleDialogClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        fullWidth>\r\n          <DialogTitle id=\"alert-dialog-title\">{dialogTitle}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {dialogContent}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDialogClose}>\r\n              OK \r\n            </Button>\r\n          </DialogActions>\r\n      </Dialog>\r\n    </form>\r\n  );\r\n}\r\n \r\nexport default NewLandmarkTab;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport { Input, Typography, Paper, FormControl, InputLabel } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  nodeElement: {\r\n    position: 'relative',\r\n    marginBottom: \"10px\", \r\n    paddingTop: \"20px\",\r\n    paddingBottom: \"20px\",\r\n    paddingLeft: \"10px\",\r\n    paddingRight:\"10px\",\r\n    backgroundColor: \"#525252\"\r\n  },\r\n  deleteButton: {\r\n    position: 'absolute',\r\n    right: '10px',\r\n    top: '10px',\r\n    color: \"white\",\r\n    '&:hover': {\r\n      color: \"white\",\r\n      backgroundColor: 'gray',\r\n      boxShadow: 'none',\r\n    }\r\n  }\r\n}));\r\n\r\nfunction CoordinateFormItem({latitude, longitude, onLatitudeChange, onLongitudeChange, onDelete, index}) {\r\n  const classes = useStyles();\r\n\r\n  var latId = `nodeLatitude1_${index}`;\r\n  var longitudeId = `nodeLongitude_${index}`;\r\n\r\n  return (\r\n    <Paper className={classes.nodeElement} elevation={2} key={index}>\r\n      <Typography>Node {index + 1}</Typography>\r\n      <FormControl fullWidth>\r\n        <InputLabel htmlFor={latId}>Latitude</InputLabel>\r\n        <Input \r\n          type=\"number\" \r\n          id={latId}\r\n          placeholder=\"Enter value between -90 to 90\" \r\n          name=\"Latitude\"\r\n          value={latitude}\r\n          onChange={(event) => onLatitudeChange(event, index)} />\r\n      </FormControl>\r\n      <FormControl fullWidth>\r\n        <InputLabel htmlFor={longitudeId}>Longitude</InputLabel>\r\n        <Input \r\n          type=\"number\" \r\n          id={longitudeId}\r\n          placeholder=\"Enter value between -180 to 180\" \r\n          name=\"Longitude\"\r\n          value={longitude}\r\n          onChange={(event) => onLongitudeChange(event, index)} />\r\n      </FormControl>\r\n      <IconButton color=\"secondary\" className={classes.deleteButton} onClick={() => onDelete(index)}>\r\n        <CloseIcon/>\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default CoordinateFormItem;","//Imports from libraries\r\nimport React, { useState } from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Input, CircularProgress, Paper, TextField, Grid, Dialog, DialogContent, DialogTitle, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport AirplanemodeActiveIcon from '@material-ui/icons/AirplanemodeActive';\r\nimport CommuteIcon from '@material-ui/icons/Commute';\r\nimport CoordinateFormItem from \"./CoordinateFormItem\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  cancelButton: {\r\n    marginLeft: \"10px\", \r\n    marginBottom: \"50vh\",\r\n  },\r\n  finishEditButton: {\r\n    marginRight: \"10px\", \r\n    marginBottom: \"50vh\"\r\n  },\r\n  addNode: {\r\n    marginBottom: \"40px\"\r\n  },\r\n}));\r\n\r\nfunction NewPathTab({value, index, invalidateAuth, updateNewPath, createPath, setDialogTimer}) {\r\n    \r\n  const classes = useStyles();\r\n\r\n  //NewPathTab states\r\n  const [coordinates, setCoordinates] = useState([]);\r\n  const [isAirplane, setIsAirplane] = useState(true);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [dialogTitle, setDialogTitle] = useState(\"\");\r\n  const [dialogContent, setDialogContent] = useState(\"\");\r\n\r\n  /**\r\n   * Handles the name change of the edited landmark.\r\n   * @param {*} event - the event for the name change\r\n   */\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Handles creating a new node.\r\n   */\r\n  const handleNewNode = () => {\r\n    setCoordinates(prevArray => [...prevArray, [\"\", \"\"]]);\r\n  }\r\n\r\n  /**\r\n   * Handles creating a new path.\r\n   */\r\n  const handleNewPath = () => {\r\n    var isNodesPopulated = true;\r\n\r\n    for(var i = 0; i < coordinates.length; i++){\r\n      if(coordinates[i][0] === \"\" || coordinates[i][1] === \"\"){\r\n        isNodesPopulated = false;\r\n      }\r\n    }\r\n    \r\n    if(isNodesPopulated && coordinates.length >= 2){\r\n      setIsProcessing(true);\r\n      const body = {\r\n        coordinates: [...coordinates], \r\n        isAirPlane: isAirplane,\r\n        path_name: name\r\n      }\r\n\r\n      recursiveFetch(body, 1);\r\n    }\r\n    else{\r\n      setDialogTitle(\"Unable to Add Path\");\r\n      setDialogContent(\"At least a longitude or latitude is missing from your nodes. Delete the problem node or properly fill in the latitude and longitude.\");\r\n      setIsDialogOpen(true);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Fetches for the new path recursively.\r\n   * @param {*} body - the body to send via http request\r\n   * @param {number} iteration - the iteration number to the base case\r\n   */\r\n  const recursiveFetch = (body, iteration) => {\r\n    fetch(`/paths`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      onPathSuccessful(res);\r\n    })\r\n    .catch((error) => {\r\n      if(iteration === 0){\r\n        console.log(error);\r\n        invalidateAuth();\r\n      }\r\n      else{\r\n        fetch(`/users/refreshToken`, {\r\n          method: \"POST\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          setDialogTimer(res.refreshTokenExpiry);\r\n          recursiveFetch(body, iteration - 1);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          invalidateAuth();\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handles the method upon successful path addition\r\n   * @param {*} res - the response of the http request\r\n   */\r\n  const onPathSuccessful = (res) => {\r\n    setCoordinates([]);\r\n    setName(\"\");\r\n        \r\n    setDialogTitle(\"New Path Added\");\r\n    setDialogContent(\"Your path has been added successfully.\");\r\n    setIsDialogOpen(true);\r\n\r\n    setTimeout(() => {\r\n      setIsProcessing(false);\r\n      createPath({\r\n        type: \"LineString\", \r\n        coordinates: [...coordinates], \r\n        id:`path_${res.path_uid}`,\r\n        path_uid: res.path_uid,\r\n        isAirPlane: isAirplane,\r\n        path_name: name\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  /**\r\n   * Handles deleting a node.\r\n   * @param {*} index - the index of the node to delete\r\n   */\r\n  const handleDeleteNode = (index) => {\r\n    var newNodes = [...coordinates];\r\n    newNodes.splice(index, 1);\r\n\r\n    setCoordinates(newNodes);\r\n    updateTempPath(newNodes);\r\n  };\r\n\r\n  /**\r\n   * Updates the temporary path.\r\n   * @param {*} newElements - the coordinates used to show the temporary path\r\n   * @param {*} newIsAirplane - (optional) the boolean airplane state\r\n   */\r\n  const updateTempPath = (newElements, newIsAirplane) => {\r\n    var isAirplaneVal = newIsAirplane !== undefined ? newIsAirplane : isAirplane;\r\n\r\n    var newTempPath = {\r\n      type: \"LineString\", \r\n      coordinates: [],\r\n      isAirPlane: isAirplaneVal\r\n    };\r\n\r\n    for(var i = 0; i < newElements.length; i++){\r\n      var node = newElements[i];\r\n      var lat = node[1];\r\n      var long = node[0];\r\n\r\n      newTempPath.coordinates.push([long !== \"\" ? long : 0, lat !== \"\" ? lat : 0])\r\n    }\r\n    updateNewPath(newTempPath);\r\n  };\r\n\r\n  /**\r\n   * Handles a latitude field being changed.\r\n   * @param {*} event - the text event \r\n   * @param {number} index - the index of the latitude to change\r\n   */\r\n  const onElementLatitudeChange = (event, index) => {\r\n    var newElements = [...coordinates];\r\n    let item = {...newElements[index]};\r\n\r\n    if(Math.abs(parseFloat(event.target.value)) <= 90){\r\n      item[1] = parseFloat(event.target.value);\r\n    }\r\n    else if(event.target.value === \"\"){\r\n      item[1] = event.target.value;\r\n    }\r\n    \r\n    newElements[index] = item;\r\n\r\n    setCoordinates(newElements);\r\n    updateTempPath(newElements);\r\n  };\r\n\r\n  /**\r\n   * Handles a longitude field being changed.\r\n   * @param {*} event - the text event\r\n   * @param {number} index - the index of the node\r\n   */\r\n  const onElementLongitudeChange = (event, index) => {\r\n    var newElements = [...coordinates];\r\n    let item = {...newElements[index]};\r\n\r\n    if(Math.abs(parseFloat(event.target.value)) <= 180){\r\n      item[0] = parseFloat(event.target.value);\r\n    }\r\n    else if(event.target.value === \"\"){\r\n      item[0] = event.target.value;\r\n    }\r\n\r\n    newElements[index] = item;\r\n    \r\n    setCoordinates(newElements);\r\n    updateTempPath(newElements);\r\n  };\r\n\r\n  /**\r\n   * Handles the switch state being changed.\r\n   * @param {*} event - the switch event\r\n   */\r\n  const handleSwitchChange = (event) => {\r\n    setIsAirplane(event.target.checked);\r\n    updateTempPath(coordinates, event.target.checked);\r\n  };\r\n\r\n  /**\r\n   * Handles closing the dialog.\r\n   */\r\n   const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setName(\"\");\r\n    setCoordinates([]);\r\n    updateTempPath([]);\r\n  };\r\n\r\n  return (\r\n    <Paper hidden={value !== index} square style={{padding: \"20px\", maxHeight: \"calc(100vh - 50px)\", overflow: 'auto'}} elevation={0}>\r\n      <Typography variant=\"h5\">\r\n        Create a New Path\r\n      </Typography>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch \r\n            checked={isAirplane} \r\n            onChange={handleSwitchChange} \r\n            name=\"checkedA\" \r\n            checkedIcon={<AirplanemodeActiveIcon/>}\r\n            icon={<CommuteIcon/>}/>\r\n        }\r\n        label=\"Travel Type\"/>\r\n      <TextField \r\n        id=\"pathName\" \r\n        label=\"Path Name\" \r\n        placeholder=\"e.g. LAX - HKG or California Trip 1\" \r\n        value={name}\r\n        onChange={handleNameChange}\r\n        fullWidth\r\n        style={{marginBottom: \"10px\"}}\r\n        inputProps={{maxLength: 255}}/>\r\n        {\r\n          coordinates.map((element, index) => {\r\n            return (\r\n              <CoordinateFormItem\r\n                latitude={element[1]}\r\n                longitude={element[0]}\r\n                onLatitudeChange={onElementLatitudeChange}\r\n                onLongitudeChange={onElementLongitudeChange}\r\n                onDelete={handleDeleteNode}\r\n                index={index}/>\r\n            );\r\n          })\r\n        }\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleNewNode} fullWidth className={classes.addNode}> \r\n        <AddIcon className={classes.iconText}/> Add Node\r\n      </Button>\r\n    \r\n      <Grid container justify=\"center\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleNewPath} className={classes.finishEditButton}>\r\n          {isProcessing && <CircularProgress size={24} color='secondary' disableShrink />}\r\n          {!isProcessing && 'Create Path'}\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={handleReset} className={classes.cancelButton}>\r\n          {isProcessing && <CircularProgress size={24} color='primary' disableShrink />}\r\n          {!isProcessing && 'Reset Values'}\r\n        </Button>\r\n      </Grid>\r\n      <Dialog\r\n        open={isDialogOpen}\r\n        onClose={handleDialogClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        fullWidth>\r\n          <DialogTitle id=\"alert-dialog-title\">{dialogTitle}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {dialogContent}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDialogClose}>\r\n              OK \r\n            </Button>\r\n          </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n}\r\n \r\nexport default NewPathTab;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport { Input, Typography, CircularProgress, Paper, FormControl, InputLabel, TextField, Grid, Dialog, DialogContent, DialogTitle, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  nodeElement: {\r\n    position: 'relative',\r\n    marginTop: \"10px\", \r\n    marginBottom: \"10px\", \r\n    paddingTop: \"20px\",\r\n    paddingBottom: \"20px\",\r\n    paddingLeft: \"10px\",\r\n    paddingRight:\"10px\",\r\n    backgroundColor: \"#525252\"\r\n  },\r\n  iconText: {\r\n    marginRight: \"10px\",\r\n    marginLeft: \"10px\"\r\n  },\r\n  cancelButton: {\r\n    marginLeft: \"10px\", \r\n  },\r\n  finishEditButton: {\r\n    marginRight: \"10px\", \r\n  },\r\n  formFields: {\r\n    marginBottom: \"20px\"\r\n  }\r\n}));\r\n\r\nfunction EditLandmarksTab({value, index, invalidateAuth, updateLandmark, deleteLandmark, landmarks, toInformationTab, updateEditLandmark, setDialogTimer, setLocateLandmarkCoordinates}) {\r\n    \r\n  const classes = useStyles();\r\n\r\n  //States\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editId, setEditId] = useState(-1);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [editName, setEditName] = useState(\"\");\r\n  const [editDescription, setEditDescription] = useState(\"\");\r\n  const [editLongitude, setEditLongitude] = useState(\"\");\r\n  const [editLatitude, setEditLatitude] = useState(\"\");\r\n  const [editIndex, setEditIndex] = useState(-1);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [dialogTitle, setDialogTitle] = useState(\"\");\r\n  const [dialogContent, setDialogContent] = useState(\"\");\r\n  const [isDialogDeleteOpen, setIsDialogDeleteOpen] = useState(false);\r\n  // const [dialogTitle, setDialogTitle] = useState(\"\");\r\n  const [dialogDeleteContent, setDialogDeleteContent] = useState([]);\r\n  const [landmarkUIDToDelete, setLandmarkUIDToDelete] = useState(-1);\r\n  const [indexToDelete, setIndexToDelete] = useState(-1);\r\n\r\n  /**\r\n   * Handles the latitude change of the edited landmark.\r\n   * @param {*} event - the event for the latitude change\r\n   */\r\n  const handleLatitudeChange = (event) => {\r\n    if(event.target.value === \"\"){\r\n      updateEditLandmark(false, null);\r\n    }\r\n\r\n    if(Math.abs(event.target.value) <= 90){\r\n      setEditLatitude(event.target.value);\r\n      if(editLongitude !== \"\" && event.target.value !== \"\"){\r\n        updateEditLandmark(true, [editLongitude, parseFloat(event.target.value)]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles the longitude change of the edited landmark.\r\n   * @param {*} event - the event for the longitude change\r\n   */\r\n  const handleLongitudeChange = (event) => {\r\n    if(event.target.value === \"\"){\r\n      updateEditLandmark(false, null);\r\n    }\r\n\r\n    if(Math.abs(event.target.value) <= 180){\r\n      setEditLongitude(event.target.value);\r\n      if(editLatitude !== \"\" && event.target.value !== \"\"){\r\n        updateEditLandmark(true, [parseFloat(event.target.value), editLatitude]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles the name change of the edited landmark.\r\n   * @param {*} event - the event for the name change\r\n   */\r\n  const handleNameChange = (event) => {\r\n    setEditName(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Handles the description change of the edited landmark.\r\n   * @param {*} event - the event for the desription change\r\n   */\r\n  const handleDescriptionChange = (event) => {\r\n    setEditDescription(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Handles the method upon successful landmark edit.\r\n   * @param {*} res - the response of the http request\r\n   * @param {number} index - the index of the landmark to update on the client side\r\n   */\r\n  const onEditLandmarkSuccessful = (res, index) => {\r\n    setIsEdit(false);\r\n    setIsProcessing(false);\r\n        \r\n    setDialogTitle(\"Landmark Edit Successful\");\r\n    setDialogContent(\"Your landmark has been edited successfully.\");\r\n    setIsDialogOpen(true);\r\n\r\n    setTimeout(() => {\r\n      updateLandmark({\r\n        landmark_uid: editId,\r\n        name: editName,\r\n        description: editDescription,\r\n        coordinates: [editLongitude, editLatitude]\r\n      }, index);\r\n      setEditIndex(-1);\r\n    }, 500);\r\n  }\r\n\r\n  /**\r\n   * Handles editing the landmark.\r\n   */\r\n  const handleEditLandmark = () => {\r\n    if(editId !== -1 && editName !== \"\" && editLongitude !== \"\" && editLatitude !== \"\"){\r\n      setIsProcessing(true);\r\n      const body = {\r\n        landmark_uid: editId,\r\n        name: editName,\r\n        description: editDescription,\r\n        coordinates: [editLongitude, editLatitude]\r\n      };\r\n\r\n      recursiveFetch(body, 1, editIndex, \"PUT\", onEditLandmarkSuccessful);\r\n    }\r\n    else{\r\n      setDialogTitle(\"Unable to Edit Landmark\");\r\n      setDialogContent(\"Ensure that the landmark name, longitude, and latitude are populated and valid.\");\r\n      setIsDialogOpen(true);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles canceling out of the edit mode.\r\n   */\r\n  const handleCancelEdit = () => {\r\n    updateEditLandmark(false, null);\r\n    setIsEdit(false);\r\n    setEditIndex(-1);\r\n  };\r\n\r\n  /**\r\n   * Handles changing to the edit landmark mode.\r\n   * @param {*} landmark - the landmark to edit\r\n   * @param {number} index - the index of the landmark \r\n   */\r\n  const handleEditLandmarkMode = (landmark, index) => {\r\n    setIsEdit(true);\r\n    setEditId(landmark.landmark_uid);\r\n    setEditName(landmark.name);\r\n    setEditDescription(landmark.description);\r\n    setEditLongitude(landmark.coordinates[0]);\r\n    setEditLatitude(landmark.coordinates[1]);\r\n    setEditIndex(index);\r\n    updateEditLandmark(true, [landmark.coordinates[0], landmark.coordinates[1]]);\r\n  };\r\n\r\n  /**\r\n   * Handles the operations for a successful landmark deletion.\r\n   * @param {*} res - the response of the http request\r\n   * @param {number} index - the index of the landmark to delete on the client side\r\n   */\r\n  const onDeleteLandmarkSuccessful = (res, index) => {\r\n    setIsProcessing(false);\r\n    setIsEdit(false);\r\n        \r\n    setIsDialogDeleteOpen(false);\r\n    setDialogTitle(\"Landmark Delete Successful\");\r\n    setDialogContent(\"Your landmark has been deleted successfully.\");\r\n    setIsDialogOpen(true);\r\n    setTimeout(() => {\r\n      deleteLandmark(res.landmark_uid, index);\r\n    }, 500);\r\n  }\r\n\r\n  /**\r\n   * Fetches for the delete request recursively.\r\n   * @param {*} body - the body to send via http request\r\n   * @param {number} iteration - the iteration number to the base case\r\n   * @param {number} index - the index of the landmark to delete on the client side\r\n   * @param {string} method - the string representing the http request method\r\n   * @param {number} onMethodSuccess - the function to run upon successful http request\r\n   */\r\n  const recursiveFetch = (body, iteration, index, method, onMethodSuccess) => {\r\n    fetch(`/landmarks`, {\r\n      method: method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      onMethodSuccess(res, index);\r\n    })\r\n    .catch((error) => {\r\n      if(iteration === 0){\r\n        console.log(error);\r\n        invalidateAuth();\r\n      }\r\n      else{\r\n        fetch(`/users/refreshToken`, {\r\n          method: \"POST\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          setDialogTimer(res.refreshTokenExpiry);\r\n          recursiveFetch(body, iteration - 1, index, method, onMethodSuccess);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          invalidateAuth();\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handles deleting the landmark.\r\n   * @param {*} landmark - the landmark to delete\r\n   * @param {number} index - the index of the landmark\r\n   */\r\n  const handleDeleteButtonPressed = (landmark, index) => {\r\n    \r\n    setDialogDeleteContent([`${landmark.name} (${landmark.coordinates[1]}, ${landmark.coordinates[0]})`,`${landmark.description}`]);\r\n    setIsDialogDeleteOpen(true);\r\n    setLandmarkUIDToDelete(landmark.landmark_uid);\r\n    setIndexToDelete(index);\r\n  };\r\n\r\n  const handleDeleteLandmark = () => {\r\n    setIsProcessing(true);\r\n    console.log(\"the landmark uid to delete is\", landmarkUIDToDelete);\r\n    const body = {\r\n      landmark_uid: landmarkUIDToDelete\r\n    };\r\n\r\n    recursiveFetch(body, 1, indexToDelete, \"DELETE\", onDeleteLandmarkSuccessful);\r\n  };\r\n\r\n  /**\r\n   * Handles closing the dialog.\r\n   */\r\n   const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleDialogDeleteClose = () => {\r\n    setIsDialogDeleteOpen(false);\r\n  };\r\n\r\n  const handleLocateLandmark = (landmark) => {\r\n    setLocateLandmarkCoordinates(landmark.coordinates);\r\n  };\r\n\r\n  /**\r\n   * Gets the landmark content.\r\n   */\r\n  const getEditLandmarkContent = () => {\r\n    return (\r\n      <form>\r\n        <FormControl fullWidth>\r\n        <InputLabel htmlFor=\"landmarkLatitude\">Latitude</InputLabel>\r\n        <Input \r\n          type=\"number\" \r\n          id=\"landmarkLatitude\" \r\n          placeholder=\"Enter value between -90 to 90\" \r\n          name=\"Latitude\"\r\n          value={editLatitude}\r\n          onChange={handleLatitudeChange}/>\r\n        </FormControl>\r\n        <FormControl fullWidth\r\n          className={classes.formFields}>\r\n          <InputLabel htmlFor=\"landmarkLongitude\">Longitude</InputLabel>\r\n          <Input \r\n          type=\"number\" \r\n          id=\"landmarkLongitude\" \r\n          placeholder=\"Enter value between -180 to 180\" \r\n          name=\"Longitude\"\r\n          value={editLongitude}\r\n          onChange={handleLongitudeChange}/>\r\n        </FormControl>\r\n        <TextField \r\n          id=\"landmarkName\" \r\n          label=\"Landmark Name\" \r\n          placeholder=\"e.g. Vancouver, BC, Canada\" \r\n          value={editName}\r\n          onChange={handleNameChange}\r\n          fullWidth\r\n          className={classes.formFields}\r\n          inputProps={{maxLength: 255}}/>\r\n        <TextField\r\n          id=\"standard-multiline-static\"\r\n          label=\"Description\"\r\n          placeholder=\"Enter a description about the landmark\" \r\n          multiline\r\n          rows={12}\r\n          maxHeight=\"500px\"\r\n          value={editDescription}\r\n          onChange={handleDescriptionChange}\r\n          fullWidth\r\n          className={classes.formFields}\r\n          inputProps={{maxLength: 500}}/>\r\n        <Grid container justify=\"center\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleEditLandmark} className={classes.finishEditButton}>\r\n            {isProcessing && <CircularProgress size={24} color='secondary' disableShrink />}\r\n            {!isProcessing && 'Finish Edit'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={handleCancelEdit} className={classes.cancelButton}>\r\n            {isProcessing && <CircularProgress size={24} color='primary' disableShrink />}\r\n            {!isProcessing && 'Cancel Edit'}\r\n          </Button>\r\n        </Grid>\r\n    </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper hidden={value !== index} square style={{padding: \"20px\", maxHeight: \"calc(100vh - 50px)\", overflow: 'auto'}} elevation={0}>\r\n      <Typography variant=\"h5\">\r\n        {isEdit ? \"Edit Landmark\" : \"Landmark List\"}\r\n      </Typography>\r\n      {\r\n        !isEdit && landmarks.map((element, index) => {\r\n          return(\r\n            <Paper className={classes.nodeElement} elevation={2} key={element.id}>\r\n              <IconButton onClick={() => handleLocateLandmark(element)}>\r\n                <MyLocationIcon/>\r\n              </IconButton>\r\n              <IconButton onClick={() => toInformationTab(element)}>\r\n                <InfoIcon/>\r\n              </IconButton>\r\n              <IconButton color=\"primary\" onClick={() => handleEditLandmarkMode(element, index)}>\r\n                <EditIcon/>\r\n              </IconButton>\r\n              <IconButton color=\"secondary\" onClick={() => handleDeleteButtonPressed(element, index)}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.iconText}>\r\n                {element.name}\r\n              </Typography>\r\n            </Paper>\r\n          );\r\n        })\r\n      }\r\n      {\r\n        isEdit && getEditLandmarkContent()\r\n      }\r\n      <Dialog\r\n        open={isDialogOpen}\r\n        onClose={handleDialogClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        fullWidth>\r\n          <DialogTitle id=\"alert-dialog-title\">{dialogTitle}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {dialogContent}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDialogClose}>\r\n              OK \r\n            </Button>\r\n          </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={isDialogDeleteOpen}\r\n        onClose={handleDialogDeleteClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        fullWidth>\r\n          <DialogTitle id=\"alert-dialog-title\">Delete Landmark?</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {\r\n                dialogDeleteContent.map(element => {\r\n                  return (\r\n                    <Typography>\r\n                      {element}\r\n                    </Typography>\r\n                  );\r\n                })\r\n              }\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteLandmark}>\r\n              DELETE LANDMARK \r\n            </Button>\r\n            <Button onClick={handleDialogDeleteClose}>\r\n              CANCEL \r\n            </Button>\r\n          </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n}\r\n \r\nexport default EditLandmarksTab;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport { Input, Typography, CircularProgress, Paper, FormControl, InputLabel, TextField, Grid, Dialog, DialogContent, DialogTitle, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport AirplanemodeActiveIcon from '@material-ui/icons/AirplanemodeActive';\r\nimport CommuteIcon from '@material-ui/icons/Commute';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CoordinateFormItem from \"./CoordinateFormItem\";\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"20px\", \r\n    maxHeight: \"calc(100vh - 50px)\", \r\n    overflow: 'auto'\r\n  },\r\n  nodeElement: {\r\n    position: 'relative',\r\n    marginTop: \"10px\", \r\n    marginBottom: \"10px\", \r\n    paddingTop: \"20px\",\r\n    paddingBottom: \"20px\",\r\n    paddingLeft: \"10px\",\r\n    paddingRight:\"10px\",\r\n    backgroundColor: \"#525252\"\r\n  },\r\n  deleteButton: {\r\n    position: 'absolute',\r\n    right: '10px',\r\n    top: '10px',\r\n    color: \"white\",\r\n    '&:hover': {\r\n      color: \"white\",\r\n      backgroundColor: 'gray',\r\n      boxShadow: 'none',\r\n    }\r\n  },\r\n  iconText: {\r\n    marginRight: \"10px\",\r\n    marginLeft: \"10px\"\r\n  },\r\n  addNode: {\r\n    marginBottom: \"40px\"\r\n  },\r\n  cancelButton: {\r\n    marginLeft: \"10px\", \r\n    marginBottom: \"50vh\",\r\n  },\r\n  finishEditButton: {\r\n    marginRight: \"10px\", \r\n    marginBottom: \"50vh\"\r\n  },\r\n  pathTypography : {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  '@global': {\r\n    '*::-webkit-scrollbar': {\r\n    width: '10px'\r\n    },\r\n    '*::-webkit-scrollbar-track': {\r\n      '-webkit-box-shadow': 'inset 0 0 6px rgba(35, 39, 42, .7)',\r\n      '-webkit-border-radius': '10px'\r\n    },\r\n    '*::-webkit-scrollbar-thumb': {\r\n      '-webkit-border-radius': '10px',\r\n      'border-radius': '10px',\r\n      'background': '#858585' \r\n    }\r\n  }\r\n}));\r\n\r\nfunction EditPathsTab({value, index, invalidateAuth, paths, deletePath, updatePath, updateEditPath, setDialogTimer}) {\r\n    \r\n  const classes = useStyles();\r\n\r\n  //States\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [editName, setEditName] = useState(\"\");\r\n  const [editId, setEditId] = useState(-1);\r\n  const [editIndex, setEditIndex] = useState(-1);\r\n  const [coordinates, setCoordinates] = useState([]);\r\n  const [isAirPlane, setIsAirPlane] = useState(false);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [dialogTitle, setDialogTitle] = useState(\"\");\r\n  const [dialogContent, setDialogContent] = useState(\"\");\r\n\r\n  /**\r\n   * Handles a latitude field being changed.\r\n   * @param {*} event - the text event \r\n   * @param {number} index - the index of the node\r\n   */\r\n  const onElementLatitudeChange = (event, index) => {\r\n    var newElements = [...coordinates];\r\n    let item = {...newElements[index]};\r\n\r\n    if(Math.abs(parseFloat(event.target.value)) <= 90){\r\n      item[1] = parseFloat(event.target.value);\r\n    }\r\n    else if(event.target.value === \"\"){\r\n      item[1] = event.target.value;\r\n    }\r\n    \r\n    newElements[index] = item;\r\n\r\n    setCoordinates(newElements);\r\n    updateEditPath(newElements, isAirPlane);\r\n  };\r\n\r\n  /**\r\n   * Handles a longitude field being changed.\r\n   * @param {*} event - the text event\r\n   * @param {number} index - the index of the node\r\n   */\r\n  const onElementLongitudeChange = (event, index) => {\r\n    var newElements = [...coordinates];\r\n    let item = {...newElements[index]};\r\n\r\n    if(Math.abs(parseFloat(event.target.value)) <= 180){\r\n      item[0] = parseFloat(event.target.value);\r\n    }\r\n    else if(event.target.value === \"\"){\r\n      item[0] = event.target.value;\r\n    }\r\n\r\n    newElements[index] = item;\r\n    \r\n    setCoordinates(newElements);\r\n    updateEditPath(newElements, isAirPlane);\r\n  };\r\n\r\n  /**\r\n   * Handles deleting a node.\r\n   * @param {*} index - the index of the node\r\n   */\r\n  const handleDeleteNode = (index) => {\r\n    var newNodes = [...coordinates];\r\n    newNodes.splice(index, 1);\r\n    setCoordinates(newNodes);\r\n    updateEditPath(newNodes, isAirPlane);\r\n  };\r\n\r\n  /**\r\n   * Handles the name change of the edited landmark.\r\n   * @param {*} event - the event for the name change\r\n   */\r\n  const handleNameChange = (event) => {\r\n    setEditName(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Handles the switch state being changed.\r\n   * @param {*} event - the switch event\r\n   */\r\n  const handleSwitchChange = (event) => {\r\n    setIsAirPlane(event.target.checked);\r\n    updateEditPath(coordinates, event.target.checked);\r\n  };\r\n\r\n  /**\r\n   * Handles editing the landmark.\r\n   */\r\n  const handleEditPath = () => {\r\n    var isNodesPopulated = true;\r\n    for(var i = 0; i < coordinates.length; i++){\r\n      if(coordinates[i][0] === \"\" || coordinates[i][1] === \"\"){\r\n        isNodesPopulated = false;\r\n        break;\r\n      }\r\n    }\r\n    if(isNodesPopulated && coordinates.length >= 2){\r\n      setIsProcessing(true);\r\n      const body = {\r\n        path_uid: editId,\r\n        path_name: editName,\r\n        coordinates: coordinates,\r\n        is_airplane: isAirPlane\r\n      };\r\n\r\n      recursiveFetch(body, 1, editIndex, \"PUT\", onEditPathSuccessful);\r\n    }\r\n    else{\r\n      setDialogTitle(\"Unable to Edit Path\");\r\n      setDialogContent(\"At least a longitude or latitude is missing from your nodes. Delete the problem node or properly fill in the latitude and longitude.\");\r\n      setIsDialogOpen(true);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Fetches for the delete request recursively.\r\n   * @param {*} body - the body to send via http request\r\n   * @param {number} iteration - the iteration number to the base case\r\n   * @param {number} index - the index of the landmark to delete on the client side\r\n   * @param {string} method - the string representing the http request method\r\n   * @param {void} onMethodSuccess - the function to run upon successful http request\r\n   */\r\n   const recursiveFetch = (body, iteration, index, method, onMethodSuccess) => {\r\n    fetch(`/paths`, {\r\n      method: method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      onMethodSuccess(res, index);\r\n    })\r\n    .catch((error) => {\r\n      if(iteration === 0){\r\n        console.log(error);\r\n        invalidateAuth();\r\n      }\r\n      else{\r\n        fetch(`/users/refreshToken`, {\r\n          method: \"POST\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          setDialogTimer(res.refreshTokenExpiry);\r\n          recursiveFetch(body, iteration - 1, index, method, onMethodSuccess);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          invalidateAuth();\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handles the method upon successful path edit.\r\n   * @param {*} res - the response of the http request\r\n   * @param {number} index - the index of the path to update on the client side\r\n   */\r\n  const onEditPathSuccessful = (res, index) => {\r\n    setIsEdit(false);\r\n    setIsProcessing(false);\r\n    \r\n    setDialogTitle(\"Path Edit Successful\");\r\n    setDialogContent(\"Your path has been edited successfully.\");\r\n    setIsDialogOpen(true);\r\n\r\n    setTimeout(() => {\r\n      setEditName(\"\");\r\n      setEditId(-1);\r\n      setEditIndex(-1);\r\n      updatePath({\r\n        coordinates: coordinates,\r\n        isAirPlane: isAirPlane,\r\n        path_name: editName\r\n      }, index);\r\n    }, 500);\r\n  }\r\n\r\n  /**\r\n   * Handles canceling out of the edit mode.\r\n   */\r\n  const handleCancelEdit = () => {\r\n    setIsEdit(false);\r\n    setEditId(-1);\r\n    setEditIndex(-1);\r\n    updateEditPath([], isAirPlane);\r\n  };\r\n\r\n  /**\r\n   * Handles creating a new node.\r\n   */\r\n  const handleNewNode = () => {\r\n    setCoordinates(prevVal => [...prevVal, [\"\", \"\"]]);\r\n  }\r\n\r\n  /**\r\n   * Handles closing the dialog.\r\n   */\r\n   const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  /**\r\n   * Handles changing the mode to edit.\r\n   * @param {*} path - the path to edit\r\n   * @param {number} index - the index of the path\r\n   */\r\n  const handleEditPathMode = (path, index) => {\r\n    if(isProcessing){\r\n      return;\r\n    }\r\n    setIsEdit(true);\r\n    setEditName(path.path_name);\r\n    setEditId(path.path_uid);\r\n    setEditIndex(index);\r\n    setCoordinates(path.coordinates);\r\n    setIsAirPlane(path.isAirPlane);\r\n    updateEditPath(path.coordinates, path.isAirPlane);\r\n  };\r\n\r\n  /**\r\n   * Handles deleting the landmark.\r\n   * @param {*} path - the path to delete\r\n   * @param {number} index - the index of the path\r\n   */\r\n  const handleDeletePath = (path, index) => {\r\n    if(isProcessing){\r\n      return;\r\n    }\r\n\r\n    let isConfirmed = window.confirm(`Are you sure you want to delete this path?\\n\\nname:\\n${path.path_name === null ? \"None\" : path.path_name}\\ncoordinates:\\n${path.coordinates.map((element, index) => {\r\n      return `${index + 1}. (${element[0]}, ${element[1]})\\n`;\r\n    }).join(\"\")}`);\r\n    if(isConfirmed){\r\n      setIsProcessing(true);\r\n      \r\n      const body = {\r\n        path_uid: path.path_uid\r\n      };\r\n\r\n      recursiveFetch(body, 1, index, \"DELETE\", onDeletePathSuccessful);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles the operations for a successful path deletion. \r\n   * @param {*} res - the response of the http request\r\n   * @param {number} index - the index of the path to delete on the client side\r\n   */\r\n  const onDeletePathSuccessful = (res, index) => {\r\n    console.log(res);\r\n    setIsProcessing(false);\r\n    setIsEdit(false);\r\n    setTimeout(() => {\r\n      deletePath(index);\r\n    }, 500);\r\n  }\r\n\r\n  /**\r\n   * Gets the edit path content.\r\n   */\r\n  const getEditPathContent = () => {\r\n    // console.log(paths);\r\n    return (\r\n      <form>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch \r\n              checked={isAirPlane} \r\n              onChange={handleSwitchChange} \r\n              name=\"checkedA\" \r\n              checkedIcon={<AirplanemodeActiveIcon/>}\r\n              icon={<CommuteIcon/>}\r\n            />\r\n          }\r\n          label=\"Travel Type\"/>\r\n        <TextField \r\n          id=\"pathName\" \r\n          label=\"Path Name\" \r\n          placeholder=\"e.g. LAX - HKG or California Trip 1\" \r\n          value={editName}\r\n          onChange={handleNameChange}\r\n          fullWidth\r\n          style={{marginBottom: \"10px\"}}\r\n          inputProps={{maxLength: 255}}/>\r\n        {\r\n          coordinates.map((element, index) => {\r\n            return (\r\n              <CoordinateFormItem\r\n                latitude={element[1]}\r\n                longitude={element[0]}\r\n                onLatitudeChange={onElementLatitudeChange}\r\n                onLongitudeChange={onElementLongitudeChange}\r\n                onDelete={handleDeleteNode}\r\n                index={index}/>\r\n            );\r\n          })\r\n        }\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleNewNode} fullWidth className={classes.addNode}> \r\n          <AddIcon className={classes.iconText}/> Add Node\r\n        </Button>\r\n\r\n        <Grid container justify=\"center\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleEditPath} className={classes.finishEditButton}>\r\n            {isProcessing && <CircularProgress size={24} color='secondary' disableShrink />}\r\n            {!isProcessing && 'Finish Edit'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={handleCancelEdit} className={classes.cancelButton}>\r\n            {isProcessing && <CircularProgress size={24} color='primary' disableShrink />}\r\n            {!isProcessing && 'Cancel Edit'}\r\n          </Button>\r\n        </Grid>\r\n    </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper hidden={value !== index} square className={classes.root} elevation={0}>\r\n      <Typography variant=\"h5\">\r\n        {isEdit ? \"Edit Path\" : \"Path List\"}\r\n      </Typography>\r\n      {\r\n        !isEdit && paths.map((element, index) => {\r\n          return(\r\n            <Paper className={classes.nodeElement} elevation={2} key={element.id}>\r\n              <IconButton>\r\n                {isProcessing ? <CircularProgress style={{color: \"white\"}} size={24} color='secondary' disableShrink /> : <MyLocationIcon />}\r\n              </IconButton>\r\n              <IconButton color=\"primary\" onClick={() => handleEditPathMode(element, index)}>\r\n                {isProcessing ? <CircularProgress size={24} color='primary' disableShrink /> : <EditIcon />}\r\n              </IconButton>\r\n              <IconButton color=\"secondary\" onClick={() => handleDeletePath(element, index)}>\r\n                {isProcessing ? <CircularProgress size={24} color='secondary' disableShrink /> : <DeleteIcon />}\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.pathTypography}>\r\n                {element.isAirPlane ? <AirplanemodeActiveIcon className={classes.iconText}/> : <CommuteIcon className={classes.iconText}/>} \r\n                {element.path_name === null ? \"Unnamed path\" : element.path_name}\r\n              </Typography>\r\n            </Paper>\r\n          );\r\n        })\r\n      }\r\n      {\r\n        isEdit && getEditPathContent()\r\n      }\r\n      <Dialog\r\n        open={isDialogOpen}\r\n        onClose={handleDialogClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        fullWidth>\r\n          <DialogTitle id=\"alert-dialog-title\">{dialogTitle}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {dialogContent}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDialogClose}>\r\n              OK \r\n            </Button>\r\n          </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n}\r\n \r\nexport default EditPathsTab;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport NewLandmarkTab from './NewLandmarkTab';\r\nimport NewPathTab from './NewPathTab';\r\nimport EditLandmarksTab from './EditLandmarksTab';\r\nimport EditPathsTab from './EditPathsTab';\r\n\r\nfunction OtherFeatureTab({value, index, drawerValue, invalidateAuth, updateLandmark, deleteLandmark, landmarks, toInformationTab, paths, deletePath, createLandmark, updateNewLandmark, updateEditLandmark, updateNewPath, createPath, updatePath, updateEditPath, setDialogTimer, setLocateLandmarkCoordinates}) {\r\n  return (\r\n    <div hidden={value !== index}>\r\n      <NewLandmarkTab \r\n        value={drawerValue} \r\n        index={0}  \r\n        invalidateAuth={invalidateAuth}\r\n        createLandmark={createLandmark}\r\n        updateNewLandmark={updateNewLandmark}\r\n        setDialogTimer={setDialogTimer}/>\r\n      <EditLandmarksTab \r\n        value={drawerValue} \r\n        index={1} \r\n        invalidateAuth={invalidateAuth} \r\n        toInformationTab={toInformationTab}\r\n        landmarks={landmarks}\r\n        updateLandmark={updateLandmark} \r\n        updateEditLandmark={updateEditLandmark}\r\n        deleteLandmark={deleteLandmark}\r\n        setDialogTimer={setDialogTimer}\r\n        setLocateLandmarkCoordinates={setLocateLandmarkCoordinates}/>\r\n      <NewPathTab\r\n        value={drawerValue} \r\n        index={2}\r\n        invalidateAuth={invalidateAuth}\r\n        updateNewPath={updateNewPath}\r\n        createPath={createPath}\r\n        setDialogTimer={setDialogTimer}/>\r\n      <EditPathsTab\r\n        value={drawerValue} \r\n        index={3} \r\n        invalidateAuth={invalidateAuth} \r\n        paths={paths}\r\n        deletePath={deletePath}\r\n        updatePath={updatePath}\r\n        updateEditPath={updateEditPath}\r\n        setDialogTimer={setDialogTimer}/>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default OtherFeatureTab;","import './App.css';\r\nimport Globe from './Globe';\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport { Box, Button, Divider, Drawer, Grid, IconButton, List, ListItem, ListItemText, Menu, MenuItem, Paper, Toolbar, Typography, Dialog, DialogContent, DialogTitle, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport LandmarkInfo from './LandmarkInfo';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport OtherFeatureTab from './OtherFeatureTab';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport {  Redirect } from \"react-router-dom\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PaletteIcon from '@material-ui/icons/Palette';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport ListIcon from '@material-ui/icons/List';\r\nconst drawerWidth = 240;\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: {\r\n    padding: 20,\r\n    fontWeight: \"bold\"\r\n  },\r\n  toolbarMenu: {\r\n    paddingTop: 20,\r\n    paddingLeft: 20,\r\n    fontWeight: \"bold\"\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"#11255c\"\r\n  },\r\n  globeGrid: {\r\n    flexGrow: 1,\r\n  },\r\n  rightPanel: {\r\n    // padding: 60, \r\n    height:\"100vh\",\r\n    // borderLeft: 1\r\n  },\r\n}));\r\n\r\nfunction Dashboard() {\r\n  const classes = useStyles();\r\n  const timerRef = useRef(null);\r\n  const autoLogoutRef = useRef(null);\r\n  //States\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  const [isAuth, setIsAuth] = useState(true);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isInactivityDialogOpen, setIsInactivityDialogOpen] = useState(false);\r\n  // const [dialogTitle, setDialogTitle] = useState(\"\");\r\n  // const [dialogContent, setDialogContent] = useState(\"\");\r\n  const [paths, setPaths] = useState([]);\r\n  const [landmarks, setLandmarks] = useState([]);\r\n  const [subSolarCoordinates, setSubSolarCoordinates] = useState([0, 0]);\r\n  const [locateLandmarkCoordinates, setLocateLandmarkCoordinates] = useState(null);\r\n  // const [anchorEl, setAnchorEl] = React.useState(null);\r\n  // const open = Boolean(anchorEl);\r\n  const [isPathsLoaded, setIsPathsLoaded] = useState(false);\r\n  const [isLandmarksLoaded, setIsLandmarksLoaded] = useState(false);\r\n  const [isSubSolarLoaded, setIsSubsolarLoaded] = useState(false);\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n  const [drawerValue, setDrawerValue] = useState(0);\r\n\r\n  const [currentLandmark, setCurrentLandmark] = useState({\r\n    landmark_uid: -1,\r\n    name: \"\",\r\n    description: \"\",\r\n    coordinates: [0, 0],\r\n    isVisible: false\r\n  });\r\n  const [newPath, setNewPath] = useState({\r\n    type: \"LineString\", \r\n    coordinates: [],\r\n    isAirPlane: true\r\n  });\r\n  const [newLandmark, setNewLandmark] = useState({\r\n    coordinates: [0, 0],\r\n    isVisible: false\r\n  });\r\n  const [editLandmark, setEditLandmark] = useState({\r\n    coordinates: [0, 0],\r\n    isVisible: false\r\n  });\r\n  const [editPath, setEditPath] = useState({\r\n    type: \"LineString\",\r\n    coordinates: [],\r\n    isAirPlane: true\r\n  });\r\n\r\n  /**\r\n   * Gets the minimum dimension of the browser window.\r\n   */\r\n  const getMinDimension = () => {\r\n    return Math.min(windowSize.height, windowSize.width);\r\n  };\r\n\r\n  /**\r\n   * Handles the tab change.\r\n   * @param {*} event - the event of the tab change\r\n   * @param {number} newValue - the value used to change the tab\r\n   */\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  /**\r\n   * Handles switching to the information tab.\r\n   * @param {*} landmark  - the current landmark\r\n   */\r\n  const toInformationTab = (landmark) => {\r\n    setTabValue(0);\r\n    setCurrentLandmark({...landmark, isVisible: true});\r\n  };\r\n\r\n  /**\r\n   * Returns the order that the paths should be in.\r\n   * @param {*} a - the first path argument\r\n   * @param {*} b - the second path argument\r\n   */\r\n  const sortPaths = (a, b) => { \r\n    if(a[\"path_name\"] === null && b[\"path_name\"] === null){\r\n      return 0;\r\n    }\r\n    else if(a[\"path_name\"] === null){\r\n      return 1;\r\n    }\r\n    else if(b[\"path_name\"] === null){\r\n      return -1;\r\n    }\r\n    else if(a[\"path_name\"].toLowerCase() > b[\"path_name\"].toLowerCase()){\r\n      return 1;\r\n    }\r\n    else if(a[\"path_name\"].toLowerCase() < b[\"path_name\"].toLowerCase()){\r\n      return -1;\r\n    }\r\n    return 0;  \r\n  }\r\n\r\n  /**\r\n   * Gets the user's paths from the database.\r\n   */\r\n  async function getUserPaths(){\r\n    try{\r\n      var pathsResponse = await fetch(`/paths`)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        res.sort(sortPaths);\r\n        setPaths(res);\r\n        setIsPathsLoaded(true);\r\n      });\r\n    }\r\n    catch(e){\r\n      console.log(e);\r\n      invalidateAuth();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns the order that the landmarks should be in.\r\n   * @param {*} a - the first landmark argument\r\n   * @param {*} b - the second landmark argument\r\n   */\r\n  const sortLandmarks = (a, b) => {  \r\n    if (a[\"name\"].toLowerCase() > b[\"name\"].toLowerCase()) {    \r\n        return 1;    \r\n    } else if (a[\"name\"].toLowerCase() < b[\"name\"].toLowerCase()) {    \r\n        return -1;    \r\n    }    \r\n    return 0;  \r\n  }\r\n\r\n  /**\r\n   * Gets the expiry of a refresh token and sets a timer.\r\n   */\r\n  async function getRefeshTokenExpiry(){\r\n    try{\r\n      var response = await fetch(\"/users/refreshTokenExpiry\").then(res => res.json());\r\n      setDialogTimer(response.refreshTokenExpiry);\r\n    }\r\n    catch(e){\r\n      console.log(e)\r\n      invalidateAuth();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the user's landmarks from the database.\r\n   */\r\n  async function getUserLandmarks(){\r\n    try{\r\n      var landmarksResponse = await fetch('/landmarks')\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        res.sort(sortLandmarks);\r\n        setLandmarks(res);\r\n        setIsLandmarksLoaded(true);\r\n      });\r\n    }\r\n    catch(e){\r\n      try{\r\n        var refreshTokenResponse = await fetch(`/users/refreshToken`, {\r\n          method: \"POST\"\r\n        })\r\n        .then(res => res.json());\r\n\r\n        setDialogTimer(refreshTokenResponse.refreshTokenExpiry);\r\n        try{\r\n          var landmarksResponse2 = await fetch('/landmarks')\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            res.sort(sortLandmarks);\r\n            setLandmarks(res);\r\n            setIsLandmarksLoaded(true);\r\n          });\r\n        }\r\n        catch(e){\r\n          invalidateAuth();\r\n        }\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n        invalidateAuth();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Invalidates the authorization of the user.\r\n   */\r\n  const invalidateAuth = () => {\r\n    fetch(`/users/logout`, {\r\n      method: \"POST\"\r\n    })\r\n    .then(() => {\r\n      setIsAuth(false);\r\n      clearDialogTimer();\r\n    })\r\n    .catch(err => console.log(err))\r\n  };\r\n\r\n  /**\r\n   * Gets the subsolar point from the backend.\r\n   */\r\n  const getSubsolarPoint = () => {\r\n    fetch(`/sun`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      setSubSolarCoordinates([res.longitude, res.latitude]);\r\n      setIsSubsolarLoaded(true);\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Updates the front end landmark.\r\n   * @param {*} landmark - the landmark to be updated\r\n   */\r\n  const updateLandmark = (landmark, index) => {\r\n    let items = [...landmarks];\r\n    \r\n    let itemToUpdate = {...items[index]};\r\n\r\n    itemToUpdate.name = landmark.name;\r\n    itemToUpdate.description = landmark.description;\r\n    itemToUpdate.coordinates = landmark.coordinates;\r\n\r\n    items[index] = itemToUpdate;\r\n\r\n    if(landmark.landmark_uid == currentLandmark.landmark_uid){\r\n      setCurrentLandmark({...landmark, isVisible: true});\r\n    }\r\n    setEditLandmark(prevVal => {\r\n      const prevValCopy = {...prevVal};\r\n      prevValCopy.isVisible = false;\r\n      return prevValCopy;\r\n    });\r\n    setLandmarks(items.sort(sortLandmarks));\r\n  };\r\n\r\n  /**\r\n   * Deletes the frontend landmark.\r\n   * @param {number} landmark_uid - the landmark UID to be deleted.\r\n   */\r\n  const deleteLandmark = (landmark_uid, index) => {\r\n    let items = [...landmarks];\r\n    items.splice(index, 1);\r\n    if(currentLandmark.landmark_uid == landmark_uid){\r\n      setCurrentLandmark(prevVal => {\r\n        const prevValCopy = {...prevVal};\r\n        prevValCopy.isVisible = false;\r\n        return prevValCopy;\r\n      });\r\n    }\r\n    setLandmarks(items);\r\n  };\r\n\r\n  /**\r\n   * Handles deleting the path\r\n   * @param {*} index - the index of the path\r\n   */\r\n  const deletePath = (index) => {\r\n    let pathsCopy = [...paths];\r\n    pathsCopy.splice(index, 1);\r\n    setEditPath(prevVal => {\r\n      const prevValCopy = {...prevVal};\r\n      prevValCopy.coordinates = [];\r\n      return prevValCopy;\r\n    });\r\n    setPaths(pathsCopy);\r\n  };\r\n\r\n  /**\r\n   * Handles clicking the account items.\r\n   * @param {*} index - the index that was selected\r\n   */\r\n  const onAccountMenuClicked = (index) => {\r\n    if(index === 1){\r\n      // console.log(\"user logged out themselves\");\r\n      setIsDialogOpen(true);\r\n      // invalidateAuth();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles changing the tab to the other feature tab.\r\n   * @param {*} value \r\n   */\r\n  const changeDrawerFeatureHandler = (value) => {\r\n    setDrawerValue(value);\r\n    setTabValue(1);\r\n  }\r\n\r\n  /**\r\n   * Handles changing the currentLandmark object.\r\n   * @param {boolean} isVisible - the boolean to check if the currentLandmark is visible\r\n   * @param {*} landmark - the landmark properties\r\n   */\r\n  const currentLandmarkHandler = (isVisible, landmark) => {\r\n    if(isVisible){\r\n      setTabValue(0);\r\n    }\r\n    setCurrentLandmark(prevVal => {\r\n      const prevValCopy = isVisible ? {...landmark} : {...prevVal};\r\n      prevValCopy.isVisible = isVisible;\r\n      return prevValCopy;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a new landmark into the landmarks object.\r\n   * @param {*} landmark - the landmark information\r\n   */\r\n  const createLandmark = (landmark) => {\r\n    setNewLandmark(prevVal => {\r\n      const prevValCopy = {...prevVal}\r\n      prevValCopy.isVisible = false;\r\n      return prevValCopy\r\n    });\r\n    setLandmarks(prevArray => {\r\n      var newArray = [...prevArray, landmark];\r\n      return newArray.sort(sortLandmarks);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates the new landmark object.\r\n   * @param {*} isVisible - the boolean to check if the new landmark is visible\r\n   * @param {*} coordinates - the coordinates of the new landmark\r\n   */\r\n  const updateNewLandmark = (isVisible, coordinates) => {\r\n    if(!isVisible){\r\n      setNewLandmark(prevVal => {\r\n        const prevValCopy = {...prevVal}\r\n        prevValCopy.isVisible = false;\r\n        return prevValCopy;\r\n      });\r\n    }\r\n    else{\r\n      setNewLandmark({coordinates: coordinates, isVisible: true});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the edit landmark object.\r\n   * @param {*} isVisible - the boolean to check if the edit landmark is visible\r\n   * @param {*} coordinates - the coordinates of the edit landmark\r\n   */\r\n  const updateEditLandmark = (isVisible, coordinates) => {\r\n    if(!isVisible){\r\n      setEditLandmark(prevVal => {\r\n        const prevValCopy = {...prevVal};\r\n        prevValCopy.isVisible = false;\r\n        return prevValCopy;\r\n      });\r\n    }\r\n    else{\r\n      setEditLandmark({coordinates: coordinates, isVisible: true});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a new path into the paths object.\r\n   * @param {*} path - the path properties\r\n   */\r\n  const createPath = (path) => {\r\n    setNewPath(prevVal => {\r\n      const prevValCopy = {...prevVal};\r\n      prevValCopy.coordinates = []\r\n      return prevValCopy;\r\n    });\r\n    setPaths(prevArray => {\r\n      var newArray = [...prevArray, path];\r\n      return newArray.sort(sortPaths);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates the new path object.\r\n   * @param {*} path - the path properties\r\n   */\r\n  const updateNewPath = (path) => {\r\n    setNewPath(path);\r\n  }\r\n\r\n  /**\r\n   * Updates a path in the paths object.\r\n   * @param {*} path - the path properties\r\n   * @param {*} index - the index of the path object\r\n   */\r\n  const updatePath = (path, index) => {\r\n    setEditPath(prevValue => {\r\n      var prevValueCopy = {...prevValue};\r\n      prevValueCopy.coordinates = [];\r\n      return prevValueCopy;\r\n    });\r\n    setPaths(prevArray => {\r\n      var prevArrayCopy = [...prevArray];\r\n      var pathCopy = {...prevArrayCopy[index]};\r\n      pathCopy.isAirPlane = path.isAirPlane;\r\n      pathCopy.path_name = path.path_name;\r\n      pathCopy.coordinates = path.coordinates;\r\n      prevArrayCopy[index] = pathCopy;\r\n      prevArrayCopy.sort(sortPaths);\r\n      return prevArrayCopy;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Updates the editPath object.\r\n   * @param {*} coordinates - the coordinates of the editPath\r\n   * @param {*} isAirPlane - the boolean to check if the path is an airplane type\r\n   */\r\n  const updateEditPath = (coordinates, isAirPlane) => {\r\n    setEditPath(prevVal => {\r\n      const prevValCopy = {...prevVal};\r\n      prevValCopy.coordinates = coordinates;\r\n      prevValCopy.isAirPlane = isAirPlane;\r\n      return prevValCopy;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handles closing the dialog.\r\n   */\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  /**\r\n   * Handles closing the inactivity dialog.\r\n   */\r\n  const handleInactivityDialogClose = () => {\r\n    setIsInactivityDialogOpen(false);\r\n    fetch(`/users/refreshToken`, {\r\n      method: \"POST\"\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      setDialogTimer(res.refreshTokenExpiry);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      invalidateAuth();\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Sets the timer for the inactivity dialog.\r\n   * @param {*} time \r\n   */\r\n  const setDialogTimer = (time) => {\r\n    var currentDate = new Date();\r\n    var refreshDate = new Date(time);\r\n    \r\n    if(timerRef.current) {\r\n      clearTimeout(timerRef.current);\r\n      clearTimeout(autoLogoutRef.current);\r\n    }\r\n\r\n    var msToDialog = refreshDate.getTime() - 1000*60*30 - currentDate.getTime();\r\n    var msToAutoLogout = refreshDate.getTime() - currentDate.getTime()\r\n\r\n    timerRef.current = setTimeout(() => {\r\n      setIsInactivityDialogOpen(true);\r\n    }, msToDialog);\r\n\r\n    autoLogoutRef.current = setTimeout(() => {\r\n      invalidateAuth();\r\n    }, msToAutoLogout);\r\n  }\r\n\r\n  /**\r\n   * Clears the timers for the inactivity dialog and the auto logout function.\r\n   */\r\n  const clearDialogTimer = () => {\r\n    if(timerRef.current) {\r\n      clearTimeout(timerRef.current);\r\n      clearTimeout(autoLogoutRef.current);\r\n    }\r\n  }\r\n\r\n // Use effect hook.\r\n  useEffect(() => {\r\n    async function getUserData() {\r\n      await getRefeshTokenExpiry();\r\n      await getUserLandmarks();\r\n      await getUserPaths();\r\n    }\r\n    getUserData();\r\n    getSubsolarPoint();\r\n    const interval = setInterval(() => {\r\n      getSubsolarPoint();\r\n    }, 2 * 60000);\r\n\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    \r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n    \r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize();\r\n    \r\n    // Remove event listener on cleanup\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n      clearInterval(interval);\r\n      clearDialogTimer();\r\n    };\r\n    // return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  /**\r\n   * Gets the dashboard content.\r\n   */\r\n  const getDashboardContent = () => {\r\n    if(isAuth){\r\n      return (\r\n        <Grid container spacing={0} style={{width: `calc(100% - ${drawerWidth}px)`, marginLeft: drawerWidth}}>\r\n          <Grid item align='center' style={{ padding: \"1vh\", height:\"100vh\", flexGrow: 1}}>\r\n            {isLandmarksLoaded && isPathsLoaded && isSubSolarLoaded ? \r\n              <Globe\r\n              paths={paths} \r\n              landmarks={landmarks} \r\n              landmarkHandler={currentLandmarkHandler} \r\n              size={getMinDimension()*0.98} \r\n              newPath={newPath}\r\n              newLandmark={newLandmark}\r\n              currentLandmark={currentLandmark}\r\n              editLandmark={editLandmark}\r\n              subSolarCoordinates={subSolarCoordinates}\r\n              editPath={editPath}\r\n              locateLandmarkCoordinates={locateLandmarkCoordinates}\r\n              setLocateLandmarkCoordinates={setLocateLandmarkCoordinates}/> : \r\n              <Skeleton variant=\"circle\" width={\"98vh\"} height={\"98vh\"}/>\r\n            }\r\n          </Grid>\r\n          <Grid item xs={4} align=\"left\">\r\n            <Paper elevation={0} square className={classes.rightPanel}>\r\n              <AppBar position=\"static\">\r\n                <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"simple tabs example\" variant=\"fullWidth\">\r\n                  <Tab style={{ minWidth: 25 }} icon={<InfoIcon/>}/>\r\n                  <Tab style={{ minWidth: 25 }} icon={<MoreHorizIcon/>}/>\r\n                </Tabs>\r\n              </AppBar>\r\n              <LandmarkInfo currentLandmark={currentLandmark} \r\n                value={tabValue} \r\n                index={0}/>\r\n              <OtherFeatureTab value={tabValue} \r\n                index={1} \r\n                drawerValue={drawerValue}\r\n                invalidateAuth={invalidateAuth}\r\n                toInformationTab={toInformationTab}\r\n                landmarks={landmarks}\r\n                paths={paths}\r\n                deletePath={deletePath}\r\n                createLandmark={createLandmark}\r\n                updateNewLandmark={updateNewLandmark}\r\n                updateLandmark={updateLandmark}  \r\n                deleteLandmark={deleteLandmark} \r\n                updateEditLandmark={updateEditLandmark}\r\n                updateNewPath={updateNewPath}\r\n                createPath={createPath}\r\n                updatePath={updatePath}\r\n                updateEditPath={updateEditPath}\r\n                setDialogTimer={setDialogTimer}\r\n                setLocateLandmarkCoordinates={setLocateLandmarkCoordinates}/>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    }\r\n    else{\r\n      return (<Redirect to={{pathname:'/loggedOut'}}/>);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\" className={classes.root}>\r\n      <Drawer \r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={true} \r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}>\r\n        <Typography className={classes.toolbar}>\r\n          Wanderlust\r\n        </Typography>\r\n        <Divider/>\r\n        <Typography className={classes.toolbarMenu}>\r\n          Landmark\r\n        </Typography>\r\n        <List>\r\n          {['New Landmark', 'Landmark List'].map((text, index) => (\r\n            <ListItem button key={text} onClick={() => changeDrawerFeatureHandler(index)}>\r\n              <ListItemIcon>{index === 1 ? <ListIcon/> : <AddIcon/>}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider/>\r\n        <Typography className={classes.toolbarMenu}>\r\n          Path\r\n        </Typography>\r\n        <List>\r\n          {['New Path', 'Path List'].map((text, index) => (\r\n            <ListItem button key={text} onClick={() => changeDrawerFeatureHandler(index + 2)}>\r\n              <ListItemIcon>{index === 1 ? <ListIcon/> : <AddIcon/>}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider/>\r\n        <Typography className={classes.toolbarMenu}>\r\n          Account\r\n        </Typography>\r\n        <List>\r\n          {['Preferences', 'Log Out'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index === 1 ? <ExitToAppIcon/> : <PaletteIcon/>}</ListItemIcon>\r\n              <ListItemText primary={text} onClick={() => onAccountMenuClicked(index)}/>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      {getDashboardContent()}\r\n      <Dialog\r\n        open={isDialogOpen}\r\n        onClose={handleDialogClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        fullWidth>\r\n          <DialogTitle id=\"alert-dialog-title\">Log Out</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Are you sure you want to log out of Wanderlust?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={invalidateAuth}>\r\n              YES \r\n            </Button>\r\n            <Button onClick={handleDialogClose}>\r\n              NO\r\n            </Button>\r\n          </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={isInactivityDialogOpen}\r\n        onClose={handleInactivityDialogClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        fullWidth>\r\n          <DialogTitle id=\"alert-dialog-title\">Long Period of Inactivity</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Are you still here?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleInactivityDialogClose}>\r\n              YES \r\n            </Button>\r\n            <Button onClick={invalidateAuth}>\r\n              NO\r\n            </Button>\r\n          </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","export default __webpack_public_path__ + \"static/media/landing.5efdef8c.png\";","//Imports from libraries\r\nimport { Button, TextField, Typography, Toolbar, Grid, CircularProgress, Dialog, DialogContent, DialogTitle, DialogContentText, DialogActions } from \"@material-ui/core\";\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport {  Redirect, Link } from \"react-router-dom\";\r\nimport Image from './landing.png'; // Import using relative path\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    color: \"#7096ff\", \r\n    textDecoration: \"none\", \r\n    fontSize: \"17px\", \r\n    fontWeight: \"bold\"\r\n  },\r\n  banner: {\r\n    padding: 60, \r\n    backgroundImage: `url(${Image})`, \r\n    backgroundSize: 'cover', \r\n    height: '100vh'\r\n  }\r\n}));\r\n\r\nfunction SignIn() {\r\n  const classes = useStyles();\r\n  //States\r\n  const [isTokenValid, setIsTokenValid] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n\r\n  /**\r\n   * Handles the change in username.\r\n   * @param {*} event - the event for the username change\r\n   */\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles the change in password.\r\n   * @param {*} event - the event for the password change\r\n   */\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles the signing in.\r\n   */\r\n  const handleSignIn = () => {\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    setIsProcessing(true);\r\n\r\n    const body = {\r\n      \"username\": username,\r\n      \"password\": password\r\n    }\r\n    \r\n    fetch(`/users/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      setIsTokenValid(true);\r\n      setIsProcessing(false);\r\n    })\r\n    .catch((error) => {\r\n      setIsDialogOpen(true);\r\n      setIsProcessing(false);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handles closing the dialog.\r\n   */\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  //Use effect hook.\r\n  useEffect(() => {\r\n    fetch(`/users/checkToken`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      setIsTokenValid(true);\r\n    })\r\n    .catch(error => {\r\n      fetch(`/users/logout`, {\r\n        method: \"POST\"\r\n      })\r\n      .then(console.log(\"tokens expired\"))\r\n      .catch(err => console.log(err))\r\n    });\r\n  }, []);\r\n\r\n  /**\r\n   * Gets the SignIn page content.\r\n   */\r\n  const getSignInContent = () => {\r\n    if(isTokenValid){\r\n      return (<Redirect to={{pathname:'/dashboard'}}/>);\r\n    }\r\n    else{\r\n      return (\r\n        <div>\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={8} className={classes.banner}>\r\n              <Typography component=\"h1\" variant=\"h3\">\r\n                Record Your Travels. Personalize Your Globe.\r\n              </Typography>\r\n              <Typography component=\"h1\" variant=\"h6\">\r\n                Wanderlust allows you to revisit places you have been to and even the journey you took to get there. With a clean design, you can see the globe in real time and take things into perspective.\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={4} style={{ padding: 60 }}>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign In\r\n              </Typography>\r\n              <form>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                  autoFocus\r\n                  value={username}\r\n                  onChange={handleUsernameChange}/>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  value={password}\r\n                  onChange={handlePasswordChange} />\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSignIn}>\r\n                  {isProcessing && <CircularProgress size={24} color='secondary' disableShrink />}\r\n                  {!isProcessing && 'Sign In'}\r\n                </Button>\r\n              </form>\r\n              <br/>\r\n              <Link to=\"/signUp\" className={classes.link}>Don't have an account? Sign up</Link>\r\n            </Grid>\r\n          </Grid>\r\n          <Dialog\r\n            open={isDialogOpen}\r\n            onClose={handleDialogClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\">\r\n              <DialogTitle id=\"alert-dialog-title\">{\"Invalid Credentials\"}</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Verify your username and password and try again.\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleDialogClose}>\r\n                  OK\r\n                </Button>\r\n              </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {getSignInContent()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport { Typography, Toolbar, Grid } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    padding: 60,\r\n    color: \"#7096ff\",\r\n    textDecoration: \"none\",\r\n    fontSize: \"17px\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  timerIcon: {\r\n    width: \"30%\",\r\n    height: \"30%\"\r\n  },\r\n}));\r\n\r\nfunction LoggedOut() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container\r\n        spacing={0}\r\n        align=\"center\"\r\n        justify=\"center\"\r\n        direction=\"column\" style={{ height: \"100vh\", flexGrow: 1 }}>\r\n        <Grid item>\r\n          <ScheduleIcon className={classes.timerIcon} />\r\n          <Typography variant=\"h4\" style={{ padding: 60 }}>\r\n            Session has expired. Please sign back in.\r\n          </Typography>\r\n          <Link to=\"/\" className={classes.link}>Back to Sign In</Link>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoggedOut;","//Imports from libraries\r\nimport { Button, Container, Grid, TextField, Typography, Dialog, DialogContent, DialogTitle, DialogContentText, DialogActions } from \"@material-ui/core\";\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport {  Redirect, Link } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport SignalCellular0BarIcon from '@material-ui/icons/SignalCellular0Bar';\r\nimport SignalCellular1BarIcon from '@material-ui/icons/SignalCellular1Bar';\r\nimport SignalCellular2BarIcon from '@material-ui/icons/SignalCellular2Bar';\r\nimport SignalCellular3BarIcon from '@material-ui/icons/SignalCellular3Bar';\r\nimport SignalCellular4BarIcon from '@material-ui/icons/SignalCellular4Bar';\r\n\r\n/**\r\n * Styles used for the component.\r\n * @param  {*} theme - the theme of the application\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: \"column\",\r\n    alignItems: 'center',\r\n    maxWidth: '700px',\r\n    marginTop: '30%'\r\n  },\r\n  form: {\r\n    width: '100%'\r\n  },\r\n  link: {\r\n    color: \"#7096ff\", \r\n    textDecoration: \"none\", \r\n    fontSize: \"17px\", \r\n    fontWeight: \"bold\"\r\n  },\r\n  checkIcon: {\r\n    color: \"green\"\r\n  },\r\n  clearIcon: {\r\n    color: \"red\"\r\n  },\r\n  hint: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    fontSize: \"15px\"\r\n  },\r\n  veryWeakStrength: {\r\n    color: \"red\"\r\n  },\r\n  weakStrength: {\r\n    color: \"orange\"\r\n  },\r\n  fairStrength: {\r\n    color: \"yellow\"\r\n  },\r\n  goodStrength: {\r\n    color: \"lime\"\r\n  },\r\n  strongStrength: {\r\n    color: \"green\"\r\n  },\r\n  dialog: {\r\n    minWidth: '700px'\r\n  }\r\n}));\r\n\r\nfunction SignUp() {\r\n  const classes = useStyles();\r\n  //States\r\n  // const [isTokenValid, setIsTokenValid] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isUsernameTaken, setIsUsernameTaken] = useState(false);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [dialogTitle, setDialogTitle] = useState(\"\");\r\n  const [dialogContent, setDialogContent] = useState(\"\");\r\n\r\n  /**\r\n   * Checks if a string has a number.\r\n   * @param {String} value - the string used to check if it has a number\r\n   */\r\n  const hasNumber = value => {\r\n    return new RegExp(/[0-9]/).test(value);\r\n  }\r\n\r\n  /**\r\n   * Checks if a string has mixed caps.\r\n   * @param {String} value - the string used to check if it has mixed caps\r\n   */\r\n  const hasMixed = value => {\r\n    return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\r\n  }\r\n\r\n  /**\r\n   * Checks if a string has special characters\r\n   * @param {*} value - the string used to check if it has special characters\r\n   */\r\n  const hasSpecial = value => {\r\n    return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\r\n  }\r\n\r\n  /**\r\n   * Gets the human readable value of a password strength.\r\n   * @param {number} count - the password strength\r\n   */\r\n  const strengthMagnitude = count => {\r\n    if (count < 2)\r\n      return 'Very Weak';\r\n    if (count < 3)\r\n      return 'Weak';\r\n    if (count < 4)\r\n      return 'Fair';\r\n    if (count < 5)\r\n      return 'Good';\r\n    if (count < 6)\r\n      return 'Strong';\r\n  }\r\n\r\n  /**\r\n   * Gets the strength of a password.\r\n   * @param {String} value - the string used to check the strenght of a password\r\n   */\r\n  const strengthIndicator = value => {\r\n    let strengths = 0;\r\n    if (value.length > 5)\r\n      strengths++;\r\n    if (value.length > 7)\r\n      strengths++;\r\n    if (hasNumber(value))\r\n      strengths++;\r\n    if (hasSpecial(value))\r\n      strengths++;\r\n    if (hasMixed(value))\r\n      strengths++;\r\n    return strengthMagnitude(strengths);\r\n  }\r\n\r\n  /**\r\n   * Renders the content for the password strength.\r\n   * @param {number} value - the numerical strength indicator of a password\r\n   */\r\n  const renderPasswordStrength = value => {\r\n    switch(value){\r\n      case 'Very Weak':\r\n        return (<SignalCellular0BarIcon className={classes.veryWeakStrength}/>);\r\n      case 'Weak':\r\n        return (<SignalCellular1BarIcon className={classes.weakStrength}/>);\r\n      case 'Fair':\r\n        return (<SignalCellular2BarIcon className={classes.fairStrength}/>);\r\n      case 'Good':\r\n        return (<SignalCellular3BarIcon className={classes.goodStrength}/>);\r\n      default:\r\n        return (<SignalCellular4BarIcon className={classes.strongStrength}/>);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles the username change.\r\n   * @param {*} event - the event for the username change\r\n   */\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n    getUsernameStatus(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles the password change.\r\n   * @param {*} event - the event for the password change\r\n   */\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles the email change.\r\n   * @param {*} event - the event for the email change\r\n   */\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Gets the availability of the username\r\n   * @param {String} value - the string used to check the availability of a username\r\n   */\r\n  const getUsernameStatus = (value) => {\r\n    fetch(`/users/exists?username=${value}`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      setIsUsernameTaken(res.isexist === \"true\" ? true : false);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Handles the user signing up.\r\n   */\r\n  const handleSignUp = () => {\r\n    if(email === \"\" || password === \"\" || username === \"\"){\r\n      // alert(\"At least one field is empty!\");\r\n      setDialogTitle(\"Sign Up Incomplete\");\r\n      setDialogContent(\"At least one field is empty!\");\r\n      setIsDialogOpen(true);\r\n    }\r\n    else{\r\n      const body = {\r\n        \"email\": email,\r\n        \"password\" : password,\r\n        \"username\" : username\r\n      }\r\n  \r\n      fetch(`/users/create`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n        setEmail(\"\");\r\n        alert(\"A new user has been made!\");\r\n      })\r\n      .catch((error) => {\r\n        setDialogTitle(\"Username Taken\");\r\n        setDialogContent(\"The username already exists! Please create an unowned username.\");\r\n        setIsDialogOpen(true);\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles closing the dialog.\r\n   */\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if(localStorage.getItem('token') !== null){\r\n  //     fetch(`/users/checkToken`, {\r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //         'authorization' : `Bearer ${localStorage.getItem('token')}`\r\n  //       },\r\n  //     })\r\n  //     .then(res => res.json())\r\n  //     .then(res => {\r\n  //       if(res.isTokenValid){\r\n  //         setIsTokenValid(true);\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <div className={classes.root}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign Up\r\n        </Typography>\r\n        <form className={classes.form}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={handleEmailChange}\r\n            className={classes.textField}\r\n            inputProps={{maxLength: 255}}/>\r\n          <br/>\r\n          <br/>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            autoComplete=\"username\"\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n            className={classes.textField}\r\n            inputProps={{maxLength: 100}}/>\r\n          <br/>\r\n          <Typography className={classes.hint}>\r\n            Username Status: {isUsernameTaken ? \"Taken\" : \"Available\"}\r\n            {isUsernameTaken ? <ClearIcon className={classes.clearIcon}/> : <CheckIcon className={classes.checkIcon}/>}\r\n          </Typography>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n            className={classes.textField}/>\r\n          <br/>\r\n          <Typography className={classes.hint}>\r\n            Password Strength: {strengthIndicator(password)}\r\n            {renderPasswordStrength(strengthIndicator(password))}\r\n          </Typography>\r\n          <br/>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSignUp}\r\n            className={classes.textField}>\r\n            Sign Up\r\n          </Button>\r\n        </form>\r\n        <br/>\r\n        <Grid container justify=\"flex-start\">\r\n          <Grid item>\r\n            <Link className={classes.link} to=\"/\">Back to sign in screen</Link>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Dialog\r\n        open={isDialogOpen}\r\n        onClose={handleDialogClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        className={classes.dialog}\r\n        fullWidth>\r\n          <DialogTitle id=\"alert-dialog-title\">{dialogTitle}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {dialogContent}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDialogClose}>\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUp;","import './App.css';\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Dashboard from './Dashboard';\r\nimport SignIn from './SignIn';\r\nimport LoggedOut from './LoggedOut';\r\nimport SignUp from './SignUp';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n  }\r\n});\r\n\r\nfunction App() {\r\n  \r\n  useEffect(() => {\r\n    document.title = 'Wanderlust';\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline/>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path='/' component={SignIn}/>\r\n          <Route exact path='/dashboard' component={Dashboard}/>\r\n          <Route exact path='/loggedOut' component={LoggedOut}/>\r\n          <Route exact path='/signUp' component={SignUp}/>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}