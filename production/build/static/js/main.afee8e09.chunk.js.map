{"version":3,"sources":["Globe.jsx","LandmarkInfo.jsx","NewLandmarkTab.jsx","NewPathTab.jsx","EditLandmarksTab.jsx","EditPathsTab.jsx","OtherFeatureTab.jsx","Dashboard.jsx","landing.png","SignIn.jsx","LoggedOut.jsx","SignUp.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","justifyContent","alignItems","textAlign","position","zoomInButton","display","backgroundColor","color","boxShadow","left","bottom","zoomOutButton","renderText","Globe","size","scale","paths","landmarks","landmarkHandler","tempPath","tempLandmark","currentLandmark","editLandmark","subSolarCoordinates","setScale","editPath","classes","useState","mouseCoordinates","setMouseCoordinates","oldCoordinates","setOldCoordinates","newCoordinates","setNewCoordinates","isMove","setIsMove","isDrag","setIsDrag","isLoading","setIsLoading","setRenderText","isInitialLoad","setIsInitialLoad","svgRef","useRef","circle","d3","projection","fitSize","type","precision","pathGenerator","useIdleTimer","timeout","onIdle","event","console","log","setTimeout","drawGlobe","onActive","onAction","events","debounce","getRemainingTime","getLastActiveTime","resume","rotateParams","scaleParams","isCoarse","svg","current","rotate","isDaylight","selectAll","data","join","attr","feature","on","mouseEvent","item","isVisible","landmark_uid","name","description","coordinates","drawSphere","land","landCoarse","features","landFine","raise","drawLand","lakes","lakesCoarse","lakesFine","drawLakes","nightLongitude","nightLatitude","style","center","radius","drawCurrentShadow","drawLandOutline","drawLakesOutline","graticule","drawGraticule","landmark","drawCurrentLandmark","isDayTime","isAirPlane","drawArcs","drawTempPath","drawTempLandmark","drawEditPath","drawEditLandmark","id","drawLandmarks","lineGenerator","text","Math","ceil","drawScale","useEffect","className","width","height","ref","onMouseDown","screenX","screenY","onMouseMove","currentMouseCoordinates","scalingFactor","movedCoordinates","onMouseUp","onWheel","prev","newVal","deltaY","min","max","IconButton","variant","onClick","prevVal","Typography","LandmarkInfo","value","index","hidden","margin","descriptionArray","split","paragraph","map","element","getLandmarkInfoContent","NewLandmarkTab","setLandmarks","setTempLandmark","invalidateAuth","landmarkName","setLandmarkName","landmarkLatitude","setLandmarkLatitude","landmarkLongitude","setLandmarkLongitude","landmarkDescription","setLandmarkDescription","isProcessing","setIsProcessing","sortLandmarks","a","b","FormControl","fullWidth","InputLabel","htmlFor","Input","placeholder","onChange","target","newTempLandmark","abs","parseFloat","TextField","label","multiline","rows","Button","body","latitude","longitude","fetch","method","headers","localStorage","getItem","JSON","stringify","then","res","json","prevArray","path_uid","sort","catch","err","CircularProgress","disableShrink","NewPathTab","setPaths","setTempPath","nodes","setNodes","isAirplane","setIsAirplane","setName","sortPaths","handleNewPath","isNodesPopulated","i","length","path_name","newPath","handleDeleteNode","idArray","parentElement","parseInt","newNodes","splice","updateTempPath","newElements","newIsAirplane","newTempPath","undefined","node","lat","long","push","onElementLatitudeChange","onElementLongitudeChange","FormControlLabel","control","Switch","checked","checkedIcon","icon","Paper","maxHeight","overflow","latId","longitudeId","deleteBtnId","getFinishButton","EditLandmarksTab","setEditLandmark","updateLandmarks","deleteLandmark","toInformationTab","isEdit","setIsEdit","editId","setEditId","editName","setEditName","editDescription","setEditDescription","editLongitude","setEditLongitude","editLatitude","setEditLatitude","handleLatitudeChange","handleLongitudeChange","handleNameChange","handleDescriptionChange","handleEditLandmark","alert","handleCancelEdit","square","padding","elevation","marginTop","marginBottom","handleEditLandmarkMode","window","confirm","handleDeleteLandmark","EditPathsTab","setEditPath","deletePath","handleSwitchChange","prevValue","prevValueCopy","handleEditPath","is_airplane","prevArrayCopy","pathCopy","path","handleNewNode","prevValCopy","coordinatesCopy","handleDeletePath","currentEditPathCopy","coordinateCopy","OtherFeatureTab","drawerValue","newPathHandler","toolbar","fontWeight","toolbarMenu","paddingTop","paddingLeft","drawerPaper","globeGrid","flexGrow","rightPanel","Dashboard","tabValue","setTabValue","isAuth","setIsAuth","setSubSolarCoordinates","React","anchorEl","Boolean","isPathsLoaded","setIsPathsLoaded","isLandmarksLoaded","setIsLandmarksLoaded","isSubSolarLoaded","setIsSubsolarLoaded","windowSize","setWindowSize","setDrawerValue","setCurrentLandmark","getMinDimension","handleTabChange","newValue","removeItem","getSubsolarPoint","items","itemToUpdate","pathsCopy","isSameLength","isAirPlaneSame","isCoordinatesSame","changeDrawerFeatureHandler","error","interval","setInterval","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","clearInterval","Drawer","anchor","open","paper","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","onAccountMenuClicked","Grid","container","spacing","marginLeft","align","Skeleton","xs","AppBar","Tabs","aria-label","Tab","minWidth","to","pathname","link","textDecoration","fontSize","SignIn","isTokenValid","setIsTokenValid","username","setUsername","password","setPassword","handleUsernameChange","handlePasswordChange","handleSignIn","setItem","token","backgroundImage","Image","backgroundSize","component","required","autoComplete","autoFocus","timerIcon","LoggedOut","justify","direction","flexDirection","maxWidth","form","checkIcon","clearIcon","hint","veryWeakStrength","weakStrength","fairStrength","goodStrength","strongStrength","SignUp","email","setEmail","isUsernameTaken","setIsUsernameTaken","strengthIndicator","count","strengths","RegExp","test","hasNumber","hasSpecial","hasMixed","getUsernameStatus","isexist","Container","textField","renderPasswordStrength","createMuiTheme","palette","App","document","title","ThemeProvider","CssBaseline","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.afee8e09.chunk.js","sourcesContent":["//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport * as d3 from 'd3';\r\nimport * as topojson from \"topojson\";\r\nimport { useIdleTimer } from 'react-idle-timer';\r\n\r\n//Imports from self defined structures\r\n//https://github.com/martynafford/natural-earth-geojson\r\nimport landFine from \"./jsonData/ne_10m_land.json\";\r\nimport landCoarse from \"./jsonData/ne_110m_land.json\";\r\nimport lakesFine from \"./jsonData/ne_10m_lakes.json\";\r\nimport lakesCoarse from \"./jsonData/ne_110m_lakes.json\";\r\n//https://s3-us-west-2.amazonaws.com/s.cdpn.io/215059/cities-200000.json\r\n//https://public.opendatasoft.com/api/records/1.0/search/?dataset=geonames-all-cities-with-a-population-1000&q=&rows=10000&sort=population&pretty_print=true&format=json&fields=population,coordinates,name\r\nimport lightsFine from \"./jsonData/geonames-all-cities-with-a-population-1000.json\";\r\nimport lightsCoarse from \"./jsonData/cities-200000.json\";//TODO: use if performance is fixed\r\nimport { Button, CircularProgress, IconButton, LinearProgress, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      justifyContent:'center',\r\n      alignItems:'center',\r\n      textAlign: \"center\",\r\n      position: 'relative'\r\n    },\r\n    zoomInButton: {\r\n        display: \"block\",\r\n        backgroundColor: \"white\",\r\n        color: \"black\",\r\n        '&:hover': {\r\n            color: \"white\",\r\n            backgroundColor: 'gray',\r\n            boxShadow: 'none',\r\n        },\r\n        position: 'absolute',\r\n        left: \"83%\",\r\n        bottom: \"150px\",\r\n    },\r\n    zoomOutButton: {\r\n        display: \"block\",\r\n        backgroundColor: \"white\",\r\n        color: \"black\",\r\n        '&:hover': {\r\n            color: \"white\",\r\n            backgroundColor: 'gray',\r\n            boxShadow: 'none',\r\n        },\r\n        position: 'absolute',\r\n        left: \"83%\",\r\n        bottom: \"90px\",\r\n    },\r\n    renderText: {\r\n        position: 'absolute',\r\n        left: \"15%\",\r\n        bottom: '30px',\r\n    }\r\n  }));\r\n\r\nfunction Globe({size, scale, paths, landmarks, landmarkHandler, tempPath, tempLandmark, currentLandmark, editLandmark, subSolarCoordinates, setScale, editPath}) {\r\n    \r\n    const classes = useStyles();\r\n    \r\n    //States\r\n    const [mouseCoordinates, setMouseCoordinates] = useState(null);         //state for initially pressing down the mouse button's position\r\n    const [oldCoordinates, setOldCoordinates] = useState([180, -25]);   //state for the position of the globe during inactivity (units in -longitude, -latitude)\r\n    const [newCoordinates, setNewCoordinates] = useState(null);             //state for updating the old coordinates\r\n    const [isMove, setIsMove] = useState(false);\r\n    const [isDrag, setIsDrag] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [renderText, setRenderText] = useState(\"\");\r\n    const [isInitialLoad, setIsInitialLoad] = useState(true);\r\n\r\n    //Constants\r\n    const svgRef = useRef();\r\n    const circle = d3.geoCircle();\r\n    const projection = d3.geoOrthographic()\r\n        .fitSize([size, size], {type: \"Sphere\"})\r\n        .precision(0.1);\r\n    const pathGenerator = d3.geoPath().projection(projection);\r\n\r\n    /**\r\n    * Handles the mouse down event in the Globe.\r\n    * @param {*} event - the mouse event\r\n    */\r\n    const onMouseDownHandler = (event) => {\r\n        setMouseCoordinates([event.screenX, event.screenY]);\r\n    };\r\n\r\n    /**\r\n     * Gets the Radius of the city.\r\n     * @param {int} population - the population of the city\r\n     */\r\n    const getCityRadius = (population) => {\r\n        if (population < 5000)\r\n            return 0.02\r\n        else if (population < 10000)\r\n            return 0.05\r\n        else if (population < 50000)\r\n            return 0.07\r\n        else if (population < 100000)\r\n            return 0.1\r\n        else\r\n            return 0.2\r\n    };\r\n\r\n    /**\r\n     * Handles when the user has become idle.\r\n     * @param {*} event - the event during idle.\r\n     */\r\n    const handleOnIdle = event => {\r\n        //TODO: fix fine rendering issue\r\n        // if(event !== null && event.type !== \"mousedown\"){\r\n            // console.log(\"event for idle\", event);\r\n            // console.log(\"redrawing globe\");\r\n            // console.log(\"isMove=\", isMove);\r\n            console.log(\"ismove\", isMove);\r\n            console.log(\"!isDrag\", !isDrag);\r\n        if(isMove && !isDrag){\r\n            // console.log(\"redrawing globe\");\r\n            // drawGlobe(oldCoordinates, scale, false);\r\n            setIsMove(false);\r\n            \r\n            setIsLoading(true);\r\n            setRenderText(\"Rendering full resolution...\");\r\n            setTimeout(() => {\r\n                drawGlobe(oldCoordinates, scale, false);\r\n                setIsLoading(false);\r\n            }, 400);\r\n        }\r\n        // }\r\n        // console.log(event);\r\n    }\r\n    \r\n    /**\r\n     * Handles when the user has become active.\r\n     * @param {*} event - the event during active\r\n     */\r\n    const handleOnActive = event => {\r\n        //TODO: fix fine rendering issue\r\n        setIsDrag(false);\r\n        console.log(\"mouse up done\");\r\n        // console.log(event.path[1].tagName === \"svg\");\r\n        // if(event.path[1].tagName === \"svg\"){\r\n        //     if(newCoordinates){\r\n        //         setMouseCoordinates(null);\r\n        //         setOldCoordinates(newCoordinates);\r\n        //         setNewCoordinates(null);\r\n        //     }\r\n        //     setMouseCoordinates(null);\r\n        // }\r\n    }\r\n    \r\n    /**\r\n     * Handles when the user has done an action.\r\n     * @param {*} event - the event during an action\r\n     */\r\n    const handleOnAction = (event) => {}\r\n     \r\n    //Idle timer and parameters\r\n    const { getRemainingTime, getLastActiveTime, resume } = useIdleTimer({\r\n        timeout: 1000 * 1.5,\r\n        onIdle: handleOnIdle,\r\n        onActive: handleOnActive,\r\n        onAction: handleOnAction,\r\n        events: ['mouseup', 'mousewheel'],\r\n        debounce: 500\r\n    })\r\n\r\n    /**\r\n     * Handler for when the mouse has been moved.\r\n     * @param {*} event - the event of when the mouse has been moved\r\n     */\r\n    const onMouseMoveHandler = (event) => {\r\n        //TODO: fix fine rendering issue\r\n        if(mouseCoordinates){\r\n            // console.log(\"mouse move\", e);\r\n            // console.log(\"drawing the globe coarse\");\r\n            var currentMouseCoordinates = [event.screenX, event.screenY];\r\n            var scalingFactor = 3.0 * scale/200.0;\r\n            var movedCoordinates = [oldCoordinates[0] + (currentMouseCoordinates[0] - mouseCoordinates[0])/scalingFactor, oldCoordinates[1] - (currentMouseCoordinates[1] - mouseCoordinates[1])/scalingFactor];\r\n            movedCoordinates[1] = movedCoordinates[1] < -90 ? -90 :\r\n                movedCoordinates[1] > 90 ?  90 : movedCoordinates[1];\r\n            // projection.rotate(movedCoordinates);\r\n            setNewCoordinates(movedCoordinates);\r\n            setIsMove(true);\r\n            setIsDrag(true);\r\n            drawGlobe(movedCoordinates, scale, true);\r\n            console.log(\"mouse moved while dragged\");\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handler when the mouse click is now up.\r\n     * @param {*} event - the event of when the mouse click is now up\r\n     */\r\n    const onMouseUpHandler = (event) => {\r\n        //TODO: fix fine rendering issue\r\n        // console.log(\"mouseuphandler activated\");\r\n        if(newCoordinates){\r\n            // setMouseCoordinates(null);\r\n            setOldCoordinates(newCoordinates);\r\n            setNewCoordinates(null);\r\n        }\r\n        setIsDrag(false);\r\n        setMouseCoordinates(null);\r\n        console.log(\"mouse up done\");\r\n    };\r\n\r\n    /**\r\n     * Draws a sphere.\r\n     * @param {*} svg - the svg used to draw the sphere.\r\n     * @param {boolean} isDaylight - the parameter for night time styles\r\n     */\r\n    const drawSphere = (svg, isDaylight) => {\r\n        svg\r\n            .selectAll(\".sphere\")\r\n            .data([{type: \"Sphere\"}])\r\n            .join(\"path\")\r\n            .attr(\"class\", \"sphere\")\r\n            .attr(\"fill\", isDaylight ? \"#dde\" : \"#1c458c\")\r\n            .attr(\"d\", feature => pathGenerator(feature))\r\n            .on(\"click\", (mouseEvent, item) => {\r\n                if(currentLandmark[0].isVisible){\r\n                    landmarkHandler([{\r\n                        landmark_uid: -1,\r\n                        name: \"\",\r\n                        description: \"\",\r\n                        coordinates: [0, 0],\r\n                        isVisible: false\r\n                    }]);\r\n                }\r\n            } );\r\n    };\r\n\r\n    /**\r\n     * Draws the grid.\r\n     * @param {*} svg - the svg used to draw the graticule.\r\n     * @param {boolean} isDaylight - the parameter for night time styles.\r\n     */\r\n    const drawGraticule = (svg, isDaylight) => {\r\n        const graticule = d3.geoGraticule10()\r\n        svg\r\n            .selectAll(\".mesh\")\r\n            .data([graticule])\r\n            .join(\"path\")\r\n            .attr(\"class\", \"mesh\")\r\n            .attr(\"fill-opacity\",\"0\")\r\n            .attr(\"stroke\", isDaylight ? \"#ccf\" : \"gray\")\r\n            .attr(\"stroke-opacity\", \"0.5\")\r\n            .attr(\"stroke-width\", isDaylight ? 1 : 0.3)\r\n            .attr(\"d\", feature => pathGenerator(feature))\r\n            .on(\"click\", (mouseEvent, item) => {\r\n                if(currentLandmark[0].isVisible){\r\n                    landmarkHandler([{\r\n                        landmark_uid: -1,\r\n                        name: \"\",\r\n                        description: \"\",\r\n                        coordinates: [0, 0],\r\n                        isVisible: false\r\n                    }]);\r\n                }\r\n            } )\r\n            .raise();\r\n    };\r\n\r\n    /**\r\n     * Draws the land.\r\n     * @param {*} svg - the svg used to draw the land\r\n     * @param {boolean} isCoarse - the parameter for fine detail or coarse detail\r\n     * @param {boolean} isDaylight - the parameter for night time styles\r\n     */\r\n    const drawLand = (svg, isCoarse, isDaylight) => {\r\n        //Using local json data that is of type Topology\r\n        const land = isCoarse ? landCoarse.features : landFine.features;\r\n        svg\r\n        .selectAll(\".country\")\r\n        .data(land)\r\n        .join(\"path\")\r\n        .attr(\"class\", \"country\")\r\n        .attr(\"fill\", isDaylight ? \"#edd\" : \"#f5c684\")\r\n        .attr(\"stroke\", isDaylight ? \"#faa\" : \"#b89463\")\r\n        .attr(\"stroke-width\", 0.5)\r\n        .attr(\"d\", feature => pathGenerator(feature))\r\n        .on(\"click\", (mouseEvent, item) => {\r\n            if(currentLandmark[0].isVisible){\r\n                landmarkHandler([{\r\n                    landmark_uid: -1,\r\n                    name: \"\",\r\n                    description: \"\",\r\n                    coordinates: [0, 0],\r\n                    isVisible: false\r\n                }]);\r\n            }\r\n        } )\r\n        .raise();\r\n\r\n        //Using external json data that is of type Topology\r\n        // d3.json(\"https://cdn.jsdelivr.net/npm/world-atlas@2.0.2/land-10m.json\").then(res => {\r\n        //     const countries1 = topojson.feature(isCoarse ? landCoarse : res, isCoarse ? landCoarse.objects.land : res.objects.land).features;\r\n        //     console.log(countries1);\r\n        //     svg\r\n        //     .selectAll(\".country\")\r\n        //     .data(countries1)\r\n        //     .join(\"path\")\r\n        //     .attr(\"id\", feature => console.log(feature))\r\n        //     .attr(\"class\", \"country\")\r\n        //     .attr(\"fill\", feature => \"#edd\")//daytime\r\n        //     // .attr(\"fill\", feature => \"#114\")//nighttime\r\n        //     .attr(\"stroke\", feature => \"#faa\")//daytime\r\n        //     // .attr(\"stroke\", feature => \"#004\")//nighttime\r\n        //     .attr(\"d\", feature => pathGenerator(feature));\r\n        // });\r\n\r\n        //Using local json data that is of type FeatureCollection\r\n        // svg\r\n        //     .selectAll(\".country\")\r\n        //     .data(dataCoarse.features)\r\n        //     .join(\"path\")\r\n        //     .attr(\"class\", \"country\")\r\n        //     // .attr(\"fill\", feature => \"#edd\")//daytime\r\n        //     .attr(\"fill\", feature => \"#114\")//nighttime\r\n        //     // .attr(\"stroke\", feature => \"#faa\")//daytime\r\n        //     .attr(\"stroke\", feature => \"#004\")//nighttime\r\n        //     .attr(\"d\", feature => pathGenerator(feature));\r\n    };\r\n\r\n    const drawLandOutline = (svg, isCoarse, isDaylight) => {\r\n        //Using local json data that is of type Topology\r\n        const land = isCoarse ? landCoarse.features : landFine.features;\r\n        svg\r\n        .selectAll(\".countryOutline\")\r\n        .data(land)\r\n        .join(\"path\")\r\n        .attr(\"class\", \"countryOutline\")\r\n        .attr(\"fill-opacity\", \"0\")\r\n        .attr(\"stroke\", \"#b89463\")\r\n        .attr(\"stroke-width\", 0.3)\r\n        // .attr(\"stroke-opacity\", \"0.8\")\r\n        .attr(\"d\", feature => pathGenerator(feature))\r\n        .on(\"click\", (mouseEvent, item) => {\r\n            if(currentLandmark[0].isVisible){\r\n                landmarkHandler([{\r\n                    landmark_uid: -1,\r\n                    name: \"\",\r\n                    description: \"\",\r\n                    coordinates: [0, 0],\r\n                    isVisible: false\r\n                }]);\r\n            }\r\n        } )\r\n        .raise();\r\n    };\r\n\r\n    /**\r\n     * Draws the lakes.\r\n     * @param {*} svg - the svg used to draw the land\r\n     * @param {boolean} isCoarse - the parameter for fine detail or coarse detail\r\n     * @param {boolean} isDaylight - the parameter for night time styles\r\n     */\r\n    const drawLakes = (svg, isCoarse, isDaylight) => {\r\n        const lakes = isCoarse ? lakesCoarse.features :lakesFine.features;\r\n        svg\r\n        .selectAll(\".lakes\")\r\n        .data(lakes)\r\n        .join(\"path\")\r\n        .attr(\"class\", \"lakes\")\r\n        .attr(\"fill\", isDaylight ? \"#edd\" : \"#1c458c\")\r\n        .attr(\"stroke\", isDaylight ? \"#faa\" : \"#b89463\")\r\n        .attr(\"stroke-width\", 0.5)\r\n        .attr(\"d\", feature => pathGenerator(feature))\r\n        .raise()\r\n        .on(\"click\", (mouseEvent, item) => {\r\n            if(currentLandmark[0].isVisible){\r\n                landmarkHandler([{\r\n                    landmark_uid: -1,\r\n                    name: \"\",\r\n                    description: \"\",\r\n                    coordinates: [0, 0],\r\n                    isVisible: false\r\n                }]);\r\n            }\r\n        });\r\n    };\r\n\r\n    const drawLakesOutline = (svg, isCoarse, isDaylight) => {\r\n        const lakes = isCoarse ? lakesCoarse.features :lakesFine.features;\r\n        svg\r\n        .selectAll(\".lakesOutline\")\r\n        .data(lakes)\r\n        .join(\"path\")\r\n        .attr(\"class\", \"lakesOutline\")\r\n        .attr(\"fill-opacity\", \"0\")\r\n        .attr(\"stroke\", isDaylight ? \"#faa\" : \"#b89463\")\r\n        .attr(\"stroke-width\", 0.3)\r\n        .attr(\"d\", feature => pathGenerator(feature))\r\n        .raise()\r\n        .on(\"click\", (mouseEvent, item) => {\r\n            if(currentLandmark[0].isVisible){\r\n                landmarkHandler([{\r\n                    landmark_uid: -1,\r\n                    name: \"\",\r\n                    description: \"\",\r\n                    coordinates: [0, 0],\r\n                    isVisible: false\r\n                }]);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Draws city lights based on population sizes in cities.\r\n     * @param {*} svg - the svg used to draw city lights\r\n     * @param {boolean} isCoarse - the parameter for fine detail or coarse detail\r\n     */\r\n    const drawLights = (svg, isCoarse) => {\r\n        if(isCoarse){\r\n            svg\r\n            .selectAll(\".lights\")\r\n            .data(lightsCoarse)\r\n            .join(\"path\")\r\n            .attr(\"class\", \"lights\")\r\n            .style(\"fill\", \"#ff8\")\r\n            .attr(\"fill-opacity\",\"0.4\")\r\n            .attr(\"d\", cityElement => pathGenerator(circle.center([parseFloat(cityElement[3]), parseFloat(cityElement[2])]).radius(getCityRadius(cityElement[0]))())).raise();\r\n        }else{\r\n            svg\r\n            .selectAll(\".lights\")\r\n            .data(lightsFine)\r\n            .join(\"path\")\r\n            .attr(\"class\", \"lights\")\r\n            .style(\"fill\", \"#ff8\")\r\n            .attr(\"fill-opacity\",\"0.4\")\r\n            .attr(\"d\", cityElement => pathGenerator(circle.center(cityElement.geometry.coordinates).radius(getCityRadius(cityElement.fields.population))())).raise();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Draws the landmarks.\r\n     * @param {*} svg - the svg used to draw the landmarks\r\n     * @param {boolean} isDaylight - the parameter used for night time styles\r\n     */\r\n    const drawLandmarks = (svg, isDaylight) => {\r\n        // Format of one element of data\r\n        //   {\r\n        //     id: \"landmark_1\",\r\n        //     landmark_uid: 1,\r\n        //     name: \"Manila / Marikina\",\r\n        //     description: \"First Hometown. Revisited 2011, 2013, 2017, 2018, and 2019.\",\r\n        //     coordinates: [120.9842, 14.5995]\r\n        //   }\r\n        svg\r\n            .selectAll(\".landmarks\")\r\n            .data(landmarks)\r\n            .join(\"path\")\r\n            .attr(\"class\", \"landmarks\")\r\n            .attr(\"id\", landmark => `${landmark.id}`)\r\n            .style(\"fill\", \"black\")\r\n            .style(\"stroke\", \"white\")\r\n            .attr(\"stroke-width\", 0.2)\r\n            .attr(\"fill-opacity\",\"0.3\")\r\n            .on(\"mouseover\", (mouseEvent, item) => {\r\n                d3.select(`#${item.id}`).style(\"fill\", \"red\")\r\n                .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.3)()));\r\n            } )\r\n            .on(\"mouseout\", (mouseEvent, item) => {\r\n                d3.select(`#${item.id}`)\r\n                .style(\"fill\", isDaylight ? \"black\" : \"black\")\r\n                .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.1)()));\r\n            } )\r\n            .on(\"click\", (mouseEvent, item) => {\r\n                landmarkHandler([{\r\n                    landmark_uid: item.landmark_uid,\r\n                    name: item.name,\r\n                    description: item.description,\r\n                    coordinates: item.coordinates,\r\n                    isVisible: true\r\n                }]);\r\n            })\r\n            .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.1)())).raise();\r\n    };\r\n\r\n    /**\r\n     * Draws the current selected landmark.\r\n     * @param {*} svg - the svg used to draw the current selected landmark\r\n     * @param {boolean} isDaylight - the parameter used for night time styles\r\n     */\r\n    const drawCurrentLandmark = (svg, isDaylight) => {\r\n        svg\r\n            .selectAll(\".currentLandmark\")\r\n            .data(currentLandmark)\r\n            .join(\"path\")\r\n            .attr(\"class\", \"currentLandmark\")\r\n            .attr(\"id\", landmark => `current_${landmark.landmark_uid}`)\r\n            .style(\"fill\", \"red\")\r\n            .attr(\"fill-opacity\",\"0.3\")\r\n            .attr(\"visibility\", landmark => landmark.isVisible ? \"visible\" : \"hidden\")\r\n            .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.2)())).raise();\r\n    }\r\n\r\n    /**\r\n     * Draws the current world night time.\r\n     * @param {*} svg - the svg used to draw the world night time\r\n     * @param {boolean} isDaylight - the parameter used for night time styles\r\n     */\r\n    const drawCurrentShadow = (svg, isDaylight) => {\r\n        var nightLongitude = subSolarCoordinates[0] + 180;\r\n        var nightLatitude = -subSolarCoordinates[1];\r\n        var opacity = \"0.3\";\r\n        svg\r\n            .selectAll(\".shadow\")\r\n            .data([90, 90-6, 90-12, 90-18])\r\n            .join(\"path\")\r\n            .attr(\"class\", \"shadow\")\r\n            .attr(\"id\", `shadow`)\r\n            .style(\"fill\", \"black\")\r\n            .attr(\"fill-opacity\",opacity)\r\n            .attr(\"d\", data => pathGenerator(circle.center([nightLongitude, nightLatitude]).radius(data)())).raise()\r\n            .on(\"click\", (mouseEvent, item) => {\r\n                if(currentLandmark[0].isVisible){\r\n                    landmarkHandler([{\r\n                        landmark_uid: -1,\r\n                        name: \"\",\r\n                        description: \"\",\r\n                        coordinates: [0, 0],\r\n                        isVisible: false\r\n                    }]);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Draws the current new landmark.\r\n     * @param {*} svg - the svg used to draw the current new landmark\r\n     * @param {boolean} isDaylight - the parameter used for night time styles\r\n     */\r\n    const drawTempLandmark = (svg, isDaylight) => {\r\n        //format of one element of data\r\n        // {\r\n        //     coordinates: [0, 0],\r\n        //     isVisible: false\r\n        //   }\r\n        svg\r\n            .selectAll(\".tempLandmark\")\r\n            .data(tempLandmark)\r\n            .join(\"path\")\r\n            .attr(\"class\", \"tempLandmark\")\r\n            .attr(\"id\", `tempLandmark`)\r\n            .style(\"fill\", \"red\")\r\n            .attr(\"fill-opacity\",\"0.5\")\r\n            .attr(\"visibility\", landmark => landmark.isVisible ? \"visible\" : \"hidden\")\r\n            .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.1)())).raise();\r\n    };\r\n\r\n    /**\r\n     * Draws the current modified landmark.\r\n     * @param {} svg - the svg used to draw the current modified landmark\r\n     * @param {boolean} isDaylight - the parameter used for night time styles\r\n     */\r\n    const drawEditLandmark = (svg, isDaylight) => {\r\n        //format of one element of data\r\n        // {\r\n        //     coordinates: [0, 0],\r\n        //     isVisible: false\r\n        //   }\r\n        svg\r\n            .selectAll(\".editLandmark\")\r\n            .data(editLandmark)\r\n            .join(\"path\")\r\n            .attr(\"class\", \"editLandmark\")\r\n            .attr(\"id\", landmark => `edit`)\r\n            .style(\"fill\", \"orange\")\r\n            .attr(\"fill-opacity\",\"0.5\")\r\n            .attr(\"stroke-width\", 1)\r\n            .attr(\"stroke\",\"black\")\r\n            .attr(\"visibility\", landmark => landmark.isVisible ? \"visible\" : \"hidden\")\r\n            .attr(\"d\", landmark => pathGenerator(circle.center([landmark.coordinates[0], landmark.coordinates[1]]).radius(0.1)())).raise();\r\n    };\r\n\r\n    /**\r\n     * Draws the arcs.\r\n     * @param {*} svg - the svg used to draw the arcs\r\n     * @param {boolean} isDayTime - the parameter used for night time styles\r\n     */\r\n    const drawArcs = (svg, isDayTime) => {\r\n        //The format of one element of data is \r\n        //{ type: \"LineString\", coordinates: [[-122.810850, 49.191663], [-156.0407, 19.7367]], id:\"path_9\", path_uid: 9, isAirPlane: true}\r\n        svg\r\n        .selectAll(\".arcOutline\")\r\n        .data(paths)\r\n        .join(\"path\")\r\n        .attr(\"class\", \"arcOutline\")\r\n        // .transition()\r\n        .attr(\"fill-opacity\", \"0\")\r\n        .attr(\"stroke-opacity\", feature => feature.isAirPlane ? 0.5 : 1)\r\n        .attr(\"stroke\", feature => isDayTime ? \"black\" : \"white\")\r\n        .attr(\"stroke-width\", feature => feature.isAirPlane ? 0.8 : 0.2)\r\n        .attr(\"d\", feature =>pathGenerator(feature)).raise()\r\n        .on(\"click\", (mouseEvent, item) => {\r\n            if(currentLandmark[0].isVisible){\r\n                landmarkHandler([{\r\n                    landmark_uid: -1,\r\n                    name: \"\",\r\n                    description: \"\",\r\n                    coordinates: [0, 0],\r\n                    isVisible: false\r\n                }]);\r\n            }\r\n        } )\r\n        .raise();\r\n        svg\r\n            .selectAll(\".arc\")\r\n            .data(paths)\r\n            .join(\"path\")\r\n            .attr(\"class\", \"arc\")\r\n            // .transition()\r\n            .attr(\"fill-opacity\", \"0\")\r\n            .attr(\"stroke-opacity\", feature => feature.isAirPlane ? 0.5 : 1)\r\n            .attr(\"stroke\", feature => isDayTime ? \"black\" : \"black\")\r\n            .attr(\"stroke-width\", feature => feature.isAirPlane ? 1 : 0.5)\r\n            .style(\"stroke-dasharray\", feature => feature.isAirPlane ? (\"15, 3\") : (\"3\", \"3\"))\r\n            .attr(\"d\", feature =>pathGenerator(feature)).raise()\r\n            .on(\"click\", (mouseEvent, item) => {\r\n                if(currentLandmark[0].isVisible){\r\n                    landmarkHandler([{\r\n                        landmark_uid: -1,\r\n                        name: \"\",\r\n                        description: \"\",\r\n                        coordinates: [0, 0],\r\n                        isVisible: false\r\n                    }]);\r\n                }\r\n            } )\r\n            .raise();\r\n    };\r\n\r\n    /**\r\n     * Draws the current new path.\r\n     * @param {*} svg - the svg used to draw the current new path\r\n     * @param {boolean} isDayTime - the parameter used for night time styles\r\n     */\r\n    const drawTempPath = (svg, isDayTime) => {\r\n        //format of one element of data\r\n        // {\r\n        //     type: \"LineString\", \r\n        //     coordinates: [],\r\n        //     isAirPlane: true\r\n        //   }\r\n        // console.log(tempPath);\r\n        svg\r\n            .selectAll(\".tempPath\")\r\n            .data(tempPath)\r\n            .join(\"path\")\r\n            .attr(\"class\", \"tempPath\")\r\n            // .transition()\r\n            .attr(\"fill-opacity\",\"0\")\r\n            .attr(\"stroke\", feature => feature.isAirPlane ? \"red\" : \"red\")\r\n            .style(\"stroke-dasharray\", feature => feature.isAirPlane ? (\"15, 3\") : (\"3\", \"3\"))\r\n            .attr(\"stroke-opacity\", feature => 1)\r\n            .attr(\"stroke-width\", feature => 1)\r\n            .attr(\"d\", feature =>pathGenerator(feature))\r\n            .raise();\r\n    };\r\n\r\n    const drawEditPath = (svg, isDayTime) => {\r\n        //format of one element of data\r\n        // {\r\n        //     type: \"LineString\",\r\n        //     coordinates: [],\r\n        //     id: \"\",\r\n        //     path_uid: -1,\r\n        //     isAirPlane: true\r\n        // }\r\n        svg\r\n            .selectAll(\".editPath\")\r\n            .data([editPath])\r\n            .join(\"path\")\r\n            .attr(\"class\", \"editPath\")\r\n            .attr(\"fill-opacity\",\"0\")\r\n            .attr(\"stroke\", feature => feature.isAirPlane ? \"orange\" : \"orange\")\r\n            .style(\"stroke-dasharray\", feature => feature.isAirPlane ? (\"15, 3\") : (\"3\", \"3\"))\r\n            .attr(\"stroke-opacity\", feature => 1)\r\n            .attr(\"stroke-width\", feature => 1)\r\n            .attr(\"d\", feature =>pathGenerator(feature))\r\n            .raise();\r\n    };\r\n\r\n    const mouseWheelHandler = (event) => {\r\n        setScale(prev => {\r\n            let newVal = prev - event.deltaY/110;\r\n            return Math.min(Math.max(newVal, 1), 25.484);\r\n        });\r\n    };\r\n\r\n    const drawScale = (svg) => {\r\n\r\n        var lineGenerator = d3.line();\r\n        svg\r\n            .selectAll(\".scale\")\r\n            .data([1])\r\n            .join(\"path\")\r\n            .attr(\"class\", \"scale\")\r\n            // .append('path')\r\n            .style(\"stroke\", \"white\")\r\n            .style(\"stroke-width\", 1)\r\n            .style(\"fill-opacity\", 0)\r\n            .style(\"stroke-opacity\", 1)\r\n            .attr(\"d\", lineGenerator([[size * 0.73, size * 0.98], [size * 0.73, size * 0.98 + 10], [size * 0.73 + size/4.0, size * 0.98 + 10], [size * 0.73 + size/4.0, size * 0.98]])).raise();\r\n        \r\n        svg\r\n            .selectAll(\".textScale\")\r\n            .data([1])\r\n            .join(\"text\")\r\n            .attr(\"class\", \"textScale\")\r\n            .attr(\"dx\", size * 0.73 + size/8.0)\r\n            .attr(\"dy\", size * 0.98)\r\n            .style(\"text-anchor\", \"middle\")\r\n            .style(\"fill\", \"white\")\r\n            .text(`${Math.ceil(12742/4.0/(scale/size*2) * 100)/100} km`).raise();\r\n    }\r\n\r\n    /**\r\n     * Draws the globe.\r\n     * @param {Array<number>} rotateParams - the rotation parameters to position the globe\r\n     * @param {number} scaleParams - the scale parameter to scale the globe\r\n     * @param {boolean} isCoarse - the parameter for fine detail or coarse detail\r\n     */\r\n    const drawGlobe = (rotateParams, scaleParams, isCoarse) => {\r\n        const svg = d3.select(svgRef.current);\r\n        projection.rotate(rotateParams).scale(scaleParams);\r\n\r\n        var isDaylight = false;\r\n        \r\n        drawSphere(svg, isDaylight);\r\n        drawLand(svg, isCoarse, isDaylight);\r\n        drawLakes(svg, isCoarse, isDaylight);\r\n        drawCurrentShadow(svg, isDaylight);\r\n\r\n        drawLandOutline(svg, isCoarse, isDaylight);\r\n        drawLakesOutline(svg, isCoarse, isDaylight);\r\n\r\n        if(!isDaylight){\r\n            // drawLights(svg, false);\r\n        }\r\n        \r\n        drawGraticule(svg, isDaylight);    \r\n\r\n        drawCurrentLandmark(svg, isDaylight);\r\n        drawArcs(svg, isDaylight);\r\n        drawTempPath(svg, isDaylight);\r\n        drawTempLandmark(svg, isDaylight);\r\n        drawEditPath(svg, isDaylight);\r\n        drawEditLandmark(svg, isDaylight);\r\n        drawLandmarks(svg, isDaylight);\r\n\r\n        drawScale(svg);\r\n    };\r\n\r\n    const zoomInHandler = () => {\r\n        setScale(prevVal => Math.min(prevVal + 1, 25.484));\r\n    }\r\n\r\n    const zoomOutHandler = () => {\r\n        setScale(prevVal => Math.max(prevVal - 1, 1));\r\n    }\r\n\r\n    //Use effect hook.\r\n    useEffect(() => {\r\n            drawGlobe(oldCoordinates, scale, true);\r\n            setIsMove(true);\r\n    }, [scale])\r\n\r\n    useEffect(() => {\r\n        if(!isInitialLoad){\r\n            console.log(\"subsolar\");\r\n            setIsLoading(true);\r\n            setRenderText(\"Updating earth shadow...\");\r\n            setTimeout(() => {\r\n                drawGlobe(oldCoordinates, scale, isDrag);\r\n                setIsLoading(false);\r\n            }, 800);\r\n        }\r\n    }, [subSolarCoordinates])\r\n\r\n    useEffect(() => {\r\n        if(!isInitialLoad){\r\n            console.log(\"current landmark\");\r\n            setIsLoading(true);\r\n            setRenderText(\"Rendering clicked landmark...\");\r\n            setTimeout(() => {\r\n                drawGlobe(oldCoordinates, scale, false);\r\n                setIsLoading(false);\r\n            }, 800);\r\n        }\r\n    }, [currentLandmark])\r\n\r\n    useEffect(() => {\r\n        if(!isInitialLoad){\r\n            console.log(\"else\");\r\n            setIsLoading(true);\r\n            setRenderText(\"Rendering for resized window...\");\r\n            setTimeout(() => {\r\n                drawGlobe(oldCoordinates, scale, false);\r\n                setIsLoading(false);\r\n            }, 800);\r\n        }\r\n    }, [size])\r\n\r\n    useEffect(() => {\r\n        if(!isInitialLoad){\r\n            console.log(\"templandmark\");\r\n            setIsLoading(true);\r\n            setRenderText(\"Rendering new landmark...\");\r\n            setTimeout(() => {\r\n                drawGlobe(oldCoordinates, scale, false);\r\n                setIsLoading(false);\r\n            }, 800);\r\n        }\r\n    }, [tempLandmark])\r\n\r\n    useEffect(() => {\r\n        if(!isInitialLoad){\r\n            console.log(\"edit landmark\");\r\n            setIsLoading(true);\r\n            setRenderText(\"Rendering edited landmark...\");\r\n            setTimeout(() => {\r\n                drawGlobe(oldCoordinates, scale, false);\r\n                setIsLoading(false);\r\n            }, 800);\r\n        }\r\n    }, [editLandmark])\r\n\r\n    useEffect(() => {\r\n        if(!isInitialLoad){\r\n            console.log(\"edit path\");\r\n            setIsLoading(true);\r\n            setRenderText(\"Rendering edited path...\");\r\n            setTimeout(() => {\r\n                drawGlobe(oldCoordinates, scale, false);\r\n                setIsLoading(false);\r\n            }, 800);\r\n        }\r\n    }, [editPath.coordinates, editPath.isAirPlane])\r\n\r\n    useEffect(() => {\r\n        if(!isInitialLoad){\r\n            console.log(\"new path\");\r\n            setIsLoading(true);\r\n            setRenderText(\"Rendering new path...\");\r\n            setTimeout(() => {\r\n                drawGlobe(oldCoordinates, scale, false);\r\n                setIsLoading(false);\r\n            }, 800);\r\n        }\r\n    }, [tempPath])\r\n\r\n    useEffect(() => {\r\n        if(!isInitialLoad){\r\n            console.log(\"paths\");\r\n            setIsLoading(true);\r\n            setRenderText(\"Updating paths...\");\r\n            setTimeout(() => {\r\n                drawGlobe(oldCoordinates, scale, false);\r\n                setIsLoading(false);\r\n            }, 800);\r\n        }\r\n    }, [paths])\r\n\r\n    useEffect(() => {\r\n        if(!isInitialLoad){\r\n            console.log(\"else\");\r\n            setIsLoading(true);\r\n            setRenderText(\"Updating landmarks...\");\r\n            setTimeout(() => {\r\n                drawGlobe(oldCoordinates, scale, false);\r\n                setIsLoading(false);\r\n            }, 800);\r\n        }\r\n    }, [landmarks])\r\n\r\n    useEffect(() => {\r\n        console.log(\"paths\");\r\n        setIsLoading(true);\r\n        setRenderText(\"Rendering globe...\");\r\n        setTimeout(() => {\r\n            drawGlobe(oldCoordinates, scale, false);\r\n            setIsLoading(false);\r\n            setIsInitialLoad(false);\r\n        }, 800);\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <svg width={size} height={size} ref={svgRef}\r\n                onMouseDown={onMouseDownHandler} \r\n                onMouseMove={onMouseMoveHandler} \r\n                onMouseUp={onMouseUpHandler}\r\n                onWheel={mouseWheelHandler}\r\n                >\r\n            </svg>\r\n            <IconButton  size=\"medium\" variant=\"contained\" className={classes.zoomInButton} onClick={zoomInHandler}>\r\n                <AddIcon/>\r\n            </IconButton>\r\n            <IconButton  size=\"medium\" variant=\"contained\" className={classes.zoomOutButton} onClick={zoomOutHandler}>\r\n                <RemoveIcon/>\r\n            </IconButton>\r\n            {isLoading && <Typography className={classes.renderText}>{renderText}</Typography>}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Globe;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Button from '@material-ui/core/Button';\r\n// import EditIcon from '@material-ui/icons/Edit';\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\n// import { CircularProgress, FormControl, Input, InputLabel, TextField } from \"@material-ui/core\";\r\n\r\nfunction LandmarkInfo({ currentLandmark, value, index}) {\r\n    /**\r\n     * Gets the landmark information.\r\n     */\r\n    const getLandmarkInfoContent = () => {\r\n        const landmark = currentLandmark[0];\r\n        if (landmark.isVisible) {\r\n            var description = landmark.description;\r\n            var descriptionArray = description.split(\"\\n\");\r\n            return (\r\n                <div>\r\n                    <Typography variant=\"h4\">\r\n                        {landmark.name}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" paragraph>\r\n                        Latitude: {landmark.coordinates[1]}, Longitude: {landmark.coordinates[0]}\r\n                    </Typography>\r\n                    {\r\n                        descriptionArray.map(element => {\r\n                            return (\r\n                                <Typography variant=\"h6\" paragraph>\r\n                                    {element}\r\n                                </Typography>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <Typography variant=\"h4\">\r\n                        Click on a Landmark\r\n                    </Typography>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div hidden={value !== index} style={{margin: \"20px\"}}>\r\n            \r\n            <Typography variant=\"h5\">\r\n                Landmark Information\r\n            </Typography>\r\n            <br/>\r\n            {getLandmarkInfoContent()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LandmarkInfo;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport { Input, Typography, CircularProgress } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nfunction NewLandmarkTab({setLandmarks, value, index, setTempLandmark, invalidateAuth}) {\r\n\r\n  //States\r\n  const [landmarkName, setLandmarkName] = useState(\"\");\r\n  const [landmarkLatitude, setLandmarkLatitude] = useState(\"\");\r\n  const [landmarkLongitude, setLandmarkLongitude] = useState(\"\");\r\n  const [landmarkDescription, setLandmarkDescription] = useState(\"\");\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  /**\r\n   * Handles the description change\r\n   * @param {*} event - the text event \r\n   */\r\n  const handleDescriptionChange = (event) => {\r\n    setLandmarkDescription(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles the name change.\r\n   * @param {*} event - the text event\r\n   */\r\n  const handleNameChange = (event) => {\r\n    setLandmarkName(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Handles the latitude change.\r\n   * @param {*} event - the text event\r\n   */\r\n  const handleLatitudeChange = (event) => {\r\n    if(event.target.value === \"\"){\r\n      var newTempLandmark = [{\r\n        coordinates: [0, 0],\r\n        isVisible: false\r\n      }];\r\n\r\n      setTempLandmark(newTempLandmark);\r\n    }\r\n    if(Math.abs(event.target.value) <= 90){\r\n      setLandmarkLatitude(parseFloat(event.target.value));\r\n      var newTempLandmark = [{\r\n        coordinates: [landmarkLongitude, parseFloat(event.target.value)],\r\n        isVisible: true\r\n      }];\r\n      if(landmarkLongitude !== \"\" && event.target.value !== \"\"){\r\n        setTempLandmark(newTempLandmark);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles the longitude change.\r\n   * @param {*} event - the text event\r\n   */\r\n  const handleLongitudeChange = (event) => {\r\n    if(event.target.value === \"\"){\r\n      var newTempLandmark = [{\r\n        coordinates: [0, 0],\r\n        isVisible: false\r\n      }];\r\n\r\n      setTempLandmark(newTempLandmark);\r\n    }\r\n    if(Math.abs(event.target.value) <= 180){\r\n      setLandmarkLongitude(parseFloat(event.target.value));\r\n\r\n      var newTempLandmark = [{\r\n        coordinates: [parseFloat(event.target.value), landmarkLatitude],\r\n        isVisible: true\r\n      }];\r\n\r\n      if(event.target.value !== \"\" && landmarkLatitude !== \"\"){\r\n        setTempLandmark(newTempLandmark);\r\n      }\r\n    }\r\n  }\r\n\r\n  const sortLandmarks = (a, b) => {  \r\n    if (a[\"name\"] > b[\"name\"]) {    \r\n        return 1;    \r\n    } else if (a[\"name\"] < b[\"name\"]) {    \r\n        return -1;    \r\n    }    \r\n    return 0;  \r\n  }\r\n\r\n  /**\r\n   * Handles the add landmark event.\r\n   */\r\n  const handleAddLandmark = () => {\r\n    if(!(landmarkName === \"\" || landmarkLatitude === \"\" || landmarkLongitude === \"\")){\r\n      setIsProcessing(true);\r\n      const body = {\r\n        landmarkName: landmarkName,\r\n        landmarkDescription: landmarkDescription,\r\n        latitude: parseFloat(landmarkLatitude),\r\n        longitude: parseFloat(landmarkLongitude)\r\n      }\r\n  \r\n      fetch(`/landmarks`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'authorization' : `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setLandmarkName(\"\");\r\n        setLandmarkLatitude(\"\");\r\n        setLandmarkLongitude(\"\");\r\n        setLandmarkDescription(\"\");\r\n        setTimeout(() => {\r\n          setIsProcessing(false);\r\n          setLandmarks(prevArray => {\r\n            var newArray = [...prevArray, {\r\n              id: `landmark_${res.landmark_uid}`,\r\n              path_uid: res.landmark_uid,\r\n              name: landmarkName,\r\n              description: landmarkDescription,\r\n              coordinates: [parseFloat(landmarkLongitude), parseFloat(landmarkLatitude)]\r\n            }];\r\n            return newArray.sort(sortLandmarks);\r\n          });\r\n          setTempLandmark([{\r\n            coordinates: [0, 0],\r\n            isVisible: false\r\n          }]);\r\n        }, 500);\r\n      })\r\n      .catch(err => invalidateAuth());//TODO: check if processing needs to be set to false here\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form hidden={value !== index} style={{margin: \"20px\"}}>\r\n      <Typography variant=\"h5\">\r\n        Create a New Landmark\r\n      </Typography>\r\n      <FormControl fullWidth>\r\n      <InputLabel htmlFor=\"landmarkLatitude\">Latitude</InputLabel>\r\n      <Input \r\n        type=\"number\" \r\n        id=\"landmarkLatitude\" \r\n        placeholder=\"Enter value between -90 to 90\" \r\n        name=\"Latitude\"\r\n        value={landmarkLatitude}\r\n        onChange={handleLatitudeChange} />\r\n      </FormControl>\r\n      <br/>\r\n      <FormControl fullWidth>\r\n      <InputLabel htmlFor=\"landmarkLongitude\">Longitude</InputLabel>\r\n      <Input \r\n        type=\"number\" \r\n        id=\"landmarkLongitude\" \r\n        placeholder=\"Enter value between -180 to 180\" \r\n        name=\"Longitude\"\r\n        value={landmarkLongitude}\r\n        onChange={handleLongitudeChange} />\r\n      </FormControl>\r\n      <br/>\r\n      <TextField \r\n        id=\"standard-basic\" \r\n        label=\"Landmark Name\" \r\n        placeholder=\"ie. Vancouver, BC, Canada\" \r\n        value={landmarkName}\r\n        onChange={handleNameChange} \r\n        fullWidth/>\r\n      <br/>\r\n      <TextField\r\n        id=\"standard-multiline-static\"\r\n        label=\"Description\"\r\n        placeholder=\"Enter a description about the landmark\" \r\n        multiline\r\n        rows={4}\r\n        value={landmarkDescription}\r\n        onChange={handleDescriptionChange} \r\n        fullWidth/>\r\n      <br/>\r\n      <br/>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleAddLandmark}>\r\n        {isProcessing && <CircularProgress size={24} color='secondary' disableShrink />}\r\n        {!isProcessing && 'Add Landmark'}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n \r\nexport default NewLandmarkTab;","//Imports from libraries\r\nimport React, { useState } from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Input, CircularProgress, Paper, TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport AirplanemodeActiveIcon from '@material-ui/icons/AirplanemodeActive';\r\nimport CommuteIcon from '@material-ui/icons/Commute';\r\n\r\nfunction NewPathTab({setPaths, value, index, setTempPath, invalidateAuth}) {\r\n\r\n  //NewPathTab states\r\n  const [nodes, setNodes] = useState([]);\r\n  const [isAirplane, setIsAirplane] = useState(true);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n\r\n  /**\r\n   * Handles the name change of the edited landmark.\r\n   * @param {*} event - the event for the name change\r\n   */\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Handles creating a new node.\r\n   */\r\n  const handleNewNode = () => {\r\n    setNodes(prevArray => [...prevArray, [\"\", \"\"]]);\r\n  }\r\n\r\n  const sortPaths = (a, b) => { \r\n    if(a[\"path_name\"] === null && b[\"path_name\"] === null){\r\n      return 0;\r\n    }\r\n    else if(a[\"path_name\"] === null){\r\n      return 1;\r\n    }\r\n    else if(b[\"path_name\"] === null){\r\n      return -1;\r\n    }\r\n    else if(a[\"path_name\"] > b[\"path_name\"]){\r\n      return 1;\r\n    }\r\n    else if(a[\"path_name\"] < b[\"path_name\"]){\r\n      return -1;\r\n    }\r\n    return 0;  \r\n  }\r\n\r\n  /**\r\n   * Handles creating a new path.\r\n   */\r\n  const handleNewPath = () => {\r\n    var isNodesPopulated = true;\r\n\r\n    for(var i = 0; i < nodes.length; i++){\r\n      if(nodes[i][0] === \"\" || nodes[i][1] === \"\"){\r\n        isNodesPopulated = false;\r\n      }\r\n    }\r\n    \r\n    if(isNodesPopulated && nodes.length >= 2){\r\n      setIsProcessing(true);\r\n      const body = {\r\n        coordinates: [...nodes], \r\n        isAirPlane: isAirplane,\r\n        path_name: name\r\n      }\r\n  \r\n      fetch(`/paths`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'authorization' : `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        let newPath = {\r\n          type: \"LineString\", \r\n          coordinates: [...nodes], \r\n          id:`path_${res.path_uid}`,\r\n          path_uid: res.path_uid,\r\n          isAirPlane: isAirplane,\r\n          path_name: name\r\n        };\r\n  \r\n        setNodes([]);\r\n        setName(\"\");\r\n        setTimeout(() => {\r\n          setIsProcessing(false);\r\n          setPaths(prevArray => {\r\n            var newArray = [...prevArray, newPath];\r\n            return newArray.sort(sortPaths);\r\n          });\r\n          setTempPath([{\r\n            type: \"LineString\",\r\n            coordinates: [],\r\n            isAirPlane: isAirplane\r\n          }]);\r\n        }, 500);\r\n      })\r\n      .catch(err => invalidateAuth());\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles deleting a node.\r\n   * @param {*} event - the button event\r\n   */\r\n  const handleDeleteNode = (event) => {\r\n    var idArray = event.target.parentElement.id.split(\"_\");\r\n    var index = parseInt(idArray[1]);\r\n\r\n    var newNodes = [...nodes];\r\n    newNodes.splice(index, 1);\r\n\r\n    setNodes(newNodes);\r\n    updateTempPath(newNodes);\r\n  };\r\n\r\n  /**\r\n   * Updates the temporary path.\r\n   * @param {*} newElements - the nodes used to show the temporary path\r\n   * @param {*} newIsAirplane - (optional) the boolean airplane state\r\n   */\r\n  const updateTempPath = (newElements, newIsAirplane) => {\r\n    var isAirplaneVal = newIsAirplane !== undefined ? newIsAirplane : isAirplane;\r\n\r\n    var newTempPath = {\r\n      type: \"LineString\", \r\n      coordinates: [],\r\n      isAirPlane: isAirplaneVal\r\n    };\r\n\r\n    for(var i = 0; i < newElements.length; i++){\r\n      var node = newElements[i];\r\n      var lat = node[1];\r\n      var long = node[0];\r\n\r\n      if(lat !== \"\" && long !== \"\"){\r\n        newTempPath.coordinates.push(node);\r\n      }\r\n    }\r\n    setTempPath([newTempPath]);\r\n  };\r\n\r\n  /**\r\n   * Handles a latitude field being changed.\r\n   * @param {*} event - the text event \r\n   */\r\n  const onElementLatitudeChange = (event) => {\r\n    var idArray = event.target.id.split(\"_\");\r\n    var index = parseInt(idArray[1]);\r\n\r\n    var newElements = [...nodes];\r\n    let item = {...newElements[index]};\r\n\r\n    if(Math.abs(parseFloat(event.target.value)) <= 90){\r\n      item[1] = parseFloat(event.target.value);\r\n    }\r\n    else if(event.target.value === \"\"){\r\n      item[1] = event.target.value;\r\n    }\r\n    \r\n    newElements[index] = item;\r\n\r\n    setNodes(newElements);\r\n    updateTempPath(newElements);\r\n  };\r\n\r\n  /**\r\n   * Handles a longitude field being changed.\r\n   * @param {*} event - the text event\r\n   */\r\n  const onElementLongitudeChange = (event) => {\r\n    var idArray = event.target.id.split(\"_\");\r\n    var index = parseInt(idArray[1]);\r\n\r\n    var newElements = [...nodes];\r\n    let item = {...newElements[index]};\r\n\r\n    if(Math.abs(parseFloat(event.target.value)) <= 180){\r\n      item[0] = parseFloat(event.target.value);\r\n    }\r\n    else if(event.target.value === \"\"){\r\n      item[0] = event.target.value;\r\n    }\r\n\r\n    newElements[index] = item;\r\n    \r\n    setNodes(newElements);\r\n    updateTempPath(newElements);\r\n  };\r\n\r\n  /**\r\n   * Handles the switch state being changed.\r\n   * @param {*} event - the switch event\r\n   */\r\n  const handleSwitchChange = (event) => {\r\n    setIsAirplane(event.target.checked);\r\n    updateTempPath(nodes, event.target.checked);\r\n  };\r\n\r\n  /**\r\n   * Gets the view for the finish button.\r\n   */\r\n  const getFinishButton = () => {\r\n    if(nodes.length >= 2){\r\n      return(\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleNewPath} fullWidth>\r\n          {isProcessing && <CircularProgress size={24} color='primary' disableShrink />}\r\n          {!isProcessing && 'Finish Path'}\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form hidden={value !== index} style={{margin: \"20px\"}}>\r\n      <Typography variant=\"h5\">\r\n        Create a New Path\r\n      </Typography>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch \r\n            checked={isAirplane} \r\n            onChange={handleSwitchChange} \r\n            name=\"checkedA\" \r\n            checkedIcon={<AirplanemodeActiveIcon/>}\r\n            icon={<CommuteIcon/>}\r\n          />\r\n        }\r\n        label=\"Travel Type\"/>\r\n      <TextField \r\n          id=\"standard-basic\" \r\n          label=\"Path Name\" \r\n          placeholder=\"Vancouver, BC, Canada to New York City, NY, USA\" \r\n          value={name}\r\n          onChange={handleNameChange}\r\n          fullWidth/>\r\n      <Paper style={{maxHeight: \"50vh\", overflow: 'auto'}}>\r\n        {\r\n          nodes.map((element, index) => {\r\n            var latId = `nodeLatitude_${index}`;\r\n            var longitudeId = `nodeLongitude_${index}`;\r\n            var deleteBtnId = `deleteBtn_${index}`;\r\n\r\n            return (\r\n              <form>\r\n                <br/>\r\n                <Typography>Node {index + 1}</Typography>\r\n                <FormControl fullWidth>\r\n                  <InputLabel htmlFor={latId}>Latitude</InputLabel>\r\n                  <Input \r\n                    type=\"number\" \r\n                    id={latId}\r\n                    placeholder=\"Enter value between -90 to 90\" \r\n                    name=\"Latitude\"\r\n                    value={element[1]}\r\n                    onChange={onElementLatitudeChange} />\r\n                </FormControl>\r\n                <FormControl fullWidth>\r\n                <InputLabel htmlFor={longitudeId}>Longitude</InputLabel>\r\n                <Input \r\n                  type=\"number\" \r\n                  id={longitudeId}\r\n                  placeholder=\"Enter value between -180 to 180\" \r\n                  name=\"Longitude\"\r\n                  value={element[0]}\r\n                  onChange={onElementLongitudeChange} />\r\n                </FormControl>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={handleDeleteNode} fullWidth id={deleteBtnId}>\r\n                  Delete Node {index + 1}\r\n                </Button>\r\n              </form>\r\n            );\r\n          })\r\n        }\r\n      </Paper>\r\n      <br/>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleNewNode} fullWidth> \r\n        Add Node\r\n      </Button>\r\n      \r\n      {getFinishButton()}\r\n\r\n      <br/>\r\n    </form>\r\n  );\r\n}\r\n \r\nexport default NewPathTab;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport { Input, Typography, CircularProgress, Paper, FormControl, InputLabel, TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nfunction EditLandmarksTab({value, index, invalidateAuth, setEditLandmark, updateLandmarks, deleteLandmark, landmarks, toInformationTab}) {\r\n\r\n  //States\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editId, setEditId] = useState(-1);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [editName, setEditName] = useState(\"\");\r\n  const [editDescription, setEditDescription] = useState(\"\");\r\n  const [editLongitude, setEditLongitude] = useState(\"\");\r\n  const [editLatitude, setEditLatitude] = useState(\"\");\r\n\r\n  /**\r\n   * Handles the latitude change of the edited landmark.\r\n   * @param {*} event - the event for the latitude change\r\n   */\r\n  const handleLatitudeChange = (event) => {\r\n    if(event.target.value === \"\"){\r\n      var editLandmark = [{\r\n        coordinates: [0, 0],\r\n        isVisible: false\r\n      }];\r\n      setEditLandmark(editLandmark);\r\n    }\r\n\r\n    if(Math.abs(event.target.value) <= 90){\r\n      setEditLatitude(event.target.value);\r\n      var editLandmark = [{\r\n        coordinates: [editLongitude, parseFloat(event.target.value)],\r\n        isVisible: true\r\n      }];\r\n      if(editLongitude !== \"\" && event.target.value !== \"\"){\r\n        setEditLandmark(editLandmark);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles the longitude change of the edited landmark.\r\n   * @param {*} event - the event for the longitude change\r\n   */\r\n  const handleLongitudeChange = (event) => {\r\n    if(event.target.value === \"\"){\r\n      var editLandmark = [{\r\n        coordinates: [0, 0],\r\n        isVisible: false\r\n      }];\r\n      setEditLandmark(editLandmark);\r\n    }\r\n\r\n    if(Math.abs(event.target.value) <= 180){\r\n      setEditLongitude(event.target.value);\r\n      var editLandmark = [{\r\n        coordinates: [parseFloat(event.target.value), editLatitude],\r\n        isVisible: true\r\n      }];\r\n      if(editLatitude !== \"\" && event.target.value !== \"\"){\r\n        setEditLandmark(editLandmark);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles the name change of the edited landmark.\r\n   * @param {*} event - the event for the name change\r\n   */\r\n  const handleNameChange = (event) => {\r\n    setEditName(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Handles the description change of the edited landmark.\r\n   * @param {*} event - the event for the desription change\r\n   */\r\n  const handleDescriptionChange = (event) => {\r\n    setEditDescription(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Handles editing the landmark.\r\n   */\r\n  const handleEditLandmark = () => {\r\n    if(editId !== -1 && editName !== \"\" && editLongitude !== \"\" && editLatitude !== \"\"){\r\n      setIsProcessing(true);\r\n      const body = {\r\n        landmark_uid: editId,\r\n        name: editName,\r\n        description: editDescription,\r\n        coordinates: [editLongitude, editLatitude]\r\n      };\r\n\r\n      fetch(`/landmarks`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'authorization' : `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setIsEdit(false);\r\n        setIsProcessing(false);\r\n        setTimeout(() => {\r\n          updateLandmarks({\r\n            landmark_uid: editId,\r\n            name: editName,\r\n            description: editDescription,\r\n            coordinates: [editLongitude, editLatitude]\r\n          })\r\n        }, 500);\r\n      })\r\n      .catch(err => invalidateAuth());\r\n    }\r\n    else{\r\n      alert('A field is missing! Cannot update landmark.')\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles canceling out of the edit mode.\r\n   */\r\n  const handleCancelEdit = () => {\r\n    var editLandmark = [{\r\n      coordinates: [0, 0],\r\n      isVisible: false\r\n    }];\r\n    setEditLandmark(editLandmark);\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleEditLandmarkMode = (landmark) => {\r\n    setIsEdit(true);\r\n    setEditId(landmark.landmark_uid);\r\n    setEditName(landmark.name);\r\n    setEditDescription(landmark.description);\r\n    setEditLongitude(landmark.coordinates[0]);\r\n    setEditLatitude(landmark.coordinates[1]);\r\n    var editLandmark = [{\r\n        coordinates: [landmark.coordinates[0], landmark.coordinates[1]],\r\n        isVisible: true\r\n    }];\r\n    setEditLandmark(editLandmark);\r\n  };\r\n\r\n  /**\r\n   * Handles deleting the landmark.\r\n   */\r\n  const handleDeleteLandmark = (landmark) => {\r\n    let isConfirmed = window.confirm(`Are you sure you want to delete this landmark?\\n\\n${landmark.name}\\nlongitude:${landmark.coordinates[0]}\\nlatitude:${landmark.coordinates[1]}\\n\\n${landmark.description}`);\r\n    if(isConfirmed){\r\n      setIsProcessing(true);\r\n      const body = {\r\n        landmark_uid: landmark.landmark_uid\r\n      };\r\n      fetch(`/landmarks`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'authorization' : `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setIsProcessing(false);\r\n        // deleteLandmark(currentLandmark[0].landmark_uid);\r\n        setIsEdit(false);\r\n        setTimeout(() => {\r\n          deleteLandmark(landmark.landmark_uid);\r\n        }, 500);\r\n      })\r\n      .catch(err => invalidateAuth());\r\n    }\r\n  };\r\n\r\n  const getEditLandmarkContent = () => {\r\n    return (\r\n      <form>\r\n        <FormControl fullWidth>\r\n        <InputLabel htmlFor=\"landmarkLatitude\">Latitude</InputLabel>\r\n        <Input \r\n            type=\"number\" \r\n            id=\"landmarkLatitude\" \r\n            placeholder=\"Enter value between -90 to 90\" \r\n            name=\"Latitude\"\r\n            value={editLatitude}\r\n            onChange={handleLatitudeChange}/>\r\n        </FormControl>\r\n        <br/>\r\n        <FormControl fullWidth>\r\n        <InputLabel htmlFor=\"landmarkLongitude\">Longitude</InputLabel>\r\n        <Input \r\n            type=\"number\" \r\n            id=\"landmarkLongitude\" \r\n            placeholder=\"Enter value between -180 to 180\" \r\n            name=\"Longitude\"\r\n            value={editLongitude}\r\n            onChange={handleLongitudeChange}/>\r\n        </FormControl>\r\n        <br/>\r\n        <TextField \r\n            id=\"standard-basic\" \r\n            label=\"Landmark Name\" \r\n            placeholder=\"ie. Vancouver, BC, Canada\" \r\n            value={editName}\r\n            onChange={handleNameChange}\r\n            fullWidth/>\r\n        <br/>\r\n        <TextField\r\n            id=\"standard-multiline-static\"\r\n            label=\"Description\"\r\n            placeholder=\"Enter a description about the landmark\" \r\n            multiline\r\n            rows={12}\r\n            maxHeight=\"500px\"\r\n            value={editDescription}\r\n            onChange={handleDescriptionChange}\r\n            fullWidth/>\r\n        <br/>\r\n        <br/>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleEditLandmark}>\r\n            {isProcessing && <CircularProgress size={24} color='secondary' disableShrink />}\r\n            {!isProcessing && 'Finish Edit'}\r\n        </Button>\r\n        \r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleCancelEdit}>\r\n            {isProcessing && <CircularProgress size={24} color='primary' disableShrink />}\r\n            {!isProcessing && 'Cancel Edit'}\r\n        </Button>\r\n    </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper hidden={value !== index} square style={{padding: \"20px\", maxHeight: \"calc(100vh - 50px)\", overflow: 'auto'}} elevation={0}>\r\n      <Typography variant=\"h5\">\r\n        {isEdit ? \"Edit Landmark\" : \"Landmark List\"}\r\n      </Typography>\r\n      {\r\n        !isEdit && landmarks.map((element, index) => {\r\n          return(\r\n            <Paper style={{marginTop: \"10px\", marginBottom: \"10px\", padding:\"10px\"}}  elevation={2}>\r\n              <IconButton>\r\n                <MyLocationIcon/>\r\n              </IconButton>\r\n              <IconButton onClick={() => toInformationTab(element)}>\r\n                <InfoIcon/>\r\n              </IconButton>\r\n              <IconButton color=\"primary\" onClick={() => handleEditLandmarkMode(element)}>\r\n                <EditIcon/>\r\n              </IconButton>\r\n              <IconButton color=\"secondary\" onClick={() => handleDeleteLandmark(element)}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\">\r\n                {element.name}\r\n              </Typography>\r\n              {/* <Typography style={{fontSize: \"14px\"}}>\r\n                {element.description}\r\n              </Typography> */}\r\n            </Paper>\r\n          );\r\n        })\r\n      }\r\n      {\r\n        isEdit && getEditLandmarkContent()\r\n      }\r\n    </Paper>\r\n  );\r\n}\r\n \r\nexport default EditLandmarksTab;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport { Input, Typography, CircularProgress, Paper, FormControl, InputLabel, TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport AirplanemodeActiveIcon from '@material-ui/icons/AirplanemodeActive';\r\nimport CommuteIcon from '@material-ui/icons/Commute';\r\n\r\nfunction EditPathsTab({value, index, invalidateAuth, setEditPath, updateLandmarks, paths, editPath, deletePath, setPaths}) {\r\n\r\n  //States\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [editName, setEditName] = useState(\"\");\r\n\r\n  /**\r\n   * Handles a latitude field being changed.\r\n   * @param {*} event - the text event \r\n   */\r\n  const onElementLatitudeChange = (event, index) => {\r\n    setEditPath(prevValue => {\r\n      var currentEditPathCopy = {...prevValue};\r\n      var coordinatesCopy = [...currentEditPathCopy.coordinates];\r\n      var coordinateCopy = [...coordinatesCopy[index]];\r\n      if(Math.abs(parseFloat(event.target.value)) <= 90){\r\n        coordinateCopy[1] = parseFloat(event.target.value);\r\n      }\r\n      else if(event.target.value === \"\"){\r\n        coordinateCopy[1] = \"\";\r\n      }\r\n      coordinatesCopy[index] = coordinateCopy;\r\n      currentEditPathCopy.coordinates = coordinatesCopy;\r\n      return currentEditPathCopy;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handles a longitude field being changed.\r\n   * @param {*} event - the text event\r\n   */\r\n  const onElementLongitudeChange = (event, index) => {\r\n    setEditPath(prevValue => {\r\n      var currentEditPathCopy = {...prevValue};\r\n      var coordinatesCopy = [...currentEditPathCopy.coordinates];\r\n      var coordinateCopy = [...coordinatesCopy[index]];\r\n      if(Math.abs(parseFloat(event.target.value)) <= 180){\r\n        coordinateCopy[0] = parseFloat(event.target.value);\r\n      }\r\n      else if(event.target.value === \"\"){\r\n        coordinateCopy[0] = \"\";\r\n      }\r\n      coordinatesCopy[index] = coordinateCopy;\r\n      currentEditPathCopy.coordinates = coordinatesCopy;\r\n      return currentEditPathCopy;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handles deleting a node.\r\n   * @param {*} event - the button event\r\n   */\r\n  const handleDeleteNode = (event, index) => {\r\n    setEditPath(prevValue => {\r\n      var currentEditPathCopy = {...prevValue};\r\n      var coordinatesCopy = [...currentEditPathCopy.coordinates];\r\n      coordinatesCopy.splice(index, 1);\r\n      currentEditPathCopy.coordinates = coordinatesCopy;\r\n      return currentEditPathCopy;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handles the name change of the edited landmark.\r\n   * @param {*} event - the event for the name change\r\n   */\r\n  const handleNameChange = (event) => {\r\n    setEditName(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Handles the switch state being changed.\r\n   * @param {*} event - the switch event\r\n   */\r\n  const handleSwitchChange = (event) => {\r\n    setEditPath(prevValue => {\r\n      var prevValueCopy = {...prevValue};\r\n      prevValueCopy.isAirPlane = event.target.checked;\r\n      return prevValueCopy;\r\n    });\r\n  };\r\n\r\n  const sortPaths = (a, b) => { \r\n    if(a[\"path_name\"] === null && b[\"path_name\"] === null){\r\n      return 0;\r\n    }\r\n    else if(a[\"path_name\"] === null){\r\n      return 1;\r\n    }\r\n    else if(b[\"path_name\"] === null){\r\n      return -1;\r\n    }\r\n    else if(a[\"path_name\"] > b[\"path_name\"]){\r\n      return 1;\r\n    }\r\n    else if(a[\"path_name\"] < b[\"path_name\"]){\r\n      return -1;\r\n    }\r\n    return 0;  \r\n  }\r\n\r\n  /**\r\n   * Handles editing the landmark.\r\n   */\r\n  const handleEditPath = () => {\r\n    var isNodesPopulated = true;\r\n    for(var i = 0; i < editPath.coordinates.length; i++){\r\n      if(editPath.coordinates[0] === \"\" || editPath.coordinates[1] === \"\"){\r\n        isNodesPopulated = false;\r\n        break;\r\n      }\r\n    }\r\n    if(isNodesPopulated && editPath.coordinates.length >= 2){\r\n      // console.log(\"original paths\", paths);\r\n      var index = -1;\r\n      for(var i = 0; i < paths.length; i++){\r\n        if(paths[i].path_uid === editPath.path_uid){\r\n          index = i;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      setIsProcessing(true);\r\n      const body = {\r\n        path_uid: editPath.path_uid,\r\n        path_name: editName,\r\n        coordinates: editPath.coordinates,\r\n        is_airplane: editPath.isAirPlane\r\n      };\r\n      // console.log(\"this is the body to edit\", body);\r\n      fetch(`/paths`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'authorization' : `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setIsEdit(false);\r\n        setIsProcessing(false);\r\n        setTimeout(() => {\r\n          setPaths(prevArray => {\r\n            console.log(\"original editpath\", editPath);\r\n            var prevArrayCopy = [...prevArray];\r\n            var pathCopy = {...prevArrayCopy[index]};\r\n            console.log(\"pre pathCopy\", pathCopy);\r\n            pathCopy.isAirPlane = editPath.isAirPlane;\r\n            pathCopy.path_name = editName;\r\n            pathCopy.coordinates = editPath.coordinates;\r\n            console.log(\"post pathcopy\", pathCopy);\r\n            prevArrayCopy[index] = pathCopy;\r\n            prevArrayCopy.sort(sortPaths);\r\n            console.log(\"array to return\", prevArrayCopy);\r\n            return prevArrayCopy;\r\n          });\r\n          setEditName(\"\");\r\n          setEditPath(prevValue => {\r\n            var prevValueCopy = {...prevValue};\r\n            prevValueCopy.coordinates = [];\r\n            return prevValueCopy;\r\n          });\r\n        }, 500);\r\n      })\r\n      .catch(err => invalidateAuth());\r\n    }\r\n    else{\r\n      alert('A field is missing! Cannot update landmark.')\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles canceling out of the edit mode.\r\n   */\r\n  const handleCancelEdit = (path) => {\r\n    var editPath = [{\r\n      type: \"LineString\",\r\n      coordinates: [],\r\n      isAirPlane: false\r\n    }];\r\n    setEditPath(editPath);\r\n    setIsEdit(false);\r\n  };\r\n\r\n  /**\r\n   * Handles creating a new node.\r\n   */\r\n  const handleNewNode = () => {\r\n    setEditPath(prevValue => {\r\n      var prevValCopy = {...prevValue};\r\n      var coordinatesCopy = [...prevValCopy.coordinates, [\"\",\"\"]];\r\n      prevValCopy.coordinates = coordinatesCopy;\r\n      return prevValCopy;\r\n    });\r\n  }\r\n\r\n\r\n  const handleEditPathMode = (path) => {\r\n    if(isProcessing){\r\n      return;\r\n    }\r\n    setIsEdit(true);\r\n    setEditPath(path);\r\n    setEditName(path.path_name);\r\n  };\r\n\r\n  /**\r\n   * Handles deleting the landmark.\r\n   */\r\n  const handleDeletePath = (path, index) => {\r\n    if(isProcessing){\r\n      return;\r\n    }\r\n\r\n    let isConfirmed = window.confirm(`Are you sure you want to delete this path?\\n\\nname:\\n${path.path_name === null ? \"None\" : path.path_name}\\ncoordinates:\\n${path.coordinates.map((element, index) => {\r\n      return `${index + 1}. (${element[0]}, ${element[1]})\\n`;\r\n    }).join(\"\")}`);\r\n    if(isConfirmed){\r\n      setIsProcessing(true);\r\n      \r\n      const body = {\r\n        path_uid: path.path_uid\r\n      };\r\n      fetch(`/paths`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'authorization' : `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        console.log(res);\r\n        setIsProcessing(false);\r\n        setIsEdit(false);\r\n        setTimeout(() => {\r\n          deletePath(index);\r\n        }, 500);\r\n      })\r\n      .catch(err => invalidateAuth());\r\n    }\r\n  };\r\n\r\n  const getEditPathContent = () => {\r\n    console.log(paths);\r\n    return (\r\n      <form>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch \r\n              checked={editPath.isAirPlane} \r\n              onChange={handleSwitchChange} \r\n              name=\"checkedA\" \r\n              checkedIcon={<AirplanemodeActiveIcon/>}\r\n              icon={<CommuteIcon/>}\r\n            />\r\n          }\r\n          label=\"Travel Type\"/>\r\n        <TextField \r\n            id=\"standard-basic\" \r\n            label=\"Path Name\" \r\n            placeholder=\"Vancouver, BC, Canada to New York City, NY, USA\" \r\n            value={editName}\r\n            onChange={handleNameChange}\r\n            fullWidth/>\r\n        {\r\n          editPath.coordinates.map((element, index) => {\r\n            var latId = `nodeLatitude1_${index}`;\r\n            var longitudeId = `nodeLongitude_${index}`;\r\n            var deleteBtnId = `deleteBtn_${index}`;\r\n            return (\r\n              <Paper style={{marginTop: \"10px\", marginBottom: \"10px\", padding:\"10px\"}}  elevation={2}>\r\n                <Typography>Node {index + 1}</Typography>\r\n                <FormControl fullWidth>\r\n                  <InputLabel htmlFor={latId}>Latitude</InputLabel>\r\n                  <Input \r\n                    type=\"number\" \r\n                    id={latId}\r\n                    placeholder=\"Enter value between -90 to 90\" \r\n                    name=\"Latitude\"\r\n                    value={element[1]}\r\n                    onChange={(event) => onElementLatitudeChange(event, index)} />\r\n                </FormControl>\r\n                <FormControl fullWidth>\r\n                  <InputLabel htmlFor={longitudeId}>Longitude</InputLabel>\r\n                  <Input \r\n                    type=\"number\" \r\n                    id={longitudeId}\r\n                    placeholder=\"Enter value between -180 to 180\" \r\n                    name=\"Longitude\"\r\n                    value={element[0]}\r\n                    onChange={(event) => onElementLongitudeChange(event, index)} />\r\n                </FormControl>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={(event) => handleDeleteNode(event, index)} fullWidth id={deleteBtnId}>\r\n                  Delete Node {index + 1}\r\n                </Button>\r\n              </Paper>\r\n            );\r\n          })\r\n        }\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleNewNode} fullWidth> \r\n          Add Node\r\n        </Button>\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleEditPath}>\r\n            {isProcessing && <CircularProgress size={24} color='secondary' disableShrink />}\r\n            {!isProcessing && 'Finish Edit'}\r\n        </Button>\r\n        \r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleCancelEdit}>\r\n            {isProcessing && <CircularProgress size={24} color='primary' disableShrink />}\r\n            {!isProcessing && 'Cancel Edit'}\r\n        </Button>\r\n    </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper hidden={value !== index} square style={{padding: \"20px\", maxHeight: \"calc(100vh - 50px)\", overflow: 'auto'}} elevation={0}>\r\n      <Typography variant=\"h5\">\r\n        {isEdit ? \"Edit Path\" : \"Path List\"}\r\n      </Typography>\r\n      {\r\n        !isEdit && paths.map((element, index) => {\r\n          return(\r\n            <Paper style={{marginTop: \"10px\", marginBottom: \"10px\", padding:\"10px\"}}  elevation={2}>\r\n              <IconButton>\r\n                {isProcessing ? <CircularProgress style={{color: \"white\"}}size={24} color='secondary' disableShrink /> : <MyLocationIcon />}\r\n              </IconButton>\r\n              <IconButton color=\"primary\" onClick={() => handleEditPathMode(element)}>\r\n                {isProcessing ? <CircularProgress size={24} color='primary' disableShrink /> : <EditIcon />}\r\n              </IconButton>\r\n              <IconButton color=\"secondary\" onClick={() => handleDeletePath(element, index)}>\r\n                {isProcessing ? <CircularProgress size={24} color='secondary' disableShrink /> : <DeleteIcon />}\r\n              </IconButton>\r\n              <Typography variant=\"h6\">\r\n                {element.isAirPlane ? <AirplanemodeActiveIcon/> : <CommuteIcon/>} \r\n                {element.path_name === null ? \"Unnamed path\" : element.path_name}\r\n              </Typography>\r\n            </Paper>\r\n          );\r\n        })\r\n      }\r\n      {\r\n        isEdit && getEditPathContent()\r\n      }\r\n    </Paper>\r\n  );\r\n}\r\n \r\nexport default EditPathsTab;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport NewLandmarkTab from './NewLandmarkTab';\r\nimport NewPathTab from './NewPathTab';\r\nimport EditLandmarksTab from './EditLandmarksTab';\r\nimport EditPathsTab from './EditPathsTab';\r\n\r\nfunction OtherFeatureTab({value, index, drawerValue, invalidateAuth, setLandmarks, setTempLandmark, setPaths, newPathHandler, setEditLandmark, updateLandmarks, deleteLandmark, landmarks, toInformationTab, paths, setEditPath, editPath, deletePath}) {\r\n  return (\r\n    <div hidden={value !== index}>\r\n      <NewLandmarkTab setLandmarks={setLandmarks} \r\n        value={drawerValue} \r\n        index={0} \r\n        setTempLandmark={setTempLandmark} \r\n        invalidateAuth={invalidateAuth}/>\r\n      <EditLandmarksTab \r\n        value={drawerValue} \r\n        index={1} \r\n        invalidateAuth={invalidateAuth} \r\n        setEditLandmark={setEditLandmark} \r\n        updateLandmarks={updateLandmarks} deleteLandmark={deleteLandmark}\r\n        landmarks={landmarks}\r\n        toInformationTab={toInformationTab}/>\r\n      <NewPathTab setPaths={setPaths} \r\n        value={drawerValue} \r\n        index={2} \r\n        setTempPath={newPathHandler} \r\n        invalidateAuth={invalidateAuth}/>\r\n      <EditPathsTab\r\n        value={drawerValue} \r\n        index={3} \r\n        invalidateAuth={invalidateAuth} \r\n        setEditPath={setEditPath} \r\n        updateLandmarks={updateLandmarks}\r\n        paths={paths}\r\n        editPath={editPath}\r\n        deletePath={deletePath}\r\n        setPaths={setPaths}/>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default OtherFeatureTab;","import './App.css';\r\nimport Globe from './Globe';\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport { Box, Button, Divider, Drawer, Grid, IconButton, List, ListItem, ListItemText, Menu, MenuItem, Paper, Toolbar, Typography } from '@material-ui/core';\r\nimport LandmarkInfo from './LandmarkInfo';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport OtherFeatureTab from './OtherFeatureTab';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport {  Redirect } from \"react-router-dom\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PaletteIcon from '@material-ui/icons/Palette';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport ListIcon from '@material-ui/icons/List';\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: {\r\n    padding: 20,\r\n    fontWeight: \"bold\"\r\n  },\r\n  toolbarMenu: {\r\n    paddingTop: 20,\r\n    paddingLeft: 20,\r\n    fontWeight: \"bold\"\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"#11255c\"\r\n  },\r\n  globeGrid: {\r\n    flexGrow: 1,\r\n  },\r\n  rightPanel: {\r\n    // padding: 60, \r\n    height:\"100vh\",\r\n    // borderLeft: 1\r\n  },\r\n}));\r\n\r\nfunction Dashboard() {\r\n  // const classes = useStyles();\r\n  const classes = useStyles();\r\n  //States\r\n  const [scale, setScale] = useState(1);\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  const [isAuth, setIsAuth] = useState(true);\r\n  const [paths, setPaths] = useState([]);\r\n  const [landmarks, setLandmarks] = useState([]);\r\n  const [subSolarCoordinates, setSubSolarCoordinates] = useState([0, 0]);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const [isPathsLoaded, setIsPathsLoaded] = useState(false);\r\n  const [isLandmarksLoaded, setIsLandmarksLoaded] = useState(false);\r\n  const [isSubSolarLoaded, setIsSubsolarLoaded] = useState(false);\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n  const [drawerValue, setDrawerValue] = useState(0);\r\n\r\n  const [currentLandmark, setCurrentLandmark] = useState([{\r\n    landmark_uid: -1,\r\n    name: \"\",\r\n    description: \"\",\r\n    coordinates: [0, 0],\r\n    isVisible: false\r\n  }]);\r\n  const [tempPath, setTempPath] = useState([{\r\n    type: \"LineString\", \r\n    coordinates: [],\r\n    isAirPlane: true\r\n  }]);\r\n  const [tempLandmark, setTempLandmark] = useState([{\r\n    coordinates: [0, 0],\r\n    isVisible: false\r\n  }]);\r\n  const [editLandmark, setEditLandmark] = useState([{\r\n    coordinates: [0, 0],\r\n    isVisible: false\r\n  }]);\r\n  const [editPath, setEditPath] = useState({\r\n    type: \"LineString\",\r\n    coordinates: [],\r\n    id: \"\",\r\n    path_uid: -1,\r\n    isAirPlane: true\r\n  });\r\n\r\n  // const clientHeight = document.getElementById('globeGrid').clientHeight;\r\n\r\n  /**\r\n   * Handles the scale change.\r\n   * @param {*} event - the event of the scale change\r\n   * @param {number} newValue - the value used to change the scale\r\n   */\r\n  // const handleChangeScale = (event, newValue) => {\r\n  //   setScale(newValue);\r\n  // };\r\n\r\n  /**\r\n   * Gets the minimum dimension of the browser window.\r\n   */\r\n  const getMinDimension = () => {\r\n    // console.log(\"dimension calculated\");\r\n    return Math.min(windowSize.height, windowSize.width);\r\n  };\r\n\r\n  /**\r\n   * Handle's the tab change.\r\n   * @param {*} event - the event of the tab change\r\n   * @param {number} newValue - the value used to change the tab\r\n   */\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const toInformationTab = (landmark) => {\r\n    setTabValue(0);\r\n    setCurrentLandmark([{...landmark, isVisible: true}]);\r\n  };\r\n\r\n  const sortPaths = (a, b) => { \r\n    if(a[\"path_name\"] === null && b[\"path_name\"] === null){\r\n      return 0;\r\n    }\r\n    else if(a[\"path_name\"] === null){\r\n      return 1;\r\n    }\r\n    else if(b[\"path_name\"] === null){\r\n      return -1;\r\n    }\r\n    else if(a[\"path_name\"] > b[\"path_name\"]){\r\n      return 1;\r\n    }\r\n    else if(a[\"path_name\"] < b[\"path_name\"]){\r\n      return -1;\r\n    }\r\n    return 0;  \r\n  }\r\n\r\n  /**\r\n   * Gets the user's paths from the database.\r\n   */\r\n  const getUserPaths = () => {\r\n    fetch(`/paths`, {\r\n      headers: {\r\n        'authorization' : `Bearer ${localStorage.getItem('token')}` \r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      res.sort(sortPaths);\r\n      setPaths(res);\r\n      setIsPathsLoaded(true);\r\n    })\r\n    .catch((error) => {\r\n      invalidateAuth();\r\n    });\r\n  };\r\n\r\n  const sortLandmarks = (a, b) => {  \r\n    if (a[\"name\"] > b[\"name\"]) {    \r\n        return 1;    \r\n    } else if (a[\"name\"] < b[\"name\"]) {    \r\n        return -1;    \r\n    }    \r\n    return 0;  \r\n  }\r\n\r\n  /**\r\n   * Gets the user's landmarks from the database.\r\n   */\r\n  const getUserLandmarks = () => {\r\n    fetch(`/landmarks`, {\r\n      headers: {\r\n        'authorization' : `Bearer ${localStorage.getItem('token')}` \r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      res.sort(sortLandmarks);\r\n      setLandmarks(res);\r\n      setIsLandmarksLoaded(true);\r\n    })\r\n    .catch((error) => {\r\n      invalidateAuth();\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Invalidates the authorization of the user.\r\n   */\r\n  const invalidateAuth = () => {\r\n    localStorage.removeItem('token');\r\n    setIsAuth(false);\r\n  };\r\n\r\n  /**\r\n   * Gets the subsolar point from the backend.\r\n   */\r\n  const getSubsolarPoint = () => {\r\n    fetch(`/sun`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      setSubSolarCoordinates([res.longitude, res.latitude]);\r\n      setIsSubsolarLoaded(true);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Updates the front end landmark.\r\n   * @param {*} landmark - the landmark to be updated\r\n   */\r\n  const updateLandmarks = (landmark) => {\r\n    let items = [...landmarks];\r\n    for(var i = 0; i < items.length; i++){\r\n      if(items[i].landmark_uid === landmark.landmark_uid){\r\n        let itemToUpdate = {...items[i]};\r\n\r\n        itemToUpdate.name = landmark.name;\r\n        itemToUpdate.description = landmark.description;\r\n        itemToUpdate.coordinates = landmark.coordinates;\r\n\r\n        items[i] = itemToUpdate;\r\n\r\n        setLandmarks(items);\r\n        setCurrentLandmark([{\r\n          landmark_uid: landmark.landmark_uid,\r\n          name: landmark.name,\r\n          description: landmark.description,\r\n          coordinates: landmark.coordinates,\r\n          isVisible: true\r\n        }]);\r\n        setEditLandmark([{\r\n          coordinates: [0, 0],\r\n          isVisible: false\r\n        }]);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Deletes the frontend landmark.\r\n   * @param {number} landmark_uid - the landmark UID to be deleted.\r\n   */\r\n  const deleteLandmark = (landmark_uid) => {\r\n    let items = [...landmarks];\r\n    var index = -1;\r\n    for(var i = 0; i < items.length; i++){\r\n      if(items[i].landmark_uid === landmark_uid){\r\n        index = i;\r\n      }\r\n    }\r\n    if(index !== -1){\r\n      items.splice(index, 1);\r\n      setLandmarks(items);\r\n      setCurrentLandmark([{\r\n        landmark_uid: -1,\r\n        name: \"\",\r\n        description: \"\",\r\n        coordinates: [0, 0],\r\n        isVisible: false\r\n      }]);\r\n      setEditLandmark([{\r\n        coordinates: [0, 0],\r\n        isVisible: false\r\n      }]);\r\n    }\r\n  };\r\n\r\n  const deletePath = (index) => {\r\n    let pathsCopy = [...paths];\r\n    pathsCopy.splice(index, 1);\r\n    setPaths(pathsCopy);\r\n    var editPath = [{\r\n      type: \"LineString\",\r\n      coordinates: [],\r\n      isAirPlane: false\r\n    }];\r\n    setEditPath(editPath);\r\n  };\r\n\r\n  /**\r\n   * Handles a new path called by the NewPathTab.\r\n   * @param {*} newPath - the new temp path to compare against the previous state\r\n   */\r\n  const newPathHandler = (newPath) => {\r\n    let isSameLength = newPath[0].coordinates.length === tempPath[0].coordinates.length;\r\n    let isAirPlaneSame = newPath[0].isAirPlane === tempPath[0].isAirPlane;\r\n    let isCoordinatesSame = true;\r\n    if(isSameLength){\r\n      for(var i = 0; i < newPath[0].coordinates.length; i++){\r\n        if(newPath[0].coordinates[i][0] !== tempPath[0].coordinates[i][0] || newPath[0].coordinates[i][1] !== tempPath[0].coordinates[i][1]){\r\n          isCoordinatesSame = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(!isSameLength || !isAirPlaneSame || !isCoordinatesSame){\r\n      setTempPath(newPath);\r\n    }\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const onAccountMenuClicked = (index) => {\r\n    if(index === 1){\r\n      invalidateAuth();\r\n    }\r\n  };\r\n\r\n  const changeDrawerFeatureHandler = (value) => {\r\n    setDrawerValue(value);\r\n    setTabValue(1);\r\n  }\r\n\r\n // Use effect hook.\r\n  useEffect(() => {\r\n    getUserLandmarks();\r\n    getUserPaths();\r\n    getSubsolarPoint();\r\n    const interval = setInterval(() => {\r\n      getSubsolarPoint();\r\n    }, 2 * 60000);\r\n\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    \r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n    \r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize();\r\n    \r\n    // Remove event listener on cleanup\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n      clearInterval(interval);\r\n    };\r\n    // return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  /**\r\n   * Gets the dashboard content.\r\n   */\r\n  const getDashboardContent = () => {\r\n    if(isAuth){\r\n      return (\r\n        <Grid container spacing={0} style={{width: `calc(100% - ${drawerWidth}px)`, marginLeft: drawerWidth}}>\r\n          <Grid item align='center' style={{ padding: \"1vh\", height:\"100vh\", flexGrow: 1}}>\r\n            {isLandmarksLoaded && isPathsLoaded && isSubSolarLoaded ? \r\n              <Globe scale={scale * getMinDimension()*0.98/2} \r\n              paths={paths} \r\n              landmarks={landmarks} \r\n              landmarkHandler={setCurrentLandmark} \r\n              size={getMinDimension()*0.98} \r\n              tempPath={tempPath}\r\n              tempLandmark={tempLandmark}\r\n              currentLandmark={currentLandmark}\r\n              editLandmark={editLandmark}\r\n              subSolarCoordinates={subSolarCoordinates}\r\n              setScale={setScale}\r\n              editPath={editPath}/> : \r\n              <Skeleton variant=\"circle\" width={\"98vh\"} height={\"98vh\"}/>\r\n            }\r\n          </Grid>\r\n          <Grid item xs={4} align=\"left\">\r\n            <Paper elevation={0} square className={classes.rightPanel}>\r\n              <AppBar position=\"static\">\r\n                <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"simple tabs example\" variant=\"fullWidth\">\r\n                  <Tab style={{ minWidth: 25 }} icon={<InfoIcon/>}/>\r\n                  <Tab style={{ minWidth: 25 }} icon={<MoreHorizIcon/>}/>\r\n                </Tabs>\r\n              </AppBar>\r\n              <LandmarkInfo currentLandmark={currentLandmark} \r\n                value={tabValue} \r\n                index={0}/>\r\n              <OtherFeatureTab value={tabValue} \r\n                index={1} \r\n                drawerValue={drawerValue}\r\n                invalidateAuth={invalidateAuth}\r\n                landmarks={landmarks}\r\n                setLandmarks={setLandmarks}\r\n                setTempLandmark={setTempLandmark}\r\n                setPaths={setPaths}\r\n                newPathHandler={newPathHandler}\r\n                setEditLandmark={setEditLandmark} \r\n                updateLandmarks={updateLandmarks}  \r\n                deleteLandmark={deleteLandmark} \r\n                toInformationTab={toInformationTab}\r\n                paths={paths}\r\n                setEditPath={setEditPath}\r\n                editPath={editPath}\r\n                deletePath={deletePath}/>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    }\r\n    else{\r\n      return (<Redirect to={{pathname:'/loggedOut'}}/>);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\" className={classes.root}>\r\n      <Drawer \r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={true} \r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}>\r\n        <Typography className={classes.toolbar}>\r\n          Wanderlust\r\n        </Typography>\r\n        <Divider/>\r\n        <Typography className={classes.toolbarMenu}>\r\n          Landmark\r\n        </Typography>\r\n        <List>\r\n          {['New Landmark', 'Landmark List'].map((text, index) => (\r\n            <ListItem button key={text} onClick={() => changeDrawerFeatureHandler(index)}>\r\n              <ListItemIcon>{index === 1 ? <ListIcon/> : <AddIcon/>}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider/>\r\n        <Typography className={classes.toolbarMenu}>\r\n          Path\r\n        </Typography>\r\n        <List>\r\n          {['New Path', 'Path List'].map((text, index) => (\r\n            <ListItem button key={text} onClick={() => changeDrawerFeatureHandler(index + 2)}>\r\n              <ListItemIcon>{index === 1 ? <ListIcon/> : <AddIcon/>}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider/>\r\n        <Typography className={classes.toolbarMenu}>\r\n          Account\r\n        </Typography>\r\n        <List>\r\n          {['Preferences', 'Log Out'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index === 1 ? <ExitToAppIcon/> : <PaletteIcon/>}</ListItemIcon>\r\n              <ListItemText primary={text} onClick={() => onAccountMenuClicked(index)}/>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      {getDashboardContent()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","export default __webpack_public_path__ + \"static/media/landing.35abeff8.png\";","//Imports from libraries\r\nimport { Button, TextField, Typography, Toolbar, Grid, CircularProgress } from \"@material-ui/core\";\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport {  Redirect, Link } from \"react-router-dom\";\r\nimport Image from './landing.png'; // Import using relative path\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n      color: \"#7096ff\", \r\n      textDecoration: \"none\", \r\n      fontSize: \"17px\", \r\n      fontWeight: \"bold\"\r\n  },\r\n}));\r\n\r\nfunction SignIn() {\r\n  const classes = useStyles();\r\n  //States\r\n  const [isTokenValid, setIsTokenValid] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  /**\r\n   * Handles the change in username.\r\n   * @param {*} event - the event for the username change\r\n   */\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles the change in password.\r\n   * @param {*} event - the event for the password change\r\n   */\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles the signing in.\r\n   */\r\n  const handleSignIn = () => {\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    setIsProcessing(true);\r\n\r\n    const body = {\r\n      \"username\": username,\r\n      \"password\": password\r\n    }\r\n    \r\n    fetch(`/users/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      localStorage.setItem('token', res.token);\r\n      setIsTokenValid(true);\r\n      setIsProcessing(false);\r\n    })\r\n    .catch((error) => {\r\n      alert(\"Invalid credentials!\");\r\n      setIsProcessing(false);\r\n    });\r\n  };\r\n\r\n  //Use effect hook.\r\n  useEffect(() => {\r\n    if(localStorage.getItem('token') !== null){\r\n      fetch(`/users/checkToken`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'authorization' : `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if(res.isTokenValid){\r\n          setIsTokenValid(true);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Gets the SignIn page content.\r\n   */\r\n  const getSignInContent = () => {\r\n    if(isTokenValid){\r\n      return (<Redirect to={{pathname:'/dashboard'}}/>);\r\n    }\r\n    else{\r\n      return (\r\n        <div>\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={8} style={{ padding: 60, backgroundImage: `url(${Image})`, backgroundSize: 'cover', height: '100vh' }}>\r\n              <Typography component=\"h1\" variant=\"h3\">\r\n                Record Your Travels. Personalize Your Globe.\r\n              </Typography>\r\n              <Typography component=\"h1\" variant=\"h6\">\r\n                Wanderlust allows you to revisit places you have been to and even the journey you took to get there. With a clean design, you can see the globe in real time and take things into perspective.\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={4} style={{ padding: 60 }}>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign In\r\n              </Typography>\r\n              <form>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                  autoFocus\r\n                  value={username}\r\n                  onChange={handleUsernameChange}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  value={password}\r\n                  onChange={handlePasswordChange}\r\n                />\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSignIn}\r\n                >\r\n                  {isProcessing && <CircularProgress size={24} color='secondary' disableShrink />}\r\n                  {!isProcessing && 'Sign In'}\r\n                </Button>\r\n              </form>\r\n              <br/>\r\n              <Link to=\"/signUp\" className={classes.link}>Don't have an account? Sign up</Link>\r\n            </Grid>\r\n          </Grid>\r\n          \r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {getSignInContent()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;","//Imports from libraries\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\n// import AppBar from '@material-ui/core/AppBar';\r\nimport { Typography, Toolbar, Grid } from \"@material-ui/core\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    link: {\r\n        padding: 60, \r\n        color: \"#7096ff\", \r\n        textDecoration: \"none\", \r\n        fontSize: \"17px\", \r\n        fontWeight: \"bold\"\r\n    },\r\n    timerIcon: {\r\n        width: \"30%\",\r\n        height: \"30%\"\r\n    },\r\n}));\r\n\r\nfunction LoggedOut() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Grid container \r\n                    spacing={0}\r\n                    align=\"center\"\r\n                    justify=\"center\"\r\n                    direction=\"column\" style={{ height:\"100vh\", flexGrow: 1}}>\r\n                <Grid item>\r\n                    <ScheduleIcon className={classes.timerIcon}/>\r\n                    <Typography variant=\"h4\" style={{ padding: 60 }}>\r\n                        Session has expired. Please sign back in.\r\n                    </Typography>\r\n                    <Link to=\"/\" className={classes.link}>Back to Sign In</Link>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoggedOut;","//Imports from libraries\r\nimport { Button, Container, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { Component, useState, useRef, useEffect } from \"react\";\r\nimport {  Redirect, Link } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport SignalCellular0BarIcon from '@material-ui/icons/SignalCellular0Bar';\r\nimport SignalCellular1BarIcon from '@material-ui/icons/SignalCellular1Bar';\r\nimport SignalCellular2BarIcon from '@material-ui/icons/SignalCellular2Bar';\r\nimport SignalCellular3BarIcon from '@material-ui/icons/SignalCellular3Bar';\r\nimport SignalCellular4BarIcon from '@material-ui/icons/SignalCellular4Bar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: \"column\",\r\n    alignItems: 'center',\r\n    maxWidth: '700px',\r\n    marginTop: '30%'\r\n  },\r\n  form: {\r\n    width: '100%'\r\n  },\r\n  link: {\r\n      color: \"#7096ff\", \r\n      textDecoration: \"none\", \r\n      fontSize: \"17px\", \r\n      fontWeight: \"bold\"\r\n  },\r\n  checkIcon: {\r\n    color: \"green\"\r\n  },\r\n  clearIcon: {\r\n    color: \"red\"\r\n  },\r\n  hint: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    fontSize: \"15px\"\r\n  },\r\n  veryWeakStrength: {\r\n    color: \"red\"\r\n  },\r\n  weakStrength: {\r\n    color: \"orange\"\r\n  },\r\n  fairStrength: {\r\n    color: \"yellow\"\r\n  },\r\n  goodStrength: {\r\n    color: \"lime\"\r\n  },\r\n  strongStrength: {\r\n    color: \"green\"\r\n  }\r\n}));\r\n\r\nfunction SignUp() {\r\n  const classes = useStyles();\r\n  //States\r\n  // const [isTokenValid, setIsTokenValid] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isUsernameTaken, setIsUsernameTaken] = useState(false);\r\n\r\n  /**\r\n   * Checks if a string has a number.\r\n   * @param {String} value - the string used to check if it has a number\r\n   */\r\n  const hasNumber = value => {\r\n    return new RegExp(/[0-9]/).test(value);\r\n  }\r\n\r\n  /**\r\n   * Checks if a string has mixed caps.\r\n   * @param {String} value - the string used to check if it has mixed caps\r\n   */\r\n  const hasMixed = value => {\r\n    return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\r\n  }\r\n\r\n  /**\r\n   * Checks if a string has special characters\r\n   * @param {*} value - the string used to check if it has special characters\r\n   */\r\n  const hasSpecial = value => {\r\n    return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\r\n  }\r\n\r\n  /**\r\n   * Gets the human readable value of a password strength.\r\n   * @param {number} count - the password strength\r\n   */\r\n  const strengthMagnitude = count => {\r\n    if (count < 2)\r\n       return 'Very Weak';\r\n    if (count < 3)\r\n       return 'Weak';\r\n    if (count < 4)\r\n       return 'Fair';\r\n    if (count < 5)\r\n       return 'Good';\r\n    if (count < 6)\r\n       return 'Strong';\r\n  }\r\n\r\n  /**\r\n   * Gets the strength of a password.\r\n   * @param {String} value - the string used to check the strenght of a password\r\n   */\r\n  const strengthIndicator = value => {\r\n    let strengths = 0;\r\n    if (value.length > 5)\r\n       strengths++;\r\n    if (value.length > 7)\r\n       strengths++;\r\n    if (hasNumber(value))\r\n       strengths++;\r\n    if (hasSpecial(value))\r\n       strengths++;\r\n    if (hasMixed(value))\r\n       strengths++;\r\n    return strengthMagnitude(strengths);\r\n  }\r\n\r\n  const renderPasswordStrength = value => {\r\n    switch(value){\r\n      case 'Very Weak':\r\n        return (<SignalCellular0BarIcon className={classes.veryWeakStrength}/>);\r\n      case 'Weak':\r\n        return (<SignalCellular1BarIcon className={classes.weakStrength}/>);\r\n      case 'Fair':\r\n        return (<SignalCellular2BarIcon className={classes.fairStrength}/>);\r\n      case 'Good':\r\n        return (<SignalCellular3BarIcon className={classes.goodStrength}/>);\r\n      default:\r\n        return (<SignalCellular4BarIcon className={classes.strongStrength}/>);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles the username change.\r\n   * @param {*} event - the event for the username change\r\n   */\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n    getUsernameStatus(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles the password change.\r\n   * @param {*} event - the event for the password change\r\n   */\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles the email change.\r\n   * @param {*} event - the event for the email change\r\n   */\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Gets the availability of the username\r\n   * @param {String} value - the string used to check the availability of a username\r\n   */\r\n  const getUsernameStatus = (value) => {\r\n    fetch(`/users/exists?username=${value}`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      setIsUsernameTaken(res.isexist === \"true\" ? true : false);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Handles the user signing up.\r\n   */\r\n  const handleSignUp = () => {\r\n    if(email === \"\" || password === \"\" || username === \"\"){\r\n      alert(\"At least one field is empty!\");\r\n    }\r\n    else{\r\n      const body = {\r\n        \"email\": email,\r\n        \"password\" : password,\r\n        \"username\" : username\r\n      }\r\n  \r\n      fetch(`/users/create`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n        setEmail(\"\");\r\n        alert(\"A new user has been made!\");\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error);\r\n        alert(\"The username already exists! Please create an unowned username.\");\r\n      });\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if(localStorage.getItem('token') !== null){\r\n  //     fetch(`/users/checkToken`, {\r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //         'authorization' : `Bearer ${localStorage.getItem('token')}`\r\n  //       },\r\n  //     })\r\n  //     .then(res => res.json())\r\n  //     .then(res => {\r\n  //       if(res.isTokenValid){\r\n  //         setIsTokenValid(true);\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <div className={classes.root}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign Up\r\n        </Typography>\r\n        <form className={classes.form}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={handleEmailChange}\r\n            className={classes.textField}\r\n          />\r\n          <br/>\r\n          <br/>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            autoComplete=\"username\"\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n            className={classes.textField}\r\n          />\r\n          <br/>\r\n          <Typography className={classes.hint}>\r\n            Username Status: {isUsernameTaken ? \"Taken\" : \"Available\"}\r\n            {isUsernameTaken ? <ClearIcon className={classes.clearIcon}/> : <CheckIcon className={classes.checkIcon}/>}\r\n          </Typography>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n            className={classes.textField}\r\n          />\r\n          <br/>\r\n          <Typography className={classes.hint}>\r\n            Password Strength: {strengthIndicator(password)}\r\n            {renderPasswordStrength(strengthIndicator(password))}\r\n          </Typography>\r\n          <br/>\r\n          <Button\r\n            // type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSignUp}\r\n            className={classes.textField}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </form>\r\n        <br/>\r\n        <Grid container justify=\"flex-start\">\r\n          <Grid item>\r\n            <Link className={classes.link} to=\"/\">Back to sign in screen</Link>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUp;","import './App.css';\nimport React, { Component, useState, useRef, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Dashboard from './Dashboard';\nimport SignIn from './SignIn';\nimport LoggedOut from './LoggedOut';\nimport SignUp from './SignUp';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  }\n});\n\nfunction App() {\n  \n  useEffect(() => {\n    document.title = 'Wanderlust';\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline/>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path='/' component={SignIn}/>\n          <Route exact path='/dashboard' component={Dashboard}/>\n          <Route exact path='/loggedOut' component={LoggedOut}/>\n          <Route exact path='/signUp' component={SignUp}/>\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}